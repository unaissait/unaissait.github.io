(("undefined" != typeof global ? global : self).webpackJsonp = ("undefined" != typeof global ? global : self).webpackJsonp || []).push([ [ 16 ], {
    1003: function(t, e, i) {
        "use strict";
        var r = i(1402), n = i(1403);
        function s() {
            this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, 
            this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, 
            this.path = null, this.href = null;
        }
        e.parse = m, e.resolve = function(t, e) {
            return m(t, !1, !0).resolve(e);
        }, e.resolveObject = function(t, e) {
            return t ? m(t, !1, !0).resolveObject(e) : e;
        }, e.format = function(t) {
            n.isString(t) && (t = m(t));
            return t instanceof s ? t.format() : s.prototype.format.call(t);
        }, e.Url = s;
        var o = /^([a-z0-9.+-]+:)/i, a = /:[0-9]*$/, h = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, c = [ "{", "}", "|", "\\", "^", "`" ].concat([ "<", ">", '"', "`", " ", "\r", "\n", "\t" ]), l = [ "'" ].concat(c), u = [ "%", "/", "?", ";", "#" ].concat(l), f = [ "/", "?", "#" ], d = /^[+a-z0-9A-Z_-]{0,63}$/, p = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, g = {
            javascript: !0,
            "javascript:": !0
        }, v = {
            javascript: !0,
            "javascript:": !0
        }, b = {
            http: !0,
            https: !0,
            ftp: !0,
            gopher: !0,
            file: !0,
            "http:": !0,
            "https:": !0,
            "ftp:": !0,
            "gopher:": !0,
            "file:": !0
        }, _ = i(1404);
        function m(t, e, i) {
            if (t && n.isObject(t) && t instanceof s) return t;
            var r = new s();
            return r.parse(t, e, i), r;
        }
        s.prototype.parse = function(t, e, i) {
            if (!n.isString(t)) throw new TypeError("Parameter 'url' must be a string, not " + typeof t);
            var s = t.indexOf("?"), a = -1 !== s && s < t.indexOf("#") ? "?" : "#", c = t.split(a);
            c[0] = c[0].replace(/\\/g, "/");
            var m = t = c.join(a);
            if (m = m.trim(), !i && 1 === t.split("#").length) {
                var y = h.exec(m);
                if (y) return this.path = m, this.href = m, this.pathname = y[1], y[2] ? (this.search = y[2], 
                this.query = e ? _.parse(this.search.substr(1)) : this.search.substr(1)) : e && (this.search = "", 
                this.query = {}), this;
            }
            var x = o.exec(m);
            if (x) {
                var C = (x = x[0]).toLowerCase();
                this.protocol = C, m = m.substr(x.length);
            }
            if (i || x || m.match(/^\/\/[^@\/]+@[^@\/]+/)) {
                var w = "//" === m.substr(0, 2);
                !w || x && v[x] || (m = m.substr(2), this.slashes = !0);
            }
            if (!v[x] && (w || x && !b[x])) {
                for (var S, O, T = -1, k = 0; k < f.length; k++) {
                    -1 !== (j = m.indexOf(f[k])) && (-1 === T || j < T) && (T = j);
                }
                -1 !== (O = -1 === T ? m.lastIndexOf("@") : m.lastIndexOf("@", T)) && (S = m.slice(0, O), 
                m = m.slice(O + 1), this.auth = decodeURIComponent(S)), T = -1;
                for (k = 0; k < u.length; k++) {
                    var j;
                    -1 !== (j = m.indexOf(u[k])) && (-1 === T || j < T) && (T = j);
                }
                -1 === T && (T = m.length), this.host = m.slice(0, T), m = m.slice(T), this.parseHost(), 
                this.hostname = this.hostname || "";
                var L = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
                if (!L) for (var E = this.hostname.split(/\./), P = (k = 0, E.length); k < P; k++) {
                    var M = E[k];
                    if (M && !M.match(d)) {
                        for (var A = "", D = 0, I = M.length; D < I; D++) M.charCodeAt(D) > 127 ? A += "x" : A += M[D];
                        if (!A.match(d)) {
                            var R = E.slice(0, k), F = E.slice(k + 1), W = M.match(p);
                            W && (R.push(W[1]), F.unshift(W[2])), F.length && (m = "/" + F.join(".") + m), this.hostname = R.join(".");
                            break;
                        }
                    }
                }
                this.hostname.length > 255 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), 
                L || (this.hostname = r.toASCII(this.hostname));
                var X = this.port ? ":" + this.port : "", B = this.hostname || "";
                this.host = B + X, this.href += this.host, L && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), 
                "/" !== m[0] && (m = "/" + m));
            }
            if (!g[C]) for (k = 0, P = l.length; k < P; k++) {
                var Y = l[k];
                if (-1 !== m.indexOf(Y)) {
                    var N = encodeURIComponent(Y);
                    N === Y && (N = escape(Y)), m = m.split(Y).join(N);
                }
            }
            var z = m.indexOf("#");
            -1 !== z && (this.hash = m.substr(z), m = m.slice(0, z));
            var H = m.indexOf("?");
            if (-1 !== H ? (this.search = m.substr(H), this.query = m.substr(H + 1), e && (this.query = _.parse(this.query)), 
            m = m.slice(0, H)) : e && (this.search = "", this.query = {}), m && (this.pathname = m), 
            b[C] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
                X = this.pathname || "";
                var U = this.search || "";
                this.path = X + U;
            }
            return this.href = this.format(), this;
        }, s.prototype.format = function() {
            var t = this.auth || "";
            t && (t = (t = encodeURIComponent(t)).replace(/%3A/i, ":"), t += "@");
            var e = this.protocol || "", i = this.pathname || "", r = this.hash || "", s = !1, o = "";
            this.host ? s = t + this.host : this.hostname && (s = t + (-1 === this.hostname.indexOf(":") ? this.hostname : "[" + this.hostname + "]"), 
            this.port && (s += ":" + this.port)), this.query && n.isObject(this.query) && Object.keys(this.query).length && (o = _.stringify(this.query));
            var a = this.search || o && "?" + o || "";
            return e && ":" !== e.substr(-1) && (e += ":"), this.slashes || (!e || b[e]) && !1 !== s ? (s = "//" + (s || ""), 
            i && "/" !== i.charAt(0) && (i = "/" + i)) : s || (s = ""), r && "#" !== r.charAt(0) && (r = "#" + r), 
            a && "?" !== a.charAt(0) && (a = "?" + a), e + s + (i = i.replace(/[?#]/g, function(t) {
                return encodeURIComponent(t);
            })) + (a = a.replace("#", "%23")) + r;
        }, s.prototype.resolve = function(t) {
            return this.resolveObject(m(t, !1, !0)).format();
        }, s.prototype.resolveObject = function(t) {
            if (n.isString(t)) {
                var e = new s();
                e.parse(t, !1, !0), t = e;
            }
            for (var i = new s(), r = Object.keys(this), o = 0; o < r.length; o++) {
                var a = r[o];
                i[a] = this[a];
            }
            if (i.hash = t.hash, "" === t.href) return i.href = i.format(), i;
            if (t.slashes && !t.protocol) {
                for (var h = Object.keys(t), c = 0; c < h.length; c++) {
                    var l = h[c];
                    "protocol" !== l && (i[l] = t[l]);
                }
                return b[i.protocol] && i.hostname && !i.pathname && (i.path = i.pathname = "/"), 
                i.href = i.format(), i;
            }
            if (t.protocol && t.protocol !== i.protocol) {
                if (!b[t.protocol]) {
                    for (var u = Object.keys(t), f = 0; f < u.length; f++) {
                        var d = u[f];
                        i[d] = t[d];
                    }
                    return i.href = i.format(), i;
                }
                if (i.protocol = t.protocol, t.host || v[t.protocol]) i.pathname = t.pathname; else {
                    for (var p = (t.pathname || "").split("/"); p.length && !(t.host = p.shift()); ) ;
                    t.host || (t.host = ""), t.hostname || (t.hostname = ""), "" !== p[0] && p.unshift(""), 
                    p.length < 2 && p.unshift(""), i.pathname = p.join("/");
                }
                if (i.search = t.search, i.query = t.query, i.host = t.host || "", i.auth = t.auth, 
                i.hostname = t.hostname || t.host, i.port = t.port, i.pathname || i.search) {
                    var g = i.pathname || "", _ = i.search || "";
                    i.path = g + _;
                }
                return i.slashes = i.slashes || t.slashes, i.href = i.format(), i;
            }
            var m = i.pathname && "/" === i.pathname.charAt(0), y = t.host || t.pathname && "/" === t.pathname.charAt(0), x = y || m || i.host && t.pathname, C = x, w = i.pathname && i.pathname.split("/") || [], S = (p = t.pathname && t.pathname.split("/") || [], 
            i.protocol && !b[i.protocol]);
            if (S && (i.hostname = "", i.port = null, i.host && ("" === w[0] ? w[0] = i.host : w.unshift(i.host)), 
            i.host = "", t.protocol && (t.hostname = null, t.port = null, t.host && ("" === p[0] ? p[0] = t.host : p.unshift(t.host)), 
            t.host = null), x = x && ("" === p[0] || "" === w[0])), y) i.host = t.host || "" === t.host ? t.host : i.host, 
            i.hostname = t.hostname || "" === t.hostname ? t.hostname : i.hostname, i.search = t.search, 
            i.query = t.query, w = p; else if (p.length) w || (w = []), w.pop(), w = w.concat(p), 
            i.search = t.search, i.query = t.query; else if (!n.isNullOrUndefined(t.search)) {
                if (S) i.hostname = i.host = w.shift(), (L = !!(i.host && i.host.indexOf("@") > 0) && i.host.split("@")) && (i.auth = L.shift(), 
                i.host = i.hostname = L.shift());
                return i.search = t.search, i.query = t.query, n.isNull(i.pathname) && n.isNull(i.search) || (i.path = (i.pathname ? i.pathname : "") + (i.search ? i.search : "")), 
                i.href = i.format(), i;
            }
            if (!w.length) return i.pathname = null, i.search ? i.path = "/" + i.search : i.path = null, 
            i.href = i.format(), i;
            for (var O = w.slice(-1)[0], T = (i.host || t.host || w.length > 1) && ("." === O || ".." === O) || "" === O, k = 0, j = w.length; j >= 0; j--) "." === (O = w[j]) ? w.splice(j, 1) : ".." === O ? (w.splice(j, 1), 
            k++) : k && (w.splice(j, 1), k--);
            if (!x && !C) for (;k--; k) w.unshift("..");
            !x || "" === w[0] || w[0] && "/" === w[0].charAt(0) || w.unshift(""), T && "/" !== w.join("/").substr(-1) && w.push("");
            var L, E = "" === w[0] || w[0] && "/" === w[0].charAt(0);
            S && (i.hostname = i.host = E ? "" : w.length ? w.shift() : "", (L = !!(i.host && i.host.indexOf("@") > 0) && i.host.split("@")) && (i.auth = L.shift(), 
            i.host = i.hostname = L.shift()));
            return (x = x || i.host && w.length) && !E && w.unshift(""), w.length ? i.pathname = w.join("/") : (i.pathname = null, 
            i.path = null), n.isNull(i.pathname) && n.isNull(i.search) || (i.path = (i.pathname ? i.pathname : "") + (i.search ? i.search : "")), 
            i.auth = t.auth || i.auth, i.slashes = i.slashes || t.slashes, i.href = i.format(), 
            i;
        }, s.prototype.parseHost = function() {
            var t = this.host, e = a.exec(t);
            e && (":" !== (e = e[0]) && (this.port = e.substr(1)), t = t.substr(0, t.length - e.length)), 
            t && (this.hostname = t);
        };
    },
    1180: function(t, e, i) {
        var r;
        void 0 === (r = function() {
            function t(t, e) {
                return (t.charCodeAt(e + 1) << 8) + t.charCodeAt(e);
            }
            return {
                isAnimatedGif: function(t) {
                    if (!/^GIF8[79]a/.test(t)) return !1;
                    for (var e = 0, i = /\x21\xF9\x04.{4}\x00(\x2C|\x21)/g; i.exec(t); ) if (2 === ++e) return !0;
                    return 0 === e && t.split("\0,").length > 2;
                },
                getDimensions: function(e) {
                    var i = e.substring(0, 6);
                    if (!/^GIF8[79]a/.test(i)) throw new Error("Please provide a GIF encoded image.");
                    if (e.indexOf("\0,") < 0) throw new Error("Please provide a GIF encoded image.");
                    return {
                        width: t(e, 6),
                        height: t(e, 8)
                    };
                },
                getBinaryFromDataUri: function(t) {
                    return atob(t.split(",")[1]);
                },
                isCMYK: function(t) {
                    return this._getChannelCount(t) > 3;
                },
                _getChannelCount: function(t) {
                    var e, i = "getNextByte", r = 0;
                    function n(e) {
                        if (r + e > t.length) return !1;
                        var i = t.substring(r, r + e);
                        return r += e, i;
                    }
                    function s() {
                        return n(1);
                    }
                    function o() {
                        var t, e, i = n(2);
                        return e = 0, ((t = i).charCodeAt(e) << 8) + t.charCodeAt(e + 1);
                    }
                    function a(t) {
                        return "ÿ" === t ? "startOfFrame" : "getNextByte";
                    }
                    function h() {
                        var t = s();
                        return [ "À", "Á", "Â", "Ã", "Å", "Æ", "Ç", "É", "Ê", "Ë", "Í", "Î", "Ï" ].indexOf(t) > -1 ? "readInfo" : "ÿ" === t ? "startOfFrame" : "skipFrame";
                    }
                    if ("ÿØ" !== n(2)) return 0;
                    for (;r < t.length; ) switch (i) {
                      case "getNextByte":
                        if (!1 === (e = s())) return 0;
                        i = a(e);
                        break;

                      case "startOfFrame":
                        i = h();
                        break;

                      case "skipFrame":
                        n(o() - 2), i = "getNextByte";
                        break;

                      case "readInfo":
                        return n(8).charCodeAt(7);
                    }
                }
            };
        }.apply(e, [])) || (t.exports = r);
    },
    1181: function(t, e, i) {
        var r, n, s;
        s = function() {
            "use strict";
            var t, e, i = [ "webkit", "Moz", "ms", "O" ], r = {};
            function n(t, e) {
                var i, r = document.createElement(t || "div");
                for (i in e) r[i] = e[i];
                return r;
            }
            function s(t) {
                for (var e = 1, i = arguments.length; e < i; e++) t.appendChild(arguments[e]);
                return t;
            }
            function o(i, n, s, o) {
                var a = [ "opacity", n, ~~(100 * i), s, o ].join("-"), h = .01 + s / o * 100, c = Math.max(1 - (1 - i) / n * (100 - h), i), l = t.substring(0, t.indexOf("Animation")).toLowerCase(), u = l && "-" + l + "-" || "";
                return r[a] || (e.insertRule("@" + u + "keyframes " + a + "{0%{opacity:" + c + "}" + h + "%{opacity:" + i + "}" + (h + .01) + "%{opacity:1}" + (h + n) % 100 + "%{opacity:" + i + "}100%{opacity:" + c + "}}", e.cssRules.length), 
                r[a] = 1), a;
            }
            function a(t, e) {
                var r, n, s = t.style;
                if (void 0 !== s[e = e.charAt(0).toUpperCase() + e.slice(1)]) return e;
                for (n = 0; n < i.length; n++) if (void 0 !== s[r = i[n] + e]) return r;
            }
            function h(t, e) {
                for (var i in e) t.style[a(t, i) || i] = e[i];
                return t;
            }
            function c(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var i = arguments[e];
                    for (var r in i) void 0 === t[r] && (t[r] = i[r]);
                }
                return t;
            }
            function l(t, e) {
                return "string" == typeof t ? t : t[e % t.length];
            }
            var u, f = {
                lines: 12,
                length: 7,
                width: 5,
                radius: 10,
                scale: 1,
                corners: 1,
                color: "#000",
                opacity: .25,
                rotate: 0,
                direction: 1,
                speed: 1,
                trail: 100,
                fps: 20,
                zIndex: 2e9,
                className: "spinner",
                top: "50%",
                left: "50%",
                shadow: !1,
                hwaccel: !1,
                position: "absolute"
            };
            function d(t) {
                this.opts = c(t || {}, d.defaults, f);
            }
            if (d.defaults = {}, c(d.prototype, {
                spin: function(e) {
                    this.stop();
                    var i = this, r = i.opts, s = i.el = n(null, {
                        className: r.className
                    });
                    if (h(s, {
                        position: r.position,
                        width: 0,
                        zIndex: r.zIndex,
                        left: r.left,
                        top: r.top
                    }), e && e.insertBefore(s, e.firstChild || null), s.setAttribute("role", "progressbar"), 
                    i.lines(s, i.opts), !t) {
                        var o, a = 0, c = (r.lines - 1) * (1 - r.direction) / 2, l = r.fps, u = l / r.speed, f = (1 - r.opacity) / (u * r.trail / 100), d = u / r.lines;
                        !function t() {
                            a++;
                            for (var e = 0; e < r.lines; e++) o = Math.max(1 - (a + (r.lines - e) * d) % u * f, r.opacity), 
                            i.opacity(s, e * r.direction + c, o, r);
                            i.timeout = i.el && setTimeout(t, ~~(1e3 / l));
                        }();
                    }
                    return i;
                },
                stop: function() {
                    var t = this.el;
                    return t && (clearTimeout(this.timeout), t.parentNode && t.parentNode.removeChild(t), 
                    this.el = void 0), this;
                },
                lines: function(e, i) {
                    var r, a = 0, c = (i.lines - 1) * (1 - i.direction) / 2;
                    function u(t, e) {
                        return h(n(), {
                            position: "absolute",
                            width: i.scale * (i.length + i.width) + "px",
                            height: i.scale * i.width + "px",
                            background: t,
                            boxShadow: e,
                            transformOrigin: "left",
                            transform: "rotate(" + ~~(360 / i.lines * a + i.rotate) + "deg) translate(" + i.scale * i.radius + "px,0)",
                            borderRadius: (i.corners * i.scale * i.width >> 1) + "px"
                        });
                    }
                    for (;a < i.lines; a++) r = h(n(), {
                        position: "absolute",
                        top: 1 + ~(i.scale * i.width / 2) + "px",
                        transform: i.hwaccel ? "translate3d(0,0,0)" : "",
                        opacity: i.opacity,
                        animation: t && o(i.opacity, i.trail, c + a * i.direction, i.lines) + " " + 1 / i.speed + "s linear infinite"
                    }), i.shadow && s(r, h(u("#000", "0 0 4px #000"), {
                        top: "2px"
                    })), s(e, s(r, u(l(i.color, a), "0 0 1px rgba(0,0,0,.1)")));
                    return e;
                },
                opacity: function(t, e, i) {
                    e < t.childNodes.length && (t.childNodes[e].style.opacity = i);
                }
            }), "undefined" != typeof document) {
                u = n("style", {
                    type: "text/css"
                }), s(document.getElementsByTagName("head")[0], u), e = u.sheet || u.styleSheet;
                var p = h(n("group"), {
                    behavior: "url(#default#VML)"
                });
                !a(p, "transform") && p.adj ? function() {
                    function t(t, e) {
                        return n("<" + t + ' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">', e);
                    }
                    e.addRule(".spin-vml", "behavior:url(#default#VML)"), d.prototype.lines = function(e, i) {
                        var r = i.scale * (i.length + i.width), n = 2 * i.scale * r;
                        function o() {
                            return h(t("group", {
                                coordsize: n + " " + n,
                                coordorigin: -r + " " + -r
                            }), {
                                width: n,
                                height: n
                            });
                        }
                        var a, c = -(i.width + i.length) * i.scale * 2 + "px", u = h(o(), {
                            position: "absolute",
                            top: c,
                            left: c
                        });
                        function f(e, n, a) {
                            s(u, s(h(o(), {
                                rotation: 360 / i.lines * e + "deg",
                                left: ~~n
                            }), s(h(t("roundrect", {
                                arcsize: i.corners
                            }), {
                                width: r,
                                height: i.scale * i.width,
                                left: i.scale * i.radius,
                                top: -i.scale * i.width >> 1,
                                filter: a
                            }), t("fill", {
                                color: l(i.color, e),
                                opacity: i.opacity
                            }), t("stroke", {
                                opacity: 0
                            }))));
                        }
                        if (i.shadow) for (a = 1; a <= i.lines; a++) f(a, -2, "progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)");
                        for (a = 1; a <= i.lines; a++) f(a);
                        return s(e, u);
                    }, d.prototype.opacity = function(t, e, i, r) {
                        var n = t.firstChild;
                        r = r.shadow && r.lines || 0, n && e + r < n.childNodes.length && (n = (n = (n = n.childNodes[e + r]) && n.firstChild) && n.firstChild) && (n.opacity = i);
                    };
                }() : t = a(p, "animation");
            }
            return d;
        }, t.exports ? t.exports = s() : void 0 === (n = "function" == typeof (r = s) ? r.call(e, i, e, t) : r) || (t.exports = n);
    },
    1185: function(module, exports, __webpack_require__) {
        (function(Buffer, process) {
            var fabric = fabric || {
                version: "1.6.1"
            }, global, sqrt, atan2, pow, abs, PiBy180, slice, apply, Dummy, cursorOffset, addListener, removeListener, min, max, degreesToRadians, originXOffset, originYOffset, clone, override;
            exports.fabric = fabric, "undefined" != typeof document && "undefined" != typeof window ? (fabric.document = document, 
            fabric.window = window, window.fabric = fabric) : (fabric.document = __webpack_require__(1001).jsdom("<!DOCTYPE html><html><head></head><body></body></html>"), 
            fabric.document.createWindow ? fabric.window = fabric.document.createWindow() : fabric.window = fabric.document.parentWindow), 
            fabric.isTouchSupported = "ontouchstart" in fabric.document.documentElement, fabric.isLikelyNode = void 0 !== Buffer && "undefined" == typeof window, 
            fabric.DPI = 96, fabric.reNum = "(?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)", 
            fabric.fontPaths = {}, fabric.devicePixelRatio = fabric.window.devicePixelRatio || fabric.window.webkitDevicePixelRatio || fabric.window.mozDevicePixelRatio || 1, 
            function() {
                function t(t, e) {
                    if (this.__eventListeners[t]) {
                        var i = this.__eventListeners[t];
                        e ? i[i.indexOf(e)] = !1 : fabric.util.array.fill(i, !1);
                    }
                }
                function e(t, e) {
                    if (this.__eventListeners || (this.__eventListeners = {}), 1 === arguments.length) for (var i in t) this.on(i, t[i]); else this.__eventListeners[t] || (this.__eventListeners[t] = []), 
                    this.__eventListeners[t].push(e);
                    return this;
                }
                function i(e, i) {
                    if (this.__eventListeners) {
                        if (0 === arguments.length) for (e in this.__eventListeners) t.call(this, e); else if (1 === arguments.length && "object" == typeof arguments[0]) for (var r in e) t.call(this, r, e[r]); else t.call(this, e, i);
                        return this;
                    }
                }
                function r(t, e) {
                    if (this.__eventListeners) {
                        var i = this.__eventListeners[t];
                        if (i) {
                            for (var r = 0, n = i.length; r < n; r++) i[r] && i[r].call(this, e || {});
                            return this.__eventListeners[t] = i.filter(function(t) {
                                return !1 !== t;
                            }), this;
                        }
                    }
                }
                fabric.Observable = {
                    observe: e,
                    stopObserving: i,
                    fire: r,
                    on: e,
                    off: i,
                    trigger: r
                };
            }(), fabric.Collection = {
                add: function() {
                    this._objects.push.apply(this._objects, arguments);
                    for (var t = 0, e = arguments.length; t < e; t++) this._onObjectAdded(arguments[t]);
                    return this.renderOnAddRemove && this.renderAll(), this;
                },
                insertAt: function(t, e, i) {
                    var r = this.getObjects();
                    return i ? r[e] = t : r.splice(e, 0, t), this._onObjectAdded(t), this.renderOnAddRemove && this.renderAll(), 
                    this;
                },
                remove: function() {
                    for (var t, e = this.getObjects(), i = 0, r = arguments.length; i < r; i++) -1 !== (t = e.indexOf(arguments[i])) && (e.splice(t, 1), 
                    this._onObjectRemoved(arguments[i]));
                    return this.renderOnAddRemove && this.renderAll(), this;
                },
                forEachObject: function(t, e) {
                    for (var i = this.getObjects(), r = i.length; r--; ) t.call(e, i[r], r, i);
                    return this;
                },
                getObjects: function(t) {
                    return void 0 === t ? this._objects : this._objects.filter(function(e) {
                        return e.type === t;
                    });
                },
                item: function(t) {
                    return this.getObjects()[t];
                },
                isEmpty: function() {
                    return 0 === this.getObjects().length;
                },
                size: function() {
                    return this.getObjects().length;
                },
                contains: function(t) {
                    return this.getObjects().indexOf(t) > -1;
                },
                complexity: function() {
                    return this.getObjects().reduce(function(t, e) {
                        return t += e.complexity ? e.complexity() : 0;
                    }, 0);
                }
            }, global = exports, sqrt = Math.sqrt, atan2 = Math.atan2, pow = Math.pow, abs = Math.abs, 
            PiBy180 = Math.PI / 180, fabric.util = {
                removeFromArray: function(t, e) {
                    var i = t.indexOf(e);
                    return -1 !== i && t.splice(i, 1), t;
                },
                getRandomInt: function(t, e) {
                    return Math.floor(Math.random() * (e - t + 1)) + t;
                },
                degreesToRadians: function(t) {
                    return t * PiBy180;
                },
                radiansToDegrees: function(t) {
                    return t / PiBy180;
                },
                rotatePoint: function(t, e, i) {
                    t.subtractEquals(e);
                    var r = fabric.util.rotateVector(t, i);
                    return new fabric.Point(r.x, r.y).addEquals(e);
                },
                rotateVector: function(t, e) {
                    var i = Math.sin(e), r = Math.cos(e);
                    return {
                        x: t.x * r - t.y * i,
                        y: t.x * i + t.y * r
                    };
                },
                transformPoint: function(t, e, i) {
                    return i ? new fabric.Point(e[0] * t.x + e[2] * t.y, e[1] * t.x + e[3] * t.y) : new fabric.Point(e[0] * t.x + e[2] * t.y + e[4], e[1] * t.x + e[3] * t.y + e[5]);
                },
                makeBoundingBoxFromPoints: function(t) {
                    var e = [ t[0].x, t[1].x, t[2].x, t[3].x ], i = fabric.util.array.min(e), r = fabric.util.array.max(e), n = Math.abs(i - r), s = [ t[0].y, t[1].y, t[2].y, t[3].y ], o = fabric.util.array.min(s), a = fabric.util.array.max(s);
                    return {
                        left: i,
                        top: o,
                        width: n,
                        height: Math.abs(o - a)
                    };
                },
                invertTransform: function(t) {
                    var e = 1 / (t[0] * t[3] - t[1] * t[2]), i = [ e * t[3], -e * t[1], -e * t[2], e * t[0] ], r = fabric.util.transformPoint({
                        x: t[4],
                        y: t[5]
                    }, i, !0);
                    return i[4] = -r.x, i[5] = -r.y, i;
                },
                toFixed: function(t, e) {
                    return parseFloat(Number(t).toFixed(e));
                },
                parseUnit: function(t, e) {
                    var i = /\D{0,2}$/.exec(t), r = parseFloat(t);
                    switch (e || (e = fabric.Text.DEFAULT_SVG_FONT_SIZE), i[0]) {
                      case "mm":
                        return r * fabric.DPI / 25.4;

                      case "cm":
                        return r * fabric.DPI / 2.54;

                      case "in":
                        return r * fabric.DPI;

                      case "pt":
                        return r * fabric.DPI / 72;

                      case "pc":
                        return r * fabric.DPI / 72 * 12;

                      case "em":
                        return r * e;

                      default:
                        return r;
                    }
                },
                falseFunction: function() {
                    return !1;
                },
                getKlass: function(t, e) {
                    return t = fabric.util.string.camelize(t.charAt(0).toUpperCase() + t.slice(1)), 
                    fabric.util.resolveNamespace(e)[t];
                },
                resolveNamespace: function(t) {
                    if (!t) return fabric;
                    for (var e = t.split("."), i = e.length, r = global || fabric.window, n = 0; n < i; ++n) r = r[e[n]];
                    return r;
                },
                loadImage: function(t, e, i, r) {
                    if (t) {
                        var n = fabric.util.createImage();
                        n.onload = function() {
                            e && e.call(i, n), n = n.onload = n.onerror = null;
                        }, n.onerror = function() {
                            fabric.log("Error loading " + n.src), e && e.call(i, null, !0), n = n.onload = n.onerror = null;
                        }, 0 !== t.indexOf("data") && r && (n.crossOrigin = r), n.src = t;
                    } else e && e.call(i, t);
                },
                enlivenObjects: function(t, e, i, r) {
                    function n() {
                        ++o === a && e && e(s);
                    }
                    var s = [], o = 0, a = (t = t || []).length;
                    a ? t.forEach(function(t, e) {
                        if (t && t.type) {
                            var o = fabric.util.getKlass(t.type, i);
                            o.async ? o.fromObject(t, function(i, o) {
                                o || (s[e] = i, r && r(t, s[e])), n();
                            }) : (s[e] = o.fromObject(t), r && r(t, s[e]), n());
                        } else n();
                    }) : e && e(s);
                },
                groupSVGElements: function(t, e, i) {
                    var r;
                    return r = new fabric.PathGroup(t, e), void 0 !== i && r.setSourcePath(i), r;
                },
                populateWithProperties: function(t, e, i) {
                    if (i && "[object Array]" === Object.prototype.toString.call(i)) for (var r = 0, n = i.length; r < n; r++) i[r] in t && (e[i[r]] = t[i[r]]);
                },
                drawDashedLine: function(t, e, i, r, n, s) {
                    var o = r - e, a = n - i, h = sqrt(o * o + a * a), c = atan2(a, o), l = s.length, u = 0, f = !0;
                    for (t.save(), t.translate(e, i), t.moveTo(0, 0), t.rotate(c), e = 0; h > e; ) (e += s[u++ % l]) > h && (e = h), 
                    t[f ? "lineTo" : "moveTo"](e, 0), f = !f;
                    t.restore();
                },
                createCanvasElement: function(t) {
                    return t || (t = fabric.document.createElement("canvas")), t.getContext || "undefined" == typeof G_vmlCanvasManager || G_vmlCanvasManager.initElement(t), 
                    t;
                },
                createImage: function() {
                    return fabric.isLikelyNode ? new (__webpack_require__(794).Image)() : fabric.document.createElement("img");
                },
                createAccessors: function(t) {
                    for (var e = t.prototype, i = e.stateProperties.length; i--; ) {
                        var r = e.stateProperties[i], n = r.charAt(0).toUpperCase() + r.slice(1), s = "set" + n, o = "get" + n;
                        e[o] || (e[o] = new Function('return this.get("' + r + '")')), e[s] || (e[s] = new Function("value", 'return this.set("' + r + '", value)'));
                    }
                },
                clipContext: function(t, e) {
                    e.save(), e.beginPath(), t.clipTo(e), e.clip();
                },
                multiplyTransformMatrices: function(t, e, i) {
                    return [ t[0] * e[0] + t[2] * e[1], t[1] * e[0] + t[3] * e[1], t[0] * e[2] + t[2] * e[3], t[1] * e[2] + t[3] * e[3], i ? 0 : t[0] * e[4] + t[2] * e[5] + t[4], i ? 0 : t[1] * e[4] + t[3] * e[5] + t[5] ];
                },
                qrDecompose: function(t) {
                    var e = atan2(t[1], t[0]), i = pow(t[0], 2) + pow(t[1], 2), r = sqrt(i), n = (t[0] * t[3] - t[2] * t[1]) / r, s = atan2(t[0] * t[2] + t[1] * t[3], i);
                    return {
                        angle: e / PiBy180,
                        scaleX: r,
                        scaleY: n,
                        skewX: s / PiBy180,
                        skewY: 0,
                        translateX: t[4],
                        translateY: t[5]
                    };
                },
                customTransformMatrix: function(t, e, i) {
                    var r = [ 1, 0, abs(Math.tan(i * PiBy180)), 1 ], n = [ abs(t), 0, 0, abs(e) ];
                    return fabric.util.multiplyTransformMatrices(n, r, !0);
                },
                resetObjectTransform: function(t) {
                    t.scaleX = 1, t.scaleY = 1, t.skewX = 0, t.skewY = 0, t.flipX = !1, t.flipY = !1, 
                    t.setAngle(0);
                },
                getFunctionBody: function(t) {
                    return (String(t).match(/function[^{]*\{([\s\S]*)\}/) || {})[1];
                },
                isTransparent: function(t, e, i, r) {
                    r > 0 && (e > r ? e -= r : e = 0, i > r ? i -= r : i = 0);
                    for (var n = !0, s = t.getImageData(e, i, 2 * r || 1, 2 * r || 1), o = 3, a = s.data.length; o < a && !1 != (n = s.data[o] <= 0); o += 4) ;
                    return s = null, n;
                },
                parsePreserveAspectRatioAttribute: function(t) {
                    var e, i = "meet", r = t.split(" ");
                    return r && r.length && ("meet" !== (i = r.pop()) && "slice" !== i ? (e = i, i = "meet") : r.length && (e = r.pop())), 
                    {
                        meetOrSlice: i,
                        alignX: "none" !== e ? e.slice(1, 4) : "none",
                        alignY: "none" !== e ? e.slice(5, 8) : "none"
                    };
                }
            }, function() {
                var t = {}, e = {}, i = {}, r = Array.prototype.join;
                function n(e, i, n, a, h, c, l) {
                    var u = r.call(arguments);
                    if (t[u]) return t[u];
                    var f = Math.PI, d = l * f / 180, p = Math.sin(d), g = Math.cos(d), v = 0, b = 0, _ = -g * e * .5 - p * i * .5, m = -g * i * .5 + p * e * .5, y = (n = Math.abs(n)) * n, x = (a = Math.abs(a)) * a, C = m * m, w = _ * _, S = y * x - y * C - x * w, O = 0;
                    if (S < 0) {
                        var T = Math.sqrt(1 - S / (y * x));
                        n *= T, a *= T;
                    } else O = (h === c ? -1 : 1) * Math.sqrt(S / (y * C + x * w));
                    var k = O * n * m / a, j = -O * a * _ / n, L = g * k - p * j + .5 * e, E = p * k + g * j + .5 * i, P = o(1, 0, (_ - k) / n, (m - j) / a), M = o((_ - k) / n, (m - j) / a, (-_ - k) / n, (-m - j) / a);
                    0 === c && M > 0 ? M -= 2 * f : 1 === c && M < 0 && (M += 2 * f);
                    for (var A = Math.ceil(Math.abs(M / f * 2)), D = [], I = M / A, R = 8 / 3 * Math.sin(I / 4) * Math.sin(I / 4) / Math.sin(I / 2), F = P + I, W = 0; W < A; W++) D[W] = s(P, F, g, p, n, a, L, E, R, v, b), 
                    v = D[W][4], b = D[W][5], P = F, F += I;
                    return t[u] = D, D;
                }
                function s(t, i, n, s, o, a, h, c, l, u, f) {
                    var d = r.call(arguments);
                    if (e[d]) return e[d];
                    var p = Math.cos(t), g = Math.sin(t), v = Math.cos(i), b = Math.sin(i), _ = n * o * v - s * a * b + h, m = s * o * v + n * a * b + c, y = u + l * (-n * o * g - s * a * p), x = f + l * (-s * o * g + n * a * p), C = _ + l * (n * o * b + s * a * v), w = m + l * (s * o * b - n * a * v);
                    return e[d] = [ y, x, C, w, _, m ], e[d];
                }
                function o(t, e, i, r) {
                    var n = Math.atan2(e, t), s = Math.atan2(r, i);
                    return s >= n ? s - n : 2 * Math.PI - (n - s);
                }
                function a(t, e, n, s, o, a, h, c) {
                    var l = r.call(arguments);
                    if (i[l]) return i[l];
                    var u, f, d, p, g, v, b, _, m = Math.sqrt, y = Math.min, x = Math.max, C = Math.abs, w = [], S = [ [], [] ];
                    f = 6 * t - 12 * n + 6 * o, u = -3 * t + 9 * n - 9 * o + 3 * h, d = 3 * n - 3 * t;
                    for (var O = 0; O < 2; ++O) if (O > 0 && (f = 6 * e - 12 * s + 6 * a, u = -3 * e + 9 * s - 9 * a + 3 * c, 
                    d = 3 * s - 3 * e), C(u) < 1e-12) {
                        if (C(f) < 1e-12) continue;
                        0 < (p = -d / f) && p < 1 && w.push(p);
                    } else (b = f * f - 4 * d * u) < 0 || (0 < (g = (-f + (_ = m(b))) / (2 * u)) && g < 1 && w.push(g), 
                    0 < (v = (-f - _) / (2 * u)) && v < 1 && w.push(v));
                    for (var T, k, j, L = w.length, E = L; L--; ) T = (j = 1 - (p = w[L])) * j * j * t + 3 * j * j * p * n + 3 * j * p * p * o + p * p * p * h, 
                    S[0][L] = T, k = j * j * j * e + 3 * j * j * p * s + 3 * j * p * p * a + p * p * p * c, 
                    S[1][L] = k;
                    S[0][E] = t, S[1][E] = e, S[0][E + 1] = h, S[1][E + 1] = c;
                    var P = [ {
                        x: y.apply(null, S[0]),
                        y: y.apply(null, S[1])
                    }, {
                        x: x.apply(null, S[0]),
                        y: x.apply(null, S[1])
                    } ];
                    return i[l] = P, P;
                }
                fabric.util.drawArc = function(t, e, i, r) {
                    for (var s = r[0], o = r[1], a = r[2], h = r[3], c = r[4], l = [ [], [], [], [] ], u = n(r[5] - e, r[6] - i, s, o, h, c, a), f = 0, d = u.length; f < d; f++) l[f][0] = u[f][0] + e, 
                    l[f][1] = u[f][1] + i, l[f][2] = u[f][2] + e, l[f][3] = u[f][3] + i, l[f][4] = u[f][4] + e, 
                    l[f][5] = u[f][5] + i, t.bezierCurveTo.apply(t, l[f]);
                }, fabric.util.getBoundsOfArc = function(t, e, i, r, s, o, h, c, l) {
                    for (var u = 0, f = 0, d = [], p = [], g = n(c - t, l - e, i, r, o, h, s), v = [ [], [] ], b = 0, _ = g.length; b < _; b++) d = a(u, f, g[b][0], g[b][1], g[b][2], g[b][3], g[b][4], g[b][5]), 
                    v[0].x = d[0].x + t, v[0].y = d[0].y + e, v[1].x = d[1].x + t, v[1].y = d[1].y + e, 
                    p.push(v[0]), p.push(v[1]), u = g[b][4], f = g[b][5];
                    return p;
                }, fabric.util.getBoundsOfCurve = a;
            }(), function() {
                var t = Array.prototype.slice;
                function e(t, e, i) {
                    if (t && 0 !== t.length) {
                        var r = t.length - 1, n = e ? t[r][e] : t[r];
                        if (e) for (;r--; ) i(t[r][e], n) && (n = t[r][e]); else for (;r--; ) i(t[r], n) && (n = t[r]);
                        return n;
                    }
                }
                Array.prototype.indexOf || (Array.prototype.indexOf = function(t) {
                    if (void 0 === this || null === this) throw new TypeError();
                    var e = Object(this), i = e.length >>> 0;
                    if (0 === i) return -1;
                    var r = 0;
                    if (arguments.length > 0 && ((r = Number(arguments[1])) != r ? r = 0 : 0 !== r && r !== Number.POSITIVE_INFINITY && r !== Number.NEGATIVE_INFINITY && (r = (r > 0 || -1) * Math.floor(Math.abs(r)))), 
                    r >= i) return -1;
                    for (var n = r >= 0 ? r : Math.max(i - Math.abs(r), 0); n < i; n++) if (n in e && e[n] === t) return n;
                    return -1;
                }), Array.prototype.forEach || (Array.prototype.forEach = function(t, e) {
                    for (var i = 0, r = this.length >>> 0; i < r; i++) i in this && t.call(e, this[i], i, this);
                }), Array.prototype.map || (Array.prototype.map = function(t, e) {
                    for (var i = [], r = 0, n = this.length >>> 0; r < n; r++) r in this && (i[r] = t.call(e, this[r], r, this));
                    return i;
                }), Array.prototype.every || (Array.prototype.every = function(t, e) {
                    for (var i = 0, r = this.length >>> 0; i < r; i++) if (i in this && !t.call(e, this[i], i, this)) return !1;
                    return !0;
                }), Array.prototype.some || (Array.prototype.some = function(t, e) {
                    for (var i = 0, r = this.length >>> 0; i < r; i++) if (i in this && t.call(e, this[i], i, this)) return !0;
                    return !1;
                }), Array.prototype.filter || (Array.prototype.filter = function(t, e) {
                    for (var i, r = [], n = 0, s = this.length >>> 0; n < s; n++) n in this && (i = this[n], 
                    t.call(e, i, n, this) && r.push(i));
                    return r;
                }), Array.prototype.reduce || (Array.prototype.reduce = function(t) {
                    var e, i = this.length >>> 0, r = 0;
                    if (arguments.length > 1) e = arguments[1]; else for (;;) {
                        if (r in this) {
                            e = this[r++];
                            break;
                        }
                        if (++r >= i) throw new TypeError();
                    }
                    for (;r < i; r++) r in this && (e = t.call(null, e, this[r], r, this));
                    return e;
                }), fabric.util.array = {
                    fill: function(t, e) {
                        for (var i = t.length; i--; ) t[i] = e;
                        return t;
                    },
                    invoke: function(e, i) {
                        for (var r = t.call(arguments, 2), n = [], s = 0, o = e.length; s < o; s++) n[s] = r.length ? e[s][i].apply(e[s], r) : e[s][i].call(e[s]);
                        return n;
                    },
                    min: function(t, i) {
                        return e(t, i, function(t, e) {
                            return t < e;
                        });
                    },
                    max: function(t, i) {
                        return e(t, i, function(t, e) {
                            return t >= e;
                        });
                    }
                };
            }(), function() {
                function t(t, e) {
                    for (var i in e) t[i] = e[i];
                    return t;
                }
                fabric.util.object = {
                    extend: t,
                    clone: function(e) {
                        return t({}, e);
                    }
                };
            }(), function() {
                String.prototype.trim || (String.prototype.trim = function() {
                    return this.replace(/^[\s\xA0]+/, "").replace(/[\s\xA0]+$/, "");
                }), fabric.util.string = {
                    camelize: function(t) {
                        return t.replace(/-+(.)?/g, function(t, e) {
                            return e ? e.toUpperCase() : "";
                        });
                    },
                    capitalize: function(t, e) {
                        return t.charAt(0).toUpperCase() + (e ? t.slice(1) : t.slice(1).toLowerCase());
                    },
                    escapeXml: function(t) {
                        return t.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&apos;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
                    }
                };
            }(), slice = Array.prototype.slice, apply = Function.prototype.apply, Dummy = function() {}, 
            Function.prototype.bind || (Function.prototype.bind = function(t) {
                var e, i = this, r = slice.call(arguments, 1);
                return e = r.length ? function() {
                    return apply.call(i, this instanceof Dummy ? this : t, r.concat(slice.call(arguments)));
                } : function() {
                    return apply.call(i, this instanceof Dummy ? this : t, arguments);
                }, Dummy.prototype = this.prototype, e.prototype = new Dummy(), e;
            }), function() {
                var t = Array.prototype.slice, e = function() {}, i = function() {
                    for (var t in {
                        toString: 1
                    }) if ("toString" === t) return !1;
                    return !0;
                }(), r = function(t, e, r) {
                    for (var n in e) n in t.prototype && "function" == typeof t.prototype[n] && (e[n] + "").indexOf("callSuper") > -1 ? t.prototype[n] = function(t) {
                        return function() {
                            var i = this.constructor.superclass;
                            this.constructor.superclass = r;
                            var n = e[t].apply(this, arguments);
                            if (this.constructor.superclass = i, "initialize" !== t) return n;
                        };
                    }(n) : t.prototype[n] = e[n], i && (e.toString !== Object.prototype.toString && (t.prototype.toString = e.toString), 
                    e.valueOf !== Object.prototype.valueOf && (t.prototype.valueOf = e.valueOf));
                };
                function n() {}
                function s(e) {
                    var i = this.constructor.superclass.prototype[e];
                    return arguments.length > 1 ? i.apply(this, t.call(arguments, 1)) : i.call(this);
                }
                fabric.util.createClass = function() {
                    var i = null, o = t.call(arguments, 0);
                    function a() {
                        this.initialize.apply(this, arguments);
                    }
                    "function" == typeof o[0] && (i = o.shift()), a.superclass = i, a.subclasses = [], 
                    i && (n.prototype = i.prototype, a.prototype = new n(), i.subclasses.push(a));
                    for (var h = 0, c = o.length; h < c; h++) r(a, o[h], i);
                    return a.prototype.initialize || (a.prototype.initialize = e), a.prototype.constructor = a, 
                    a.prototype.callSuper = s, a;
                };
            }(), function() {
                var t = "unknown";
                function e(t) {
                    var e, i, r = Array.prototype.slice.call(arguments, 1), n = r.length;
                    for (i = 0; i < n; i++) if (e = typeof t[r[i]], !/^(?:function|object|unknown)$/.test(e)) return !1;
                    return !0;
                }
                var i, r, n, s, o = (n = 0, function(t) {
                    return t.__uniqueID || (t.__uniqueID = "uniqueID__" + n++);
                });
                function a(t, e) {
                    return {
                        handler: e,
                        wrappedHandler: function(t, e) {
                            return function(r) {
                                e.call(i(t), r || fabric.window.event);
                            };
                        }(t, e)
                    };
                }
                s = {}, i = function(t) {
                    return s[t];
                }, r = function(t, e) {
                    s[t] = e;
                };
                var h, c, l = e(fabric.document.documentElement, "addEventListener", "removeEventListener") && e(fabric.window, "addEventListener", "removeEventListener"), u = e(fabric.document.documentElement, "attachEvent", "detachEvent") && e(fabric.window, "attachEvent", "detachEvent"), f = {}, d = {};
                l ? (h = function(t, e, i) {
                    t.addEventListener(e, i, !1);
                }, c = function(t, e, i) {
                    t.removeEventListener(e, i, !1);
                }) : u ? (h = function(t, e, i) {
                    var n = o(t);
                    r(n, t), f[n] || (f[n] = {}), f[n][e] || (f[n][e] = []);
                    var s = a(n, i);
                    f[n][e].push(s), t.attachEvent("on" + e, s.wrappedHandler);
                }, c = function(t, e, i) {
                    var r, n = o(t);
                    if (f[n] && f[n][e]) for (var s = 0, a = f[n][e].length; s < a; s++) (r = f[n][e][s]) && r.handler === i && (t.detachEvent("on" + e, r.wrappedHandler), 
                    f[n][e][s] = null);
                }) : (h = function(t, e, i) {
                    var r = o(t);
                    if (d[r] || (d[r] = {}), !d[r][e]) {
                        d[r][e] = [];
                        var n = t["on" + e];
                        n && d[r][e].push(n), t["on" + e] = function(t, e) {
                            return function(i) {
                                if (d[t] && d[t][e]) for (var r = d[t][e], n = 0, s = r.length; n < s; n++) r[n].call(this, i || fabric.window.event);
                            };
                        }(r, e);
                    }
                    d[r][e].push(i);
                }, c = function(t, e, i) {
                    var r = o(t);
                    if (d[r] && d[r][e]) for (var n = d[r][e], s = 0, a = n.length; s < a; s++) n[s] === i && n.splice(s, 1);
                }), fabric.util.addListener = h, fabric.util.removeListener = c;
                var p = function(e) {
                    return typeof e.clientX !== t ? e.clientX : 0;
                }, g = function(e) {
                    return typeof e.clientY !== t ? e.clientY : 0;
                };
                function v(t, e, i) {
                    var r = "touchend" === t.type ? "changedTouches" : "touches";
                    return t[r] && t[r][0] && t[r][0][e] - (t[r][0][e] - t[r][0][i]) || t[i];
                }
                fabric.isTouchSupported && (p = function(t) {
                    return v(t, "pageX", "clientX");
                }, g = function(t) {
                    return v(t, "pageY", "clientY");
                }), fabric.util.getPointer = function(e) {
                    e || (e = fabric.window.event);
                    var i = e.target || (typeof e.srcElement !== t ? e.srcElement : null), r = fabric.util.getScrollLeftTop(i);
                    return {
                        x: p(e) + r.left,
                        y: g(e) + r.top
                    };
                }, fabric.util.object.extend(fabric.util, fabric.Observable);
            }(), function() {
                var t = fabric.document.createElement("div"), e = "string" == typeof t.style.opacity, i = "string" == typeof t.style.filter, r = /alpha\s*\(\s*opacity\s*=\s*([^\)]+)\)/, n = function(t) {
                    return t;
                };
                e ? n = function(t, e) {
                    return t.style.opacity = e, t;
                } : i && (n = function(t, e) {
                    var i = t.style;
                    return t.currentStyle && !t.currentStyle.hasLayout && (i.zoom = 1), r.test(i.filter) ? (e = e >= .9999 ? "" : "alpha(opacity=" + 100 * e + ")", 
                    i.filter = i.filter.replace(r, e)) : i.filter += " alpha(opacity=" + 100 * e + ")", 
                    t;
                }), fabric.util.setStyle = function(t, e) {
                    var i = t.style;
                    if (!i) return t;
                    if ("string" == typeof e) return t.style.cssText += ";" + e, e.indexOf("opacity") > -1 ? n(t, e.match(/opacity:\s*(\d?\.?\d*)/)[1]) : t;
                    for (var r in e) "opacity" === r ? n(t, e[r]) : i["float" === r || "cssFloat" === r ? void 0 === i.styleFloat ? "cssFloat" : "styleFloat" : r] = e[r];
                    return t;
                };
            }(), function() {
                var t = Array.prototype.slice;
                var e, i, r = function(e) {
                    return t.call(e, 0);
                };
                try {
                    e = r(fabric.document.childNodes) instanceof Array;
                } catch (t) {}
                function n(t, e) {
                    var i = fabric.document.createElement(t);
                    for (var r in e) "class" === r ? i.className = e[r] : "for" === r ? i.htmlFor = e[r] : i.setAttribute(r, e[r]);
                    return i;
                }
                function s(t) {
                    for (var e = 0, i = 0, r = fabric.document.documentElement, n = fabric.document.body || {
                        scrollLeft: 0,
                        scrollTop: 0
                    }; t && (t.parentNode || t.host) && ((t = t.parentNode || t.host) === fabric.document ? (e = n.scrollLeft || r.scrollLeft || 0, 
                    i = n.scrollTop || r.scrollTop || 0) : (e += t.scrollLeft || 0, i += t.scrollTop || 0), 
                    1 !== t.nodeType || "fixed" !== fabric.util.getElementStyle(t, "position")); ) ;
                    return {
                        left: e,
                        top: i
                    };
                }
                e || (r = function(t) {
                    for (var e = new Array(t.length), i = t.length; i--; ) e[i] = t[i];
                    return e;
                }), i = fabric.document.defaultView && fabric.document.defaultView.getComputedStyle ? function(t, e) {
                    var i = fabric.document.defaultView.getComputedStyle(t, null);
                    return i ? i[e] : void 0;
                } : function(t, e) {
                    var i = t.style[e];
                    return !i && t.currentStyle && (i = t.currentStyle[e]), i;
                }, function() {
                    var t = fabric.document.documentElement.style, e = "userSelect" in t ? "userSelect" : "MozUserSelect" in t ? "MozUserSelect" : "WebkitUserSelect" in t ? "WebkitUserSelect" : "KhtmlUserSelect" in t ? "KhtmlUserSelect" : "";
                    fabric.util.makeElementUnselectable = function(t) {
                        return void 0 !== t.onselectstart && (t.onselectstart = fabric.util.falseFunction), 
                        e ? t.style[e] = "none" : "string" == typeof t.unselectable && (t.unselectable = "on"), 
                        t;
                    }, fabric.util.makeElementSelectable = function(t) {
                        return void 0 !== t.onselectstart && (t.onselectstart = null), e ? t.style[e] = "" : "string" == typeof t.unselectable && (t.unselectable = ""), 
                        t;
                    };
                }(), function() {
                    fabric.util.getScript = function(t, e) {
                        var i = fabric.document.getElementsByTagName("head")[0], r = fabric.document.createElement("script"), n = !0;
                        r.onload = r.onreadystatechange = function(t) {
                            if (n) {
                                if ("string" == typeof this.readyState && "loaded" !== this.readyState && "complete" !== this.readyState) return;
                                n = !1, e(t || fabric.window.event), r = r.onload = r.onreadystatechange = null;
                            }
                        }, r.src = t, i.appendChild(r);
                    };
                }(), fabric.util.getById = function(t) {
                    return "string" == typeof t ? fabric.document.getElementById(t) : t;
                }, fabric.util.toArray = r, fabric.util.makeElement = n, fabric.util.addClass = function(t, e) {
                    t && -1 === (" " + t.className + " ").indexOf(" " + e + " ") && (t.className += (t.className ? " " : "") + e);
                }, fabric.util.wrapElement = function(t, e, i) {
                    return "string" == typeof e && (e = n(e, i)), t.parentNode && t.parentNode.replaceChild(e, t), 
                    e.appendChild(t), e;
                }, fabric.util.getScrollLeftTop = s, fabric.util.getElementOffset = function(t) {
                    var e, r, n = t && t.ownerDocument, o = {
                        left: 0,
                        top: 0
                    }, a = {
                        left: 0,
                        top: 0
                    }, h = {
                        borderLeftWidth: "left",
                        borderTopWidth: "top",
                        paddingLeft: "left",
                        paddingTop: "top"
                    };
                    if (!n) return a;
                    for (var c in h) a[h[c]] += parseInt(i(t, c), 10) || 0;
                    return e = n.documentElement, void 0 !== t.getBoundingClientRect && (o = t.getBoundingClientRect()), 
                    r = s(t), {
                        left: o.left + r.left - (e.clientLeft || 0) + a.left,
                        top: o.top + r.top - (e.clientTop || 0) + a.top
                    };
                }, fabric.util.getElementStyle = i;
            }(), function() {
                var t = function() {
                    for (var t = [ function() {
                        return new ActiveXObject("Microsoft.XMLHTTP");
                    }, function() {
                        return new ActiveXObject("Msxml2.XMLHTTP");
                    }, function() {
                        return new ActiveXObject("Msxml2.XMLHTTP.3.0");
                    }, function() {
                        return new XMLHttpRequest();
                    } ], e = t.length; e--; ) try {
                        if (t[e]()) return t[e];
                    } catch (t) {}
                }();
                function e() {}
                fabric.util.request = function(i, r) {
                    r || (r = {});
                    var n, s = r.method ? r.method.toUpperCase() : "GET", o = r.onComplete || function() {}, a = t();
                    return a.onreadystatechange = function() {
                        4 === a.readyState && (o(a), a.onreadystatechange = e);
                    }, "GET" === s && (n = null, "string" == typeof r.parameters && (i = function(t, e) {
                        return t + (/\?/.test(t) ? "&" : "?") + e;
                    }(i, r.parameters))), a.open(s, i, !0), "POST" !== s && "PUT" !== s || a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), 
                    a.send(n), a;
                };
            }(), fabric.log = function() {}, fabric.warn = function() {}, "undefined" != typeof console && [ "log", "warn" ].forEach(function(t) {
                void 0 !== console[t] && "function" == typeof console[t].apply && (fabric[t] = function() {
                    return console[t].apply(console, arguments);
                });
            }), function() {
                var t = fabric.window.requestAnimationFrame || fabric.window.webkitRequestAnimationFrame || fabric.window.mozRequestAnimationFrame || fabric.window.oRequestAnimationFrame || fabric.window.msRequestAnimationFrame || function(t) {
                    fabric.window.setTimeout(t, 1e3 / 60);
                };
                function e() {
                    return t.apply(fabric.window, arguments);
                }
                fabric.util.animate = function(t) {
                    e(function(i) {
                        t || (t = {});
                        var r, n = i || +new Date(), s = t.duration || 500, o = n + s, a = t.onChange || function() {}, h = t.abort || function() {
                            return !1;
                        }, c = t.easing || function(t, e, i, r) {
                            return -i * Math.cos(t / r * (Math.PI / 2)) + i + e;
                        }, l = "startValue" in t ? t.startValue : 0, u = "endValue" in t ? t.endValue : 100, f = t.byValue || u - l;
                        t.onStart && t.onStart(), function i(u) {
                            var d = (r = u || +new Date()) > o ? s : r - n;
                            h() ? t.onComplete && t.onComplete() : (a(c(d, l, f, s)), r > o ? t.onComplete && t.onComplete() : e(i));
                        }(n);
                    });
                }, fabric.util.requestAnimFrame = e;
            }(), function() {
                function t(t, e, i, r) {
                    return t < Math.abs(e) ? (t = e, r = i / 4) : r = 0 === e && 0 === t ? i / (2 * Math.PI) * Math.asin(1) : i / (2 * Math.PI) * Math.asin(e / t), 
                    {
                        a: t,
                        c: e,
                        p: i,
                        s: r
                    };
                }
                function e(t, e, i) {
                    return t.a * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * i - t.s) * (2 * Math.PI) / t.p);
                }
                function i(t, e, i, n) {
                    return i - r(n - t, 0, i, n) + e;
                }
                function r(t, e, i, r) {
                    return (t /= r) < 1 / 2.75 ? i * (7.5625 * t * t) + e : t < 2 / 2.75 ? i * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + e : t < 2.5 / 2.75 ? i * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + e : i * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + e;
                }
                fabric.util.ease = {
                    easeInQuad: function(t, e, i, r) {
                        return i * (t /= r) * t + e;
                    },
                    easeOutQuad: function(t, e, i, r) {
                        return -i * (t /= r) * (t - 2) + e;
                    },
                    easeInOutQuad: function(t, e, i, r) {
                        return (t /= r / 2) < 1 ? i / 2 * t * t + e : -i / 2 * (--t * (t - 2) - 1) + e;
                    },
                    easeInCubic: function(t, e, i, r) {
                        return i * (t /= r) * t * t + e;
                    },
                    easeOutCubic: function(t, e, i, r) {
                        return i * ((t = t / r - 1) * t * t + 1) + e;
                    },
                    easeInOutCubic: function(t, e, i, r) {
                        return (t /= r / 2) < 1 ? i / 2 * t * t * t + e : i / 2 * ((t -= 2) * t * t + 2) + e;
                    },
                    easeInQuart: function(t, e, i, r) {
                        return i * (t /= r) * t * t * t + e;
                    },
                    easeOutQuart: function(t, e, i, r) {
                        return -i * ((t = t / r - 1) * t * t * t - 1) + e;
                    },
                    easeInOutQuart: function(t, e, i, r) {
                        return (t /= r / 2) < 1 ? i / 2 * t * t * t * t + e : -i / 2 * ((t -= 2) * t * t * t - 2) + e;
                    },
                    easeInQuint: function(t, e, i, r) {
                        return i * (t /= r) * t * t * t * t + e;
                    },
                    easeOutQuint: function(t, e, i, r) {
                        return i * ((t = t / r - 1) * t * t * t * t + 1) + e;
                    },
                    easeInOutQuint: function(t, e, i, r) {
                        return (t /= r / 2) < 1 ? i / 2 * t * t * t * t * t + e : i / 2 * ((t -= 2) * t * t * t * t + 2) + e;
                    },
                    easeInSine: function(t, e, i, r) {
                        return -i * Math.cos(t / r * (Math.PI / 2)) + i + e;
                    },
                    easeOutSine: function(t, e, i, r) {
                        return i * Math.sin(t / r * (Math.PI / 2)) + e;
                    },
                    easeInOutSine: function(t, e, i, r) {
                        return -i / 2 * (Math.cos(Math.PI * t / r) - 1) + e;
                    },
                    easeInExpo: function(t, e, i, r) {
                        return 0 === t ? e : i * Math.pow(2, 10 * (t / r - 1)) + e;
                    },
                    easeOutExpo: function(t, e, i, r) {
                        return t === r ? e + i : i * (1 - Math.pow(2, -10 * t / r)) + e;
                    },
                    easeInOutExpo: function(t, e, i, r) {
                        return 0 === t ? e : t === r ? e + i : (t /= r / 2) < 1 ? i / 2 * Math.pow(2, 10 * (t - 1)) + e : i / 2 * (2 - Math.pow(2, -10 * --t)) + e;
                    },
                    easeInCirc: function(t, e, i, r) {
                        return -i * (Math.sqrt(1 - (t /= r) * t) - 1) + e;
                    },
                    easeOutCirc: function(t, e, i, r) {
                        return i * Math.sqrt(1 - (t = t / r - 1) * t) + e;
                    },
                    easeInOutCirc: function(t, e, i, r) {
                        return (t /= r / 2) < 1 ? -i / 2 * (Math.sqrt(1 - t * t) - 1) + e : i / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + e;
                    },
                    easeInElastic: function(i, r, n, s) {
                        var o = 0;
                        return 0 === i ? r : 1 == (i /= s) ? r + n : (o || (o = .3 * s), -e(t(n, n, o, 1.70158), i, s) + r);
                    },
                    easeOutElastic: function(e, i, r, n) {
                        var s = 0, o = r;
                        if (0 === e) return i;
                        if (1 == (e /= n)) return i + r;
                        s || (s = .3 * n);
                        var a = t(o, r, s, 1.70158);
                        return a.a * Math.pow(2, -10 * e) * Math.sin((e * n - a.s) * (2 * Math.PI) / a.p) + a.c + i;
                    },
                    easeInOutElastic: function(i, r, n, s) {
                        var o = 0, a = n;
                        if (0 === i) return r;
                        if (2 == (i /= s / 2)) return r + n;
                        o || (o = s * (.3 * 1.5));
                        var h = t(a, n, o, 1.70158);
                        return i < 1 ? -.5 * e(h, i, s) + r : h.a * Math.pow(2, -10 * (i -= 1)) * Math.sin((i * s - h.s) * (2 * Math.PI) / h.p) * .5 + h.c + r;
                    },
                    easeInBack: function(t, e, i, r, n) {
                        return void 0 === n && (n = 1.70158), i * (t /= r) * t * ((n + 1) * t - n) + e;
                    },
                    easeOutBack: function(t, e, i, r, n) {
                        return void 0 === n && (n = 1.70158), i * ((t = t / r - 1) * t * ((n + 1) * t + n) + 1) + e;
                    },
                    easeInOutBack: function(t, e, i, r, n) {
                        return void 0 === n && (n = 1.70158), (t /= r / 2) < 1 ? i / 2 * (t * t * ((1 + (n *= 1.525)) * t - n)) + e : i / 2 * ((t -= 2) * t * ((1 + (n *= 1.525)) * t + n) + 2) + e;
                    },
                    easeInBounce: i,
                    easeOutBounce: r,
                    easeInOutBounce: function(t, e, n, s) {
                        return t < s / 2 ? .5 * i(2 * t, 0, n, s) + e : .5 * r(2 * t - s, 0, n, s) + .5 * n + e;
                    }
                };
            }(), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {});
                function i(t, e) {
                    this.x = t, this.y = e;
                }
                e.Point ? e.warn("fabric.Point is already defined") : (e.Point = i, i.prototype = {
                    constructor: i,
                    add: function(t) {
                        return new i(this.x + t.x, this.y + t.y);
                    },
                    addEquals: function(t) {
                        return this.x += t.x, this.y += t.y, this;
                    },
                    scalarAdd: function(t) {
                        return new i(this.x + t, this.y + t);
                    },
                    scalarAddEquals: function(t) {
                        return this.x += t, this.y += t, this;
                    },
                    subtract: function(t) {
                        return new i(this.x - t.x, this.y - t.y);
                    },
                    subtractEquals: function(t) {
                        return this.x -= t.x, this.y -= t.y, this;
                    },
                    scalarSubtract: function(t) {
                        return new i(this.x - t, this.y - t);
                    },
                    scalarSubtractEquals: function(t) {
                        return this.x -= t, this.y -= t, this;
                    },
                    multiply: function(t) {
                        return new i(this.x * t, this.y * t);
                    },
                    multiplyEquals: function(t) {
                        return this.x *= t, this.y *= t, this;
                    },
                    divide: function(t) {
                        return new i(this.x / t, this.y / t);
                    },
                    divideEquals: function(t) {
                        return this.x /= t, this.y /= t, this;
                    },
                    eq: function(t) {
                        return this.x === t.x && this.y === t.y;
                    },
                    lt: function(t) {
                        return this.x < t.x && this.y < t.y;
                    },
                    lte: function(t) {
                        return this.x <= t.x && this.y <= t.y;
                    },
                    gt: function(t) {
                        return this.x > t.x && this.y > t.y;
                    },
                    gte: function(t) {
                        return this.x >= t.x && this.y >= t.y;
                    },
                    lerp: function(t, e) {
                        return new i(this.x + (t.x - this.x) * e, this.y + (t.y - this.y) * e);
                    },
                    distanceFrom: function(t) {
                        var e = this.x - t.x, i = this.y - t.y;
                        return Math.sqrt(e * e + i * i);
                    },
                    midPointFrom: function(t) {
                        return new i(this.x + (t.x - this.x) / 2, this.y + (t.y - this.y) / 2);
                    },
                    min: function(t) {
                        return new i(Math.min(this.x, t.x), Math.min(this.y, t.y));
                    },
                    max: function(t) {
                        return new i(Math.max(this.x, t.x), Math.max(this.y, t.y));
                    },
                    toString: function() {
                        return this.x + "," + this.y;
                    },
                    setXY: function(t, e) {
                        this.x = t, this.y = e;
                    },
                    setFromPoint: function(t) {
                        this.x = t.x, this.y = t.y;
                    },
                    swap: function(t) {
                        var e = this.x, i = this.y;
                        this.x = t.x, this.y = t.y, t.x = e, t.y = i;
                    }
                });
            }(exports), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {});
                function i(t) {
                    this.status = t, this.points = [];
                }
                e.Intersection ? e.warn("fabric.Intersection is already defined") : (e.Intersection = i, 
                e.Intersection.prototype = {
                    appendPoint: function(t) {
                        this.points.push(t);
                    },
                    appendPoints: function(t) {
                        this.points = this.points.concat(t);
                    }
                }, e.Intersection.intersectLineLine = function(t, r, n, s) {
                    var o, a = (s.x - n.x) * (t.y - n.y) - (s.y - n.y) * (t.x - n.x), h = (r.x - t.x) * (t.y - n.y) - (r.y - t.y) * (t.x - n.x), c = (s.y - n.y) * (r.x - t.x) - (s.x - n.x) * (r.y - t.y);
                    if (0 !== c) {
                        var l = a / c, u = h / c;
                        0 <= l && l <= 1 && 0 <= u && u <= 1 ? (o = new i("Intersection")).points.push(new e.Point(t.x + l * (r.x - t.x), t.y + l * (r.y - t.y))) : o = new i();
                    } else o = new i(0 === a || 0 === h ? "Coincident" : "Parallel");
                    return o;
                }, e.Intersection.intersectLinePolygon = function(t, e, r) {
                    for (var n = new i(), s = r.length, o = 0; o < s; o++) {
                        var a = r[o], h = r[(o + 1) % s], c = i.intersectLineLine(t, e, a, h);
                        n.appendPoints(c.points);
                    }
                    return n.points.length > 0 && (n.status = "Intersection"), n;
                }, e.Intersection.intersectPolygonPolygon = function(t, e) {
                    for (var r = new i(), n = t.length, s = 0; s < n; s++) {
                        var o = t[s], a = t[(s + 1) % n], h = i.intersectLinePolygon(o, a, e);
                        r.appendPoints(h.points);
                    }
                    return r.points.length > 0 && (r.status = "Intersection"), r;
                }, e.Intersection.intersectPolygonRectangle = function(t, r, n) {
                    var s = r.min(n), o = r.max(n), a = new e.Point(o.x, s.y), h = new e.Point(s.x, o.y), c = i.intersectLinePolygon(s, a, t), l = i.intersectLinePolygon(a, o, t), u = i.intersectLinePolygon(o, h, t), f = i.intersectLinePolygon(h, s, t), d = new i();
                    return d.appendPoints(c.points), d.appendPoints(l.points), d.appendPoints(u.points), 
                    d.appendPoints(f.points), d.points.length > 0 && (d.status = "Intersection"), d;
                });
            }(exports), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {});
                function i(t) {
                    t ? this._tryParsingColor(t) : this.setSource([ 0, 0, 0, 1 ]);
                }
                function r(t, e, i) {
                    return i < 0 && (i += 1), i > 1 && (i -= 1), i < 1 / 6 ? t + 6 * (e - t) * i : i < .5 ? e : i < 2 / 3 ? t + (e - t) * (2 / 3 - i) * 6 : t;
                }
                e.Color ? e.warn("fabric.Color is already defined.") : (e.Color = i, e.Color.prototype = {
                    _tryParsingColor: function(t) {
                        var e;
                        t in i.colorNameMap && (t = i.colorNameMap[t]), "transparent" !== t ? ((e = i.sourceFromHex(t)) || (e = i.sourceFromRgb(t)), 
                        e || (e = i.sourceFromHsl(t)), e && this.setSource(e)) : this.setSource([ 255, 255, 255, 0 ]);
                    },
                    _rgbToHsl: function(t, i, r) {
                        t /= 255, i /= 255, r /= 255;
                        var n, s, o, a = e.util.array.max([ t, i, r ]), h = e.util.array.min([ t, i, r ]);
                        if (o = (a + h) / 2, a === h) n = s = 0; else {
                            var c = a - h;
                            switch (s = o > .5 ? c / (2 - a - h) : c / (a + h), a) {
                              case t:
                                n = (i - r) / c + (i < r ? 6 : 0);
                                break;

                              case i:
                                n = (r - t) / c + 2;
                                break;

                              case r:
                                n = (t - i) / c + 4;
                            }
                            n /= 6;
                        }
                        return [ Math.round(360 * n), Math.round(100 * s), Math.round(100 * o) ];
                    },
                    getSource: function() {
                        return this._source;
                    },
                    setSource: function(t) {
                        this._source = t;
                    },
                    toRgb: function() {
                        var t = this.getSource();
                        return "rgb(" + t[0] + "," + t[1] + "," + t[2] + ")";
                    },
                    toRgba: function() {
                        var t = this.getSource();
                        return "rgba(" + t[0] + "," + t[1] + "," + t[2] + "," + t[3] + ")";
                    },
                    toHsl: function() {
                        var t = this.getSource(), e = this._rgbToHsl(t[0], t[1], t[2]);
                        return "hsl(" + e[0] + "," + e[1] + "%," + e[2] + "%)";
                    },
                    toHsla: function() {
                        var t = this.getSource(), e = this._rgbToHsl(t[0], t[1], t[2]);
                        return "hsla(" + e[0] + "," + e[1] + "%," + e[2] + "%," + t[3] + ")";
                    },
                    toHex: function() {
                        var t, e, i, r = this.getSource();
                        return t = 1 === (t = r[0].toString(16)).length ? "0" + t : t, e = 1 === (e = r[1].toString(16)).length ? "0" + e : e, 
                        i = 1 === (i = r[2].toString(16)).length ? "0" + i : i, t.toUpperCase() + e.toUpperCase() + i.toUpperCase();
                    },
                    getAlpha: function() {
                        return this.getSource()[3];
                    },
                    setAlpha: function(t) {
                        var e = this.getSource();
                        return e[3] = t, this.setSource(e), this;
                    },
                    toGrayscale: function() {
                        var t = this.getSource(), e = parseInt((.3 * t[0] + .59 * t[1] + .11 * t[2]).toFixed(0), 10), i = t[3];
                        return this.setSource([ e, e, e, i ]), this;
                    },
                    toBlackWhite: function(t) {
                        var e = this.getSource(), i = (.3 * e[0] + .59 * e[1] + .11 * e[2]).toFixed(0), r = e[3];
                        return t = t || 127, i = Number(i) < Number(t) ? 0 : 255, this.setSource([ i, i, i, r ]), 
                        this;
                    },
                    overlayWith: function(t) {
                        t instanceof i || (t = new i(t));
                        for (var e = [], r = this.getAlpha(), n = this.getSource(), s = t.getSource(), o = 0; o < 3; o++) e.push(Math.round(.5 * n[o] + .5 * s[o]));
                        return e[3] = r, this.setSource(e), this;
                    }
                }, e.Color.reRGBa = /^rgba?\(\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/, 
                e.Color.reHSLa = /^hsla?\(\s*(\d{1,3})\s*,\s*(\d{1,3}\%)\s*,\s*(\d{1,3}\%)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/, 
                e.Color.reHex = /^#?([0-9a-f]{6}|[0-9a-f]{3})$/i, e.Color.colorNameMap = {
                    aqua: "#00FFFF",
                    black: "#000000",
                    blue: "#0000FF",
                    fuchsia: "#FF00FF",
                    gray: "#808080",
                    green: "#008000",
                    lime: "#00FF00",
                    maroon: "#800000",
                    navy: "#000080",
                    olive: "#808000",
                    orange: "#FFA500",
                    purple: "#800080",
                    red: "#FF0000",
                    silver: "#C0C0C0",
                    teal: "#008080",
                    white: "#FFFFFF",
                    yellow: "#FFFF00"
                }, e.Color.fromRgb = function(t) {
                    return i.fromSource(i.sourceFromRgb(t));
                }, e.Color.sourceFromRgb = function(t) {
                    var e = t.match(i.reRGBa);
                    if (e) {
                        var r = parseInt(e[1], 10) / (/%$/.test(e[1]) ? 100 : 1) * (/%$/.test(e[1]) ? 255 : 1), n = parseInt(e[2], 10) / (/%$/.test(e[2]) ? 100 : 1) * (/%$/.test(e[2]) ? 255 : 1), s = parseInt(e[3], 10) / (/%$/.test(e[3]) ? 100 : 1) * (/%$/.test(e[3]) ? 255 : 1);
                        return [ parseInt(r, 10), parseInt(n, 10), parseInt(s, 10), e[4] ? parseFloat(e[4]) : 1 ];
                    }
                }, e.Color.fromRgba = i.fromRgb, e.Color.fromHsl = function(t) {
                    return i.fromSource(i.sourceFromHsl(t));
                }, e.Color.sourceFromHsl = function(t) {
                    var e = t.match(i.reHSLa);
                    if (e) {
                        var n, s, o, a = (parseFloat(e[1]) % 360 + 360) % 360 / 360, h = parseFloat(e[2]) / (/%$/.test(e[2]) ? 100 : 1), c = parseFloat(e[3]) / (/%$/.test(e[3]) ? 100 : 1);
                        if (0 === h) n = s = o = c; else {
                            var l = c <= .5 ? c * (h + 1) : c + h - c * h, u = 2 * c - l;
                            n = r(u, l, a + 1 / 3), s = r(u, l, a), o = r(u, l, a - 1 / 3);
                        }
                        return [ Math.round(255 * n), Math.round(255 * s), Math.round(255 * o), e[4] ? parseFloat(e[4]) : 1 ];
                    }
                }, e.Color.fromHsla = i.fromHsl, e.Color.fromHex = function(t) {
                    return i.fromSource(i.sourceFromHex(t));
                }, e.Color.sourceFromHex = function(t) {
                    if (t.match(i.reHex)) {
                        var e = t.slice(t.indexOf("#") + 1), r = 3 === e.length, n = r ? e.charAt(0) + e.charAt(0) : e.substring(0, 2), s = r ? e.charAt(1) + e.charAt(1) : e.substring(2, 4), o = r ? e.charAt(2) + e.charAt(2) : e.substring(4, 6);
                        return [ parseInt(n, 16), parseInt(s, 16), parseInt(o, 16), 1 ];
                    }
                }, e.Color.fromSource = function(t) {
                    var e = new i();
                    return e.setSource(t), e;
                });
            }(exports), fabric.Pattern = fabric.util.createClass({
                repeat: "repeat",
                offsetX: 0,
                offsetY: 0,
                initialize: function(t) {
                    if (t || (t = {}), this.id = fabric.Object.__uid++, t.source) if ("string" == typeof t.source) if (void 0 !== fabric.util.getFunctionBody(t.source)) this.source = new Function(fabric.util.getFunctionBody(t.source)); else {
                        var e = this;
                        this.source = fabric.util.createImage(), fabric.util.loadImage(t.source, function(t) {
                            e.source = t;
                        });
                    } else this.source = t.source;
                    t.repeat && (this.repeat = t.repeat), t.offsetX && (this.offsetX = t.offsetX), t.offsetY && (this.offsetY = t.offsetY);
                },
                toObject: function() {
                    var t;
                    return "function" == typeof this.source ? t = String(this.source) : "string" == typeof this.source.src ? t = this.source.src : "object" == typeof this.source && this.source.toDataURL && (t = this.source.toDataURL()), 
                    {
                        source: t,
                        repeat: this.repeat,
                        offsetX: this.offsetX,
                        offsetY: this.offsetY
                    };
                },
                toLive: function(t) {
                    var e = "function" == typeof this.source ? this.source() : this.source;
                    if (!e) return "";
                    if (void 0 !== e.src) {
                        if (!e.complete) return "";
                        if (0 === e.naturalWidth || 0 === e.naturalHeight) return "";
                    }
                    return t.createPattern(e, this.repeat);
                }
            }), function() {
                "use strict";
                if (fabric.StaticCanvas) fabric.warn("fabric.StaticCanvas is already defined."); else {
                    var t = fabric.util.object.extend, e = fabric.util.getElementOffset, i = fabric.util.removeFromArray, r = (fabric.util.toFixed, 
                    new Error("Could not initialize `canvas` element"));
                    fabric.StaticCanvas = fabric.util.createClass({
                        initialize: function(t, e) {
                            e || (e = {}), this._initStatic(t, e);
                        },
                        backgroundColor: "",
                        backgroundImage: null,
                        overlayColor: "",
                        overlayImage: null,
                        includeDefaultValues: !0,
                        stateful: !0,
                        renderOnAddRemove: !0,
                        clipTo: null,
                        controlsAboveOverlay: !1,
                        allowTouchScrolling: !1,
                        imageSmoothingEnabled: !0,
                        preserveObjectStacking: !1,
                        viewportTransform: [ 1, 0, 0, 1, 0, 0 ],
                        onBeforeScaleRotate: function() {},
                        enableRetinaScaling: !0,
                        _initStatic: function(t, e) {
                            this._objects = [], this._createLowerCanvas(t), this._initOptions(e), this._setImageSmoothing(), 
                            this.interactive || this._initRetinaScaling(), e.overlayImage && this.setOverlayImage(e.overlayImage, this.renderAll.bind(this)), 
                            e.backgroundImage && this.setBackgroundImage(e.backgroundImage, this.renderAll.bind(this)), 
                            e.backgroundColor && this.setBackgroundColor(e.backgroundColor, this.renderAll.bind(this)), 
                            e.overlayColor && this.setOverlayColor(e.overlayColor, this.renderAll.bind(this)), 
                            this.calcOffset();
                        },
                        _isRetinaScaling: function() {
                            return 1 !== fabric.devicePixelRatio && this.enableRetinaScaling;
                        },
                        _initRetinaScaling: function() {
                            this._isRetinaScaling() && (this.lowerCanvasEl.setAttribute("width", this.width * fabric.devicePixelRatio), 
                            this.lowerCanvasEl.setAttribute("height", this.height * fabric.devicePixelRatio), 
                            this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio));
                        },
                        calcOffset: function() {
                            return this._offset = e(this.lowerCanvasEl), this;
                        },
                        setOverlayImage: function(t, e, i) {
                            return this.__setBgOverlayImage("overlayImage", t, e, i);
                        },
                        setBackgroundImage: function(t, e, i) {
                            return this.__setBgOverlayImage("backgroundImage", t, e, i);
                        },
                        setOverlayColor: function(t, e) {
                            return this.__setBgOverlayColor("overlayColor", t, e);
                        },
                        setBackgroundColor: function(t, e) {
                            return this.__setBgOverlayColor("backgroundColor", t, e);
                        },
                        _setImageSmoothing: function() {
                            var t = this.getContext();
                            t.imageSmoothingEnabled = t.imageSmoothingEnabled || t.webkitImageSmoothingEnabled || t.mozImageSmoothingEnabled || t.msImageSmoothingEnabled || t.oImageSmoothingEnabled, 
                            t.imageSmoothingEnabled = this.imageSmoothingEnabled;
                        },
                        __setBgOverlayImage: function(t, e, i, r) {
                            return "string" == typeof e ? fabric.util.loadImage(e, function(e) {
                                this[t] = new fabric.Image(e, r), i && i(e);
                            }, this, r && r.crossOrigin) : (r && e.setOptions(r), this[t] = e, i && i(e)), this;
                        },
                        __setBgOverlayColor: function(t, e, i) {
                            if (e && e.source) {
                                var r = this;
                                fabric.util.loadImage(e.source, function(n) {
                                    r[t] = new fabric.Pattern({
                                        source: n,
                                        repeat: e.repeat,
                                        offsetX: e.offsetX,
                                        offsetY: e.offsetY
                                    }), i && i();
                                });
                            } else this[t] = e, i && i();
                            return this;
                        },
                        _createCanvasElement: function() {
                            var t = fabric.document.createElement("canvas");
                            if (t.style || (t.style = {}), !t) throw r;
                            return this._initCanvasElement(t), t;
                        },
                        _initCanvasElement: function(t) {
                            if (fabric.util.createCanvasElement(t), void 0 === t.getContext) throw r;
                        },
                        _initOptions: function(t) {
                            for (var e in t) this[e] = t[e];
                            this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0, this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0, 
                            this.lowerCanvasEl.style && (this.lowerCanvasEl.width = this.width, this.lowerCanvasEl.height = this.height, 
                            this.lowerCanvasEl.style.width = this.width + "px", this.lowerCanvasEl.style.height = this.height + "px", 
                            this.viewportTransform = this.viewportTransform.slice());
                        },
                        _createLowerCanvas: function(t) {
                            this.lowerCanvasEl = fabric.util.getById(t) || this._createCanvasElement(), this._initCanvasElement(this.lowerCanvasEl), 
                            fabric.util.addClass(this.lowerCanvasEl, "lower-canvas"), this.interactive && this._applyCanvasStyle(this.lowerCanvasEl), 
                            this.contextContainer = this.lowerCanvasEl.getContext("2d");
                        },
                        getWidth: function() {
                            return this.width;
                        },
                        getHeight: function() {
                            return this.height;
                        },
                        setWidth: function(t, e) {
                            return this.setDimensions({
                                width: t
                            }, e);
                        },
                        setHeight: function(t, e) {
                            return this.setDimensions({
                                height: t
                            }, e);
                        },
                        setDimensions: function(t, e) {
                            var i;
                            for (var r in e = e || {}, t) i = t[r], e.cssOnly || (this._setBackstoreDimension(r, t[r]), 
                            i += "px"), e.backstoreOnly || this._setCssDimension(r, i);
                            return this._initRetinaScaling(), this._setImageSmoothing(), this.calcOffset(), 
                            e.cssOnly || this.renderAll(), this;
                        },
                        _setBackstoreDimension: function(t, e) {
                            return this.lowerCanvasEl[t] = e, this.upperCanvasEl && (this.upperCanvasEl[t] = e), 
                            this.cacheCanvasEl && (this.cacheCanvasEl[t] = e), this[t] = e, this;
                        },
                        _setCssDimension: function(t, e) {
                            return this.lowerCanvasEl.style[t] = e, this.upperCanvasEl && (this.upperCanvasEl.style[t] = e), 
                            this.wrapperEl && (this.wrapperEl.style[t] = e), this;
                        },
                        getZoom: function() {
                            return Math.sqrt(this.viewportTransform[0] * this.viewportTransform[3]);
                        },
                        setViewportTransform: function(t) {
                            var e = this.getActiveGroup();
                            this.viewportTransform = t, this.renderAll();
                            for (var i = 0, r = this._objects.length; i < r; i++) this._objects[i].setCoords();
                            return e && e.setCoords(), this;
                        },
                        zoomToPoint: function(t, e) {
                            var i = t;
                            t = fabric.util.transformPoint(t, fabric.util.invertTransform(this.viewportTransform)), 
                            this.viewportTransform[0] = e, this.viewportTransform[3] = e;
                            var r = fabric.util.transformPoint(t, this.viewportTransform);
                            this.viewportTransform[4] += i.x - r.x, this.viewportTransform[5] += i.y - r.y, 
                            this.renderAll();
                            for (var n = 0, s = this._objects.length; n < s; n++) this._objects[n].setCoords();
                            return this;
                        },
                        setZoom: function(t) {
                            return this.zoomToPoint(new fabric.Point(0, 0), t), this;
                        },
                        absolutePan: function(t) {
                            this.viewportTransform[4] = -t.x, this.viewportTransform[5] = -t.y, this.renderAll();
                            for (var e = 0, i = this._objects.length; e < i; e++) this._objects[e].setCoords();
                            return this;
                        },
                        relativePan: function(t) {
                            return this.absolutePan(new fabric.Point(-t.x - this.viewportTransform[4], -t.y - this.viewportTransform[5]));
                        },
                        getElement: function() {
                            return this.lowerCanvasEl;
                        },
                        getActiveObject: function() {
                            return null;
                        },
                        getActiveGroup: function() {
                            return null;
                        },
                        _onObjectAdded: function(t) {
                            this.stateful && t.setupState(), t._set("canvas", this), t.setCoords(), this.fire("object:added", {
                                target: t
                            }), t.fire("added");
                        },
                        _onObjectRemoved: function(t) {
                            this.getActiveObject() === t && (this.fire("before:selection:cleared", {
                                target: t
                            }), this._discardActiveObject(), this.fire("selection:cleared")), this.fire("object:removed", {
                                target: t
                            }), t.fire("removed");
                        },
                        clearContext: function(t) {
                            return t.clearRect(0, 0, this.width, this.height), this;
                        },
                        getContext: function() {
                            return this.contextContainer;
                        },
                        clear: function() {
                            return this._objects.length = 0, this.discardActiveGroup && this.discardActiveGroup(), 
                            this.discardActiveObject && this.discardActiveObject(), this.clearContext(this.contextContainer), 
                            this.contextTop && this.clearContext(this.contextTop), this.fire("canvas:cleared"), 
                            this.renderAll(), this;
                        },
                        _chooseObjectsToRender: function() {
                            var t, e = this.getActiveGroup(), i = [], r = [];
                            if (e && !this.preserveObjectStacking) {
                                for (var n = 0, s = this._objects.length; n < s; n++) t = this._objects[n], e.contains(t) ? r.push(t) : i.push(t);
                                e._set("_objects", r);
                            } else i = this._objects;
                            return i;
                        },
                        renderAll: function() {
                            var t, e = this.contextContainer;
                            return this.contextTop && this.selection && !this._groupSelector && !this.isDrawingMode && this.clearContext(this.contextTop), 
                            this.clearContext(e), this.fire("before:render"), this.clipTo && fabric.util.clipContext(this, e), 
                            this._renderBackground(e), e.save(), t = this._chooseObjectsToRender(), e.transform.apply(e, this.viewportTransform), 
                            this._renderObjects(e, t), this.preserveObjectStacking || this._renderObjects(e, [ this.getActiveGroup() ]), 
                            e.restore(), !this.controlsAboveOverlay && this.interactive && this.drawControls(e), 
                            this.clipTo && e.restore(), this._renderOverlay(e), this.controlsAboveOverlay && this.interactive && this.drawControls(e), 
                            this.fire("after:render"), this;
                        },
                        _renderObjects: function(t, e) {
                            for (var i = 0, r = e.length; i < r; ++i) e[i] && e[i].render(t);
                        },
                        _renderBackgroundOrOverlay: function(t, e) {
                            var i = this[e + "Color"];
                            i && (t.fillStyle = i.toLive ? i.toLive(t) : i, t.fillRect(i.offsetX || 0, i.offsetY || 0, this.width, this.height)), 
                            (i = this[e + "Image"]) && i.render(t);
                        },
                        _renderBackground: function(t) {
                            this._renderBackgroundOrOverlay(t, "background");
                        },
                        _renderOverlay: function(t) {
                            this._renderBackgroundOrOverlay(t, "overlay");
                        },
                        renderTop: function() {
                            var t = this.contextTop || this.contextContainer;
                            return this.clearContext(t), this.selection && this._groupSelector && this._drawSelection(), 
                            this.fire("after:render"), this;
                        },
                        getCenter: function() {
                            return {
                                top: this.getHeight() / 2,
                                left: this.getWidth() / 2
                            };
                        },
                        centerObjectH: function(t) {
                            return this._centerObject(t, new fabric.Point(this.getCenter().left, t.getCenterPoint().y)), 
                            this.renderAll(), this;
                        },
                        centerObjectV: function(t) {
                            return this._centerObject(t, new fabric.Point(t.getCenterPoint().x, this.getCenter().top)), 
                            this.renderAll(), this;
                        },
                        centerObject: function(t) {
                            var e = this.getCenter();
                            return this._centerObject(t, new fabric.Point(e.left, e.top)), this.renderAll(), 
                            this;
                        },
                        _centerObject: function(t, e) {
                            return t.setPositionByOrigin(e, "center", "center"), this;
                        },
                        toDatalessJSON: function(t) {
                            return this.toDatalessObject(t);
                        },
                        toObject: function(t) {
                            return this._toObjectMethod("toObject", t);
                        },
                        toDatalessObject: function(t) {
                            return this._toObjectMethod("toDatalessObject", t);
                        },
                        _toObjectMethod: function(e, i) {
                            var r = {
                                objects: this._toObjects(e, i)
                            };
                            return t(r, this.__serializeBgOverlay()), fabric.util.populateWithProperties(this, r, i), 
                            r;
                        },
                        _toObjects: function(t, e) {
                            return this.getObjects().map(function(i) {
                                return this._toObject(i, t, e);
                            }, this);
                        },
                        _toObject: function(t, e, i) {
                            var r;
                            this.includeDefaultValues || (r = t.includeDefaultValues, t.includeDefaultValues = !1);
                            var n = this._realizeGroupTransformOnObject(t), s = t[e](i);
                            return this.includeDefaultValues || (t.includeDefaultValues = r), this._unwindGroupTransformOnObject(t, n), 
                            s;
                        },
                        _realizeGroupTransformOnObject: function(t) {
                            if (t.group && t.group === this.getActiveGroup()) {
                                var e = {};
                                return [ "angle", "flipX", "flipY", "height", "left", "scaleX", "scaleY", "top", "width" ].forEach(function(i) {
                                    e[i] = t[i];
                                }), this.getActiveGroup().realizeTransform(t), e;
                            }
                            return null;
                        },
                        _unwindGroupTransformOnObject: function(t, e) {
                            e && t.set(e);
                        },
                        __serializeBgOverlay: function() {
                            var t = {
                                background: this.backgroundColor && this.backgroundColor.toObject ? this.backgroundColor.toObject() : this.backgroundColor
                            };
                            return this.overlayColor && (t.overlay = this.overlayColor.toObject ? this.overlayColor.toObject() : this.overlayColor), 
                            this.backgroundImage && (t.backgroundImage = this.backgroundImage.toObject()), this.overlayImage && (t.overlayImage = this.overlayImage.toObject()), 
                            t;
                        },
                        sendToBack: function(t) {
                            if (!t) return this;
                            var e, r, n, s = this.getActiveGroup ? this.getActiveGroup() : null;
                            if (t === s) for (e = (n = s._objects).length; e--; ) r = n[e], i(this._objects, r), 
                            this._objects.unshift(r); else i(this._objects, t), this._objects.unshift(t);
                            return this.renderAll && this.renderAll();
                        },
                        bringToFront: function(t) {
                            if (!t) return this;
                            var e, r, n, s = this.getActiveGroup ? this.getActiveGroup() : null;
                            if (t === s) for (n = s._objects, e = 0; e < n.length; e++) r = n[e], i(this._objects, r), 
                            this._objects.push(r); else i(this._objects, t), this._objects.push(t);
                            return this.renderAll && this.renderAll();
                        },
                        sendBackwards: function(t, e) {
                            if (!t) return this;
                            var r, n, s, o, a, h = this.getActiveGroup ? this.getActiveGroup() : null;
                            if (t === h) for (a = h._objects, r = 0; r < a.length; r++) n = a[r], 0 !== (s = this._objects.indexOf(n)) && (o = s - 1, 
                            i(this._objects, n), this._objects.splice(o, 0, n)); else 0 !== (s = this._objects.indexOf(t)) && (o = this._findNewLowerIndex(t, s, e), 
                            i(this._objects, t), this._objects.splice(o, 0, t));
                            return this.renderAll && this.renderAll(), this;
                        },
                        _findNewLowerIndex: function(t, e, i) {
                            var r;
                            if (i) {
                                r = e;
                                for (var n = e - 1; n >= 0; --n) {
                                    if (t.intersectsWithObject(this._objects[n]) || t.isContainedWithinObject(this._objects[n]) || this._objects[n].isContainedWithinObject(t)) {
                                        r = n;
                                        break;
                                    }
                                }
                            } else r = e - 1;
                            return r;
                        },
                        bringForward: function(t, e) {
                            if (!t) return this;
                            var r, n, s, o, a, h = this.getActiveGroup ? this.getActiveGroup() : null;
                            if (t === h) for (r = (a = h._objects).length; r--; ) n = a[r], (s = this._objects.indexOf(n)) !== this._objects.length - 1 && (o = s + 1, 
                            i(this._objects, n), this._objects.splice(o, 0, n)); else (s = this._objects.indexOf(t)) !== this._objects.length - 1 && (o = this._findNewUpperIndex(t, s, e), 
                            i(this._objects, t), this._objects.splice(o, 0, t));
                            return this.renderAll && this.renderAll(), this;
                        },
                        _findNewUpperIndex: function(t, e, i) {
                            var r;
                            if (i) {
                                r = e;
                                for (var n = e + 1; n < this._objects.length; ++n) {
                                    if (t.intersectsWithObject(this._objects[n]) || t.isContainedWithinObject(this._objects[n]) || this._objects[n].isContainedWithinObject(t)) {
                                        r = n;
                                        break;
                                    }
                                }
                            } else r = e + 1;
                            return r;
                        },
                        moveTo: function(t, e) {
                            return i(this._objects, t), this._objects.splice(e, 0, t), this.renderAll && this.renderAll();
                        },
                        dispose: function() {
                            return this.clear(), this;
                        },
                        toString: function() {
                            return "#<fabric.Canvas (" + this.complexity() + "): { objects: " + this.getObjects().length + " }>";
                        }
                    }), t(fabric.StaticCanvas.prototype, fabric.Observable), t(fabric.StaticCanvas.prototype, fabric.Collection), 
                    t(fabric.StaticCanvas.prototype, fabric.DataURLExporter), t(fabric.StaticCanvas, {
                        EMPTY_JSON: '{"objects": [], "background": "white"}',
                        supports: function(t) {
                            var e = fabric.util.createCanvasElement();
                            if (!e || !e.getContext) return null;
                            var i = e.getContext("2d");
                            if (!i) return null;
                            switch (t) {
                              case "getImageData":
                                return void 0 !== i.getImageData;

                              case "setLineDash":
                                return void 0 !== i.setLineDash;

                              case "toDataURL":
                                return void 0 !== e.toDataURL;

                              case "toDataURLWithQuality":
                                try {
                                    return e.toDataURL("image/jpeg", 0), !0;
                                } catch (t) {}
                                return !1;

                              default:
                                return null;
                            }
                        }
                    }), fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;
                }
            }(), function() {
                var t = fabric.util.getPointer, e = fabric.util.degreesToRadians, i = fabric.util.radiansToDegrees, r = Math.atan2, n = Math.abs;
                for (var s in fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, {
                    initialize: function(t, e) {
                        e || (e = {}), this._initStatic(t, e), this._initInteractive(), this._createCacheCanvas();
                    },
                    uniScaleTransform: !1,
                    uniScaleKey: "shiftKey",
                    centeredScaling: !1,
                    centeredRotation: !1,
                    centeredKey: "altKey",
                    altActionKey: "shiftKey",
                    interactive: !0,
                    selection: !0,
                    selectionKey: "shiftKey",
                    selectionColor: "rgba(100, 100, 255, 0.3)",
                    selectionDashArray: [],
                    selectionBorderColor: "rgba(255, 255, 255, 0.3)",
                    selectionLineWidth: 1,
                    hoverCursor: "move",
                    moveCursor: "move",
                    defaultCursor: "default",
                    freeDrawingCursor: "crosshair",
                    rotationCursor: "crosshair",
                    containerClass: "canvas-container",
                    perPixelTargetFind: !1,
                    targetFindTolerance: 0,
                    skipTargetFind: !1,
                    isDrawingMode: !1,
                    _initInteractive: function() {
                        this._currentTransform = null, this._groupSelector = null, this._initWrapperElement(), 
                        this._createUpperCanvas(), this._initEventListeners(), this._initRetinaScaling(), 
                        this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this), this.calcOffset();
                    },
                    _resetCurrentTransform: function() {
                        var t = this._currentTransform;
                        t.target.set({
                            scaleX: t.original.scaleX,
                            scaleY: t.original.scaleY,
                            skewX: t.original.skewX,
                            skewY: t.original.skewY,
                            left: t.original.left,
                            top: t.original.top
                        }), this._shouldCenterTransform(t.target) ? "rotate" === t.action ? this._setOriginToCenter(t.target) : ("center" !== t.originX && ("right" === t.originX ? t.mouseXSign = -1 : t.mouseXSign = 1), 
                        "center" !== t.originY && ("bottom" === t.originY ? t.mouseYSign = -1 : t.mouseYSign = 1), 
                        t.originX = "center", t.originY = "center") : (t.originX = t.original.originX, t.originY = t.original.originY);
                    },
                    containsPoint: function(t, e) {
                        var i = this.getPointer(t, !0), r = this._normalizePointer(e, i);
                        return e.containsPoint(r) || e._findTargetCorner(i);
                    },
                    _normalizePointer: function(t, e) {
                        var i, r, n = this.getActiveGroup();
                        return n && "group" !== t.type && n.contains(t) && (r = fabric.util.multiplyTransformMatrices(this.viewportTransform, n.calcTransformMatrix()), 
                        r = fabric.util.invertTransform(r), e = fabric.util.transformPoint(e, r, !1), i = fabric.util.transformPoint(n.getCenterPoint(), r, !1), 
                        e.x -= i.x, e.y -= i.y), {
                            x: e.x,
                            y: e.y
                        };
                    },
                    isTargetTransparent: function(t, e, i) {
                        var r = t.hasBorders, n = t.transparentCorners, s = this.contextCache, o = t.group && t.group === this.getActiveGroup();
                        t.hasBorders = t.transparentCorners = !1, o && (s.save(), s.transform.apply(s, t.group.calcTransformMatrix())), 
                        t.render(s), t.active && t._renderControls(s), t.hasBorders = r, t.transparentCorners = n;
                        var a = fabric.util.isTransparent(s, e, i, this.targetFindTolerance);
                        return o && s.restore(), this.clearContext(s), a;
                    },
                    _shouldClearSelection: function(t, e) {
                        var i = this.getActiveGroup(), r = this.getActiveObject();
                        return !e || e && i && !i.contains(e) && i !== e && !t[this.selectionKey] || e && !e.evented || e && !e.selectable && r && r !== e;
                    },
                    _shouldCenterTransform: function(t) {
                        if (t) {
                            var e, i = this._currentTransform;
                            return "scale" === i.action || "scaleX" === i.action || "scaleY" === i.action ? e = this.centeredScaling || t.centeredScaling : "rotate" === i.action && (e = this.centeredRotation || t.centeredRotation), 
                            e ? !i.altKey : i.altKey;
                        }
                    },
                    _getOriginFromCorner: function(t, e) {
                        var i = {
                            x: t.originX,
                            y: t.originY
                        };
                        return "ml" === e || "tl" === e || "bl" === e ? i.x = "right" : "mr" !== e && "tr" !== e && "br" !== e || (i.x = "left"), 
                        "tl" === e || "mt" === e || "tr" === e ? i.y = "bottom" : "bl" !== e && "mb" !== e && "br" !== e || (i.y = "top"), 
                        i;
                    },
                    _getActionFromCorner: function(t, e, i) {
                        if (!e) return "drag";
                        switch (e) {
                          case "mtr":
                            return "rotate";

                          case "ml":
                          case "mr":
                            return i[this.altActionKey] ? "skewY" : "scaleX";

                          case "mt":
                          case "mb":
                            return i[this.altActionKey] ? "skewX" : "scaleY";

                          default:
                            return "scale";
                        }
                    },
                    _setupCurrentTransform: function(t, i) {
                        if (i) {
                            var r = this.getPointer(t), n = i._findTargetCorner(this.getPointer(t, !0)), s = this._getActionFromCorner(i, n, t), o = this._getOriginFromCorner(i, n);
                            this._currentTransform = {
                                target: i,
                                action: s,
                                corner: n,
                                scaleX: i.scaleX,
                                scaleY: i.scaleY,
                                skewX: i.skewX,
                                skewY: i.skewY,
                                offsetX: r.x - i.left,
                                offsetY: r.y - i.top,
                                originX: o.x,
                                originY: o.y,
                                ex: r.x,
                                ey: r.y,
                                lastX: r.x,
                                lastY: r.y,
                                left: i.left,
                                top: i.top,
                                theta: e(i.angle),
                                width: i.width * i.scaleX,
                                mouseXSign: 1,
                                mouseYSign: 1,
                                shiftKey: t.shiftKey,
                                altKey: t[this.centeredKey]
                            }, this._currentTransform.original = {
                                left: i.left,
                                top: i.top,
                                scaleX: i.scaleX,
                                scaleY: i.scaleY,
                                skewX: i.skewX,
                                skewY: i.skewY,
                                originX: o.x,
                                originY: o.y
                            }, this._resetCurrentTransform();
                        }
                    },
                    _translateObject: function(t, e) {
                        var i = this._currentTransform, r = i.target, n = t - i.offsetX, s = e - i.offsetY, o = !r.get("lockMovementX") && r.left !== n, a = !r.get("lockMovementY") && r.top !== s;
                        return o && r.set("left", n), a && r.set("top", s), o || a;
                    },
                    _changeSkewTransformOrigin: function(t, e, i) {
                        var r = "originX", n = {
                            0: "center"
                        }, s = e.target.skewX, o = "left", a = "right", h = "mt" === e.corner || "ml" === e.corner ? 1 : -1, c = 1;
                        t = t > 0 ? 1 : -1, "y" === i && (s = e.target.skewY, o = "top", a = "bottom", r = "originY"), 
                        n[-1] = o, n[1] = a, e.target.flipX && (c *= -1), e.target.flipY && (c *= -1), 0 === s ? (e.skewSign = -h * t * c, 
                        e[r] = n[-t]) : (s = s > 0 ? 1 : -1, e.skewSign = s, e[r] = n[s * h * c]);
                    },
                    _skewObject: function(t, e, i) {
                        var r, n = this._currentTransform, s = n.target, o = s.get("lockSkewingX"), a = s.get("lockSkewingY");
                        if (o && "x" === i || a && "y" === i) return !1;
                        var h, c, l = s.getCenterPoint(), u = s.toLocalPoint(new fabric.Point(t, e), "center", "center")[i], f = s.toLocalPoint(new fabric.Point(n.lastX, n.lastY), "center", "center")[i], d = s._getTransformedDimensions();
                        return this._changeSkewTransformOrigin(u - f, n, i), h = s.toLocalPoint(new fabric.Point(t, e), n.originX, n.originY)[i], 
                        c = s.translateToOriginPoint(l, n.originX, n.originY), r = this._setObjectSkew(h, n, i, d), 
                        n.lastX = t, n.lastY = e, s.setPositionByOrigin(c, n.originX, n.originY), r;
                    },
                    _setObjectSkew: function(t, e, i, r) {
                        var n, s, o, a, h, c, l, u, f, d, p = e.target, g = e.skewSign;
                        return "x" === i ? (h = "y", c = "Y", l = "X", f = 0, d = p.skewY) : (h = "x", c = "X", 
                        l = "Y", f = p.skewX, d = 0), a = p._getTransformedDimensions(f, d), (u = 2 * Math.abs(t) - a[i]) <= 2 ? n = 0 : (n = g * Math.atan(u / p["scale" + l] / (a[h] / p["scale" + c])), 
                        n = fabric.util.radiansToDegrees(n)), s = p["skew" + l] !== n, p.set("skew" + l, n), 
                        0 !== p["skew" + c] && (o = p._getTransformedDimensions(), n = r[h] / o[h] * p["scale" + c], 
                        p.set("scale" + c, n)), s;
                    },
                    _scaleObject: function(t, e, i) {
                        var r = this._currentTransform, n = r.target, s = n.get("lockScalingX"), o = n.get("lockScalingY"), a = n.get("lockScalingFlip");
                        if (s && o) return !1;
                        var h, c = n.translateToOriginPoint(n.getCenterPoint(), r.originX, r.originY), l = n.toLocalPoint(new fabric.Point(t, e), r.originX, r.originY), u = n._getTransformedDimensions();
                        return this._setLocalMouse(l, r), h = this._setObjectScale(l, r, s, o, i, a, u), 
                        n.setPositionByOrigin(c, r.originX, r.originY), h;
                    },
                    _setObjectScale: function(t, e, i, r, n, s, o) {
                        var a, h, c, l, u = e.target, f = !1, d = !1, p = !1;
                        return c = t.x * u.scaleX / o.x, l = t.y * u.scaleY / o.y, a = u.scaleX !== c, h = u.scaleY !== l, 
                        s && c <= 0 && c < u.scaleX && (f = !0), s && l <= 0 && l < u.scaleY && (d = !0), 
                        "equally" !== n || i || r ? n ? "x" !== n || u.get("lockUniScaling") ? "y" !== n || u.get("lockUniScaling") || d || r || u.set("scaleY", l) && (p = p || h) : f || i || u.set("scaleX", c) && (p = p || a) : (f || i || u.set("scaleX", c) && (p = p || a), 
                        d || r || u.set("scaleY", l) && (p = p || h)) : f || d || (p = this._scaleObjectEqually(t, u, e, o)), 
                        e.newScaleX = c, e.newScaleY = l, f || d || this._flipObject(e, n), p;
                    },
                    _scaleObjectEqually: function(t, e, i, r) {
                        var n, s = t.y + t.x, o = r.y * i.original.scaleY / e.scaleY + r.x * i.original.scaleX / e.scaleX;
                        return i.newScaleX = i.original.scaleX * s / o, i.newScaleY = i.original.scaleY * s / o, 
                        n = i.newScaleX !== e.scaleX || i.newScaleY !== e.scaleY, e.set("scaleX", i.newScaleX), 
                        e.set("scaleY", i.newScaleY), n;
                    },
                    _flipObject: function(t, e) {
                        t.newScaleX < 0 && "y" !== e && ("left" === t.originX ? t.originX = "right" : "right" === t.originX && (t.originX = "left")), 
                        t.newScaleY < 0 && "x" !== e && ("top" === t.originY ? t.originY = "bottom" : "bottom" === t.originY && (t.originY = "top"));
                    },
                    _setLocalMouse: function(t, e) {
                        var i = e.target;
                        "right" === e.originX ? t.x *= -1 : "center" === e.originX && (t.x *= 2 * e.mouseXSign, 
                        t.x < 0 && (e.mouseXSign = -e.mouseXSign)), "bottom" === e.originY ? t.y *= -1 : "center" === e.originY && (t.y *= 2 * e.mouseYSign, 
                        t.y < 0 && (e.mouseYSign = -e.mouseYSign)), n(t.x) > i.padding ? t.x < 0 ? t.x += i.padding : t.x -= i.padding : t.x = 0, 
                        n(t.y) > i.padding ? t.y < 0 ? t.y += i.padding : t.y -= i.padding : t.y = 0;
                    },
                    _rotateObject: function(t, e) {
                        var n = this._currentTransform;
                        if (n.target.get("lockRotation")) return !1;
                        var s = r(n.ey - n.top, n.ex - n.left), o = r(e - n.top, t - n.left), a = i(o - s + n.theta);
                        return a < 0 && (a = 360 + a), n.target.angle = a % 360, !0;
                    },
                    setCursor: function(t) {
                        this.upperCanvasEl.style.cursor = t;
                    },
                    _resetObjectTransform: function(t) {
                        t.scaleX = 1, t.scaleY = 1, t.skewX = 0, t.skewY = 0, t.setAngle(0);
                    },
                    _drawSelection: function() {
                        var t = this.contextTop, e = this._groupSelector, i = e.left, r = e.top, s = n(i), o = n(r);
                        if (t.fillStyle = this.selectionColor, t.fillRect(e.ex - (i > 0 ? 0 : -i), e.ey - (r > 0 ? 0 : -r), s, o), 
                        t.lineWidth = this.selectionLineWidth, t.strokeStyle = this.selectionBorderColor, 
                        this.selectionDashArray.length > 1) {
                            var a = e.ex + .5 - (i > 0 ? 0 : s), h = e.ey + .5 - (r > 0 ? 0 : o);
                            t.beginPath(), fabric.util.drawDashedLine(t, a, h, a + s, h, this.selectionDashArray), 
                            fabric.util.drawDashedLine(t, a, h + o - 1, a + s, h + o - 1, this.selectionDashArray), 
                            fabric.util.drawDashedLine(t, a, h, a, h + o, this.selectionDashArray), fabric.util.drawDashedLine(t, a + s - 1, h, a + s - 1, h + o, this.selectionDashArray), 
                            t.closePath(), t.stroke();
                        } else t.strokeRect(e.ex + .5 - (i > 0 ? 0 : s), e.ey + .5 - (r > 0 ? 0 : o), s, o);
                    },
                    _isLastRenderedObject: function(t) {
                        return this.controlsAboveOverlay && this.lastRenderedObjectWithControlsAboveOverlay && this.lastRenderedObjectWithControlsAboveOverlay.visible && this.containsPoint(t, this.lastRenderedObjectWithControlsAboveOverlay) && this.lastRenderedObjectWithControlsAboveOverlay._findTargetCorner(this.getPointer(t, !0));
                    },
                    findTarget: function(t, e) {
                        if (!this.skipTargetFind) {
                            if (this._isLastRenderedObject(t)) return this.lastRenderedObjectWithControlsAboveOverlay;
                            var i = this.getActiveGroup();
                            if (!e && this._checkTarget(t, i, this.getPointer(t, !0))) return i;
                            var r = this._searchPossibleTargets(t, e);
                            return this._fireOverOutEvents(r, t), r;
                        }
                    },
                    _fireOverOutEvents: function(t, e) {
                        t ? this._hoveredTarget !== t && (this._hoveredTarget && (this.fire("mouse:out", {
                            target: this._hoveredTarget,
                            e: e
                        }), this._hoveredTarget.fire("mouseout")), this.fire("mouse:over", {
                            target: t,
                            e: e
                        }), t.fire("mouseover"), this._hoveredTarget = t) : this._hoveredTarget && (this.fire("mouse:out", {
                            target: this._hoveredTarget,
                            e: e
                        }), this._hoveredTarget.fire("mouseout"), this._hoveredTarget = null);
                    },
                    _checkTarget: function(t, e, i) {
                        if (e && e.visible && e.evented && this.containsPoint(t, e)) {
                            if (!this.perPixelTargetFind && !e.perPixelTargetFind || e.isEditing) return !0;
                            if (!this.isTargetTransparent(e, i.x, i.y)) return !0;
                        }
                    },
                    _searchPossibleTargets: function(t, e) {
                        for (var i, r = this.getPointer(t, !0), n = this._objects.length; n--; ) if ((!this._objects[n].group || e) && this._checkTarget(t, this._objects[n], r)) {
                            this.relatedTarget = this._objects[n], i = this._objects[n];
                            break;
                        }
                        return i;
                    },
                    getPointer: function(e, i, r) {
                        r || (r = this.upperCanvasEl);
                        var n, s = t(e), o = r.getBoundingClientRect(), a = o.width || 0, h = o.height || 0;
                        return a && h || ("top" in o && "bottom" in o && (h = Math.abs(o.top - o.bottom)), 
                        "right" in o && "left" in o && (a = Math.abs(o.right - o.left))), this.calcOffset(), 
                        s.x = s.x - this._offset.left, s.y = s.y - this._offset.top, i || (s = fabric.util.transformPoint(s, fabric.util.invertTransform(this.viewportTransform))), 
                        n = 0 === a || 0 === h ? {
                            width: 1,
                            height: 1
                        } : {
                            width: r.width / a,
                            height: r.height / h
                        }, {
                            x: s.x * n.width,
                            y: s.y * n.height
                        };
                    },
                    _createUpperCanvas: function() {
                        var t = this.lowerCanvasEl.className.replace(/\s*lower-canvas\s*/, "");
                        this.upperCanvasEl = this._createCanvasElement(), fabric.util.addClass(this.upperCanvasEl, "upper-canvas " + t), 
                        this.wrapperEl.appendChild(this.upperCanvasEl), this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl), 
                        this._applyCanvasStyle(this.upperCanvasEl), this.contextTop = this.upperCanvasEl.getContext("2d");
                    },
                    _createCacheCanvas: function() {
                        this.cacheCanvasEl = this._createCanvasElement(), this.cacheCanvasEl.setAttribute("width", this.width), 
                        this.cacheCanvasEl.setAttribute("height", this.height), this.contextCache = this.cacheCanvasEl.getContext("2d");
                    },
                    _initWrapperElement: function() {
                        this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, "div", {
                            class: this.containerClass
                        }), fabric.util.setStyle(this.wrapperEl, {
                            width: this.getWidth() + "px",
                            height: this.getHeight() + "px",
                            position: "relative"
                        }), fabric.util.makeElementUnselectable(this.wrapperEl);
                    },
                    _applyCanvasStyle: function(t) {
                        var e = this.getWidth() || t.width, i = this.getHeight() || t.height;
                        fabric.util.setStyle(t, {
                            position: "absolute",
                            width: e + "px",
                            height: i + "px",
                            left: 0,
                            top: 0
                        }), t.width = e, t.height = i, fabric.util.makeElementUnselectable(t);
                    },
                    _copyCanvasStyle: function(t, e) {
                        e.style.cssText = t.style.cssText;
                    },
                    getSelectionContext: function() {
                        return this.contextTop;
                    },
                    getSelectionElement: function() {
                        return this.upperCanvasEl;
                    },
                    _setActiveObject: function(t) {
                        this._activeObject && this._activeObject.set("active", !1), this._activeObject = t, 
                        t.set("active", !0);
                    },
                    setActiveObject: function(t, e) {
                        return this._setActiveObject(t), this.renderAll(), this.fire("object:selected", {
                            target: t,
                            e: e
                        }), t.fire("selected", {
                            e: e
                        }), this;
                    },
                    getActiveObject: function() {
                        return this._activeObject;
                    },
                    _discardActiveObject: function() {
                        this._activeObject && this._activeObject.set("active", !1), this._activeObject = null;
                    },
                    discardActiveObject: function(t) {
                        return this._discardActiveObject(), this.renderAll(), this.fire("selection:cleared", {
                            e: t
                        }), this;
                    },
                    _setActiveGroup: function(t) {
                        this._activeGroup = t, t && t.set("active", !0);
                    },
                    setActiveGroup: function(t, e) {
                        return this._setActiveGroup(t), t && (this.fire("object:selected", {
                            target: t,
                            e: e
                        }), t.fire("selected", {
                            e: e
                        })), this;
                    },
                    getActiveGroup: function() {
                        return this._activeGroup;
                    },
                    _discardActiveGroup: function() {
                        var t = this.getActiveGroup();
                        t && t.destroy(), this.setActiveGroup(null);
                    },
                    discardActiveGroup: function(t) {
                        return this._discardActiveGroup(), this.fire("selection:cleared", {
                            e: t
                        }), this;
                    },
                    deactivateAll: function() {
                        for (var t = this.getObjects(), e = 0, i = t.length; e < i; e++) t[e].set("active", !1);
                        return this._discardActiveGroup(), this._discardActiveObject(), this;
                    },
                    deactivateAllWithDispatch: function(t) {
                        var e = this.getActiveGroup() || this.getActiveObject();
                        return e && this.fire("before:selection:cleared", {
                            target: e,
                            e: t
                        }), this.deactivateAll(), e && this.fire("selection:cleared", {
                            e: t
                        }), this;
                    },
                    dispose: function() {
                        this.callSuper("dispose");
                        var t = this.wrapperEl;
                        return this.removeListeners(), t.removeChild(this.upperCanvasEl), t.removeChild(this.lowerCanvasEl), 
                        delete this.upperCanvasEl, t.parentNode && t.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl), 
                        delete this.wrapperEl, this;
                    },
                    drawControls: function(t) {
                        var e = this.getActiveGroup();
                        e ? e._renderControls(t) : this._drawObjectsControls(t);
                    },
                    _drawObjectsControls: function(t) {
                        for (var e = 0, i = this._objects.length; e < i; ++e) this._objects[e] && this._objects[e].active && (this._objects[e]._renderControls(t), 
                        this.lastRenderedObjectWithControlsAboveOverlay = this._objects[e]);
                    }
                }), fabric.StaticCanvas) "prototype" !== s && (fabric.Canvas[s] = fabric.StaticCanvas[s]);
                fabric.isTouchSupported && (fabric.Canvas.prototype._setCursorFromEvent = function() {}), 
                fabric.Element = fabric.Canvas;
            }(), cursorOffset = {
                mt: 0,
                tr: 1,
                mr: 2,
                br: 3,
                mb: 4,
                bl: 5,
                ml: 6,
                tl: 7
            }, addListener = fabric.util.addListener, removeListener = fabric.util.removeListener, 
            fabric.util.object.extend(fabric.Canvas.prototype, {
                cursorMap: [ "n-resize", "ne-resize", "e-resize", "se-resize", "s-resize", "sw-resize", "w-resize", "nw-resize" ],
                _initEventListeners: function() {
                    this._bindEvents(), addListener(fabric.window, "resize", this._onResize), addListener(this.upperCanvasEl, "mousedown", this._onMouseDown), 
                    addListener(this.upperCanvasEl, "mousemove", this._onMouseMove), addListener(this.upperCanvasEl, "mousewheel", this._onMouseWheel), 
                    addListener(this.upperCanvasEl, "mouseout", this._onMouseOut), addListener(this.upperCanvasEl, "touchstart", this._onMouseDown), 
                    addListener(this.upperCanvasEl, "touchmove", this._onMouseMove), "undefined" != typeof eventjs && "add" in eventjs && (eventjs.add(this.upperCanvasEl, "gesture", this._onGesture), 
                    eventjs.add(this.upperCanvasEl, "drag", this._onDrag), eventjs.add(this.upperCanvasEl, "orientation", this._onOrientationChange), 
                    eventjs.add(this.upperCanvasEl, "shake", this._onShake), eventjs.add(this.upperCanvasEl, "longpress", this._onLongPress));
                },
                _bindEvents: function() {
                    this._onMouseDown = this._onMouseDown.bind(this), this._onMouseMove = this._onMouseMove.bind(this), 
                    this._onMouseUp = this._onMouseUp.bind(this), this._onResize = this._onResize.bind(this), 
                    this._onGesture = this._onGesture.bind(this), this._onDrag = this._onDrag.bind(this), 
                    this._onShake = this._onShake.bind(this), this._onLongPress = this._onLongPress.bind(this), 
                    this._onOrientationChange = this._onOrientationChange.bind(this), this._onMouseWheel = this._onMouseWheel.bind(this), 
                    this._onMouseOut = this._onMouseOut.bind(this);
                },
                removeListeners: function() {
                    removeListener(fabric.window, "resize", this._onResize), removeListener(this.upperCanvasEl, "mousedown", this._onMouseDown), 
                    removeListener(this.upperCanvasEl, "mousemove", this._onMouseMove), removeListener(this.upperCanvasEl, "mousewheel", this._onMouseWheel), 
                    removeListener(this.upperCanvasEl, "mouseout", this._onMouseOut), removeListener(this.upperCanvasEl, "touchstart", this._onMouseDown), 
                    removeListener(this.upperCanvasEl, "touchmove", this._onMouseMove), "undefined" != typeof eventjs && "remove" in eventjs && (eventjs.remove(this.upperCanvasEl, "gesture", this._onGesture), 
                    eventjs.remove(this.upperCanvasEl, "drag", this._onDrag), eventjs.remove(this.upperCanvasEl, "orientation", this._onOrientationChange), 
                    eventjs.remove(this.upperCanvasEl, "shake", this._onShake), eventjs.remove(this.upperCanvasEl, "longpress", this._onLongPress));
                },
                _onGesture: function(t, e) {
                    this.__onTransformGesture && this.__onTransformGesture(t, e);
                },
                _onDrag: function(t, e) {
                    this.__onDrag && this.__onDrag(t, e);
                },
                _onMouseWheel: function(t, e) {
                    this.__onMouseWheel && this.__onMouseWheel(t, e);
                },
                _onMouseOut: function(t) {
                    var e = this._hoveredTarget;
                    this.fire("mouse:out", {
                        target: e,
                        e: t
                    }), this._hoveredTarget = null, e && e.fire("mouseout", {
                        e: t
                    });
                },
                _onOrientationChange: function(t, e) {
                    this.__onOrientationChange && this.__onOrientationChange(t, e);
                },
                _onShake: function(t, e) {
                    this.__onShake && this.__onShake(t, e);
                },
                _onLongPress: function(t, e) {
                    this.__onLongPress && this.__onLongPress(t, e);
                },
                _onMouseDown: function(t) {
                    this.__onMouseDown(t), addListener(fabric.document, "touchend", this._onMouseUp), 
                    addListener(fabric.document, "touchmove", this._onMouseMove), removeListener(this.upperCanvasEl, "mousemove", this._onMouseMove), 
                    removeListener(this.upperCanvasEl, "touchmove", this._onMouseMove), "touchstart" === t.type ? removeListener(this.upperCanvasEl, "mousedown", this._onMouseDown) : (addListener(fabric.document, "mouseup", this._onMouseUp), 
                    addListener(fabric.document, "mousemove", this._onMouseMove));
                },
                _onMouseUp: function(t) {
                    if (this.__onMouseUp(t), removeListener(fabric.document, "mouseup", this._onMouseUp), 
                    removeListener(fabric.document, "touchend", this._onMouseUp), removeListener(fabric.document, "mousemove", this._onMouseMove), 
                    removeListener(fabric.document, "touchmove", this._onMouseMove), addListener(this.upperCanvasEl, "mousemove", this._onMouseMove), 
                    addListener(this.upperCanvasEl, "touchmove", this._onMouseMove), "touchend" === t.type) {
                        var e = this;
                        setTimeout(function() {
                            addListener(e.upperCanvasEl, "mousedown", e._onMouseDown);
                        }, 400);
                    }
                },
                _onMouseMove: function(t) {
                    !this.allowTouchScrolling && t.preventDefault && t.preventDefault(), this.__onMouseMove(t);
                },
                _onResize: function() {
                    this.calcOffset();
                },
                _shouldRender: function(t, e) {
                    var i = this.getActiveGroup() || this.getActiveObject();
                    return !!(t && (t.isMoving || t !== i) || !t && i || !t && !i && !this._groupSelector || e && this._previousPointer && this.selection && (e.x !== this._previousPointer.x || e.y !== this._previousPointer.y));
                },
                __onMouseUp: function(t) {
                    var e, i = !0, r = this._currentTransform;
                    if (this.isDrawingMode && this._isCurrentlyDrawing) this._onMouseUpInDrawingMode(t); else {
                        r && (this._finalizeCurrentTransform(), i = !r.actionPerformed), e = i ? this.findTarget(t, !0) : r.target;
                        var n = this._shouldRender(e, this.getPointer(t));
                        this._maybeGroupObjects(t), e && (e.isMoving = !1), n && this.renderAll(), this._handleCursorAndEvent(t, e);
                    }
                },
                _handleCursorAndEvent: function(t, e) {
                    this._setCursorFromEvent(t, e), this.fire("mouse:up", {
                        target: e,
                        e: t
                    }), e && e.fire("mouseup", {
                        e: t
                    });
                },
                _finalizeCurrentTransform: function() {
                    var t = this._currentTransform, e = t.target;
                    e._scaling && (e._scaling = !1), e.setCoords(), this._restoreOriginXY(e), (t.actionPerformed || this.stateful && e.hasStateChanged()) && (this.fire("object:modified", {
                        target: e
                    }), e.fire("modified"));
                },
                _restoreOriginXY: function(t) {
                    if (this._previousOriginX && this._previousOriginY) {
                        var e = t.translateToOriginPoint(t.getCenterPoint(), this._previousOriginX, this._previousOriginY);
                        t.originX = this._previousOriginX, t.originY = this._previousOriginY, t.left = e.x, 
                        t.top = e.y, this._previousOriginX = null, this._previousOriginY = null;
                    }
                },
                _onMouseDownInDrawingMode: function(t) {
                    this._isCurrentlyDrawing = !0, this.discardActiveObject(t).renderAll(), this.clipTo && fabric.util.clipContext(this, this.contextTop);
                    var e = fabric.util.invertTransform(this.viewportTransform), i = fabric.util.transformPoint(this.getPointer(t, !0), e);
                    this.freeDrawingBrush.onMouseDown(i), this.fire("mouse:down", {
                        e: t
                    });
                    var r = this.findTarget(t);
                    void 0 !== r && r.fire("mousedown", {
                        e: t,
                        target: r
                    });
                },
                _onMouseMoveInDrawingMode: function(t) {
                    if (this._isCurrentlyDrawing) {
                        var e = fabric.util.invertTransform(this.viewportTransform), i = fabric.util.transformPoint(this.getPointer(t, !0), e);
                        this.freeDrawingBrush.onMouseMove(i);
                    }
                    this.setCursor(this.freeDrawingCursor), this.fire("mouse:move", {
                        e: t
                    });
                    var r = this.findTarget(t);
                    void 0 !== r && r.fire("mousemove", {
                        e: t,
                        target: r
                    });
                },
                _onMouseUpInDrawingMode: function(t) {
                    this._isCurrentlyDrawing = !1, this.clipTo && this.contextTop.restore(), this.freeDrawingBrush.onMouseUp(), 
                    this.fire("mouse:up", {
                        e: t
                    });
                    var e = this.findTarget(t);
                    void 0 !== e && e.fire("mouseup", {
                        e: t,
                        target: e
                    });
                },
                __onMouseDown: function(t) {
                    if (("which" in t ? 1 === t.which : 0 === t.button) || fabric.isTouchSupported) if (this.isDrawingMode) this._onMouseDownInDrawingMode(t); else if (!this._currentTransform) {
                        var e = this.findTarget(t), i = this.getPointer(t, !0);
                        this._previousPointer = i;
                        var r = this._shouldRender(e, i), n = this._shouldGroup(t, e);
                        this._shouldClearSelection(t, e) ? this._clearSelection(t, e, i) : n && (this._handleGrouping(t, e), 
                        e = this.getActiveGroup()), e && (!e.selectable || !e.__corner && n || (this._beforeTransform(t, e), 
                        this._setupCurrentTransform(t, e)), e !== this.getActiveGroup() && e !== this.getActiveObject() && (this.deactivateAll(), 
                        e.selectable && this.setActiveObject(e, t))), r && this.renderAll(), this.fire("mouse:down", {
                            target: e,
                            e: t
                        }), e && e.fire("mousedown", {
                            e: t
                        });
                    }
                },
                _beforeTransform: function(t, e) {
                    this.stateful && e.saveState(), e._findTargetCorner(this.getPointer(t)) && this.onBeforeScaleRotate(e);
                },
                _clearSelection: function(t, e, i) {
                    this.deactivateAllWithDispatch(t), e && e.selectable ? this.setActiveObject(e, t) : this.selection && (this._groupSelector = {
                        ex: i.x,
                        ey: i.y,
                        top: 0,
                        left: 0
                    });
                },
                _setOriginToCenter: function(t) {
                    this._previousOriginX = this._currentTransform.target.originX, this._previousOriginY = this._currentTransform.target.originY;
                    var e = t.getCenterPoint();
                    t.originX = "center", t.originY = "center", t.left = e.x, t.top = e.y, this._currentTransform.left = t.left, 
                    this._currentTransform.top = t.top;
                },
                _setCenterToOrigin: function(t) {
                    var e = t.translateToOriginPoint(t.getCenterPoint(), this._previousOriginX, this._previousOriginY);
                    t.originX = this._previousOriginX, t.originY = this._previousOriginY, t.left = e.x, 
                    t.top = e.y, this._previousOriginX = null, this._previousOriginY = null;
                },
                __onMouseMove: function(t) {
                    var e, i;
                    if (this.isDrawingMode) this._onMouseMoveInDrawingMode(t); else if (!(void 0 !== t.touches && t.touches.length > 1)) {
                        var r = this._groupSelector;
                        r ? (i = this.getPointer(t, !0), r.left = i.x - r.ex, r.top = i.y - r.ey, this.renderTop()) : this._currentTransform ? this._transformObject(t) : (e = this.findTarget(t), 
                        this._setCursorFromEvent(t, e)), this.fire("mouse:move", {
                            target: e,
                            e: t
                        }), e && e.fire("mousemove", {
                            e: t
                        });
                    }
                },
                _transformObject: function(t) {
                    var e = this.getPointer(t), i = this._currentTransform;
                    i.reset = !1, i.target.isMoving = !0, this._beforeScaleTransform(t, i), this._performTransformAction(t, i, e), 
                    this.renderAll();
                },
                _performTransformAction: function(t, e, i) {
                    var r = i.x, n = i.y, s = e.target, o = e.action, a = !1;
                    "rotate" === o ? (a = this._rotateObject(r, n)) && this._fire("rotating", s, t) : "scale" === o ? (a = this._onScale(t, e, r, n)) && this._fire("scaling", s, t) : "scaleX" === o ? (a = this._scaleObject(r, n, "x")) && this._fire("scaling", s, t) : "scaleY" === o ? (a = this._scaleObject(r, n, "y")) && this._fire("scaling", s, t) : "skewX" === o ? (a = this._skewObject(r, n, "x")) && this._fire("skewing", s, t) : "skewY" === o ? (a = this._skewObject(r, n, "y")) && this._fire("skewing", s, t) : (a = this._translateObject(r, n)) && (this._fire("moving", s, t), 
                    this.setCursor(s.moveCursor || this.moveCursor)), e.actionPerformed = a;
                },
                _fire: function(t, e, i) {
                    this.fire("object:" + t, {
                        target: e,
                        e: i
                    }), e.fire(t, {
                        e: i
                    });
                },
                _beforeScaleTransform: function(t, e) {
                    if ("scale" === e.action || "scaleX" === e.action || "scaleY" === e.action) {
                        var i = this._shouldCenterTransform(e.target);
                        (i && ("center" !== e.originX || "center" !== e.originY) || !i && "center" === e.originX && "center" === e.originY) && (this._resetCurrentTransform(), 
                        e.reset = !0);
                    }
                },
                _onScale: function(t, e, i, r) {
                    return !t[this.uniScaleKey] && !this.uniScaleTransform || e.target.get("lockUniScaling") ? (e.reset || "scale" !== e.currentAction || this._resetCurrentTransform(), 
                    e.currentAction = "scaleEqually", this._scaleObject(i, r, "equally")) : (e.currentAction = "scale", 
                    this._scaleObject(i, r));
                },
                _setCursorFromEvent: function(t, e) {
                    if (!e) return this.setCursor(this.defaultCursor), !1;
                    var i = e.hoverCursor || this.hoverCursor;
                    if (e.selectable) {
                        var r = this.getActiveGroup(), n = e._findTargetCorner && (!r || !r.contains(e)) && e._findTargetCorner(this.getPointer(t, !0));
                        n ? this._setCornerCursor(n, e, t) : this.setCursor(i);
                    } else this.setCursor(i);
                    return !0;
                },
                _setCornerCursor: function(t, e, i) {
                    if (t in cursorOffset) this.setCursor(this._getRotatedCornerCursor(t, e, i)); else {
                        if ("mtr" !== t || !e.hasRotatingPoint) return this.setCursor(this.defaultCursor), 
                        !1;
                        this.setCursor(this.rotationCursor);
                    }
                },
                _getRotatedCornerCursor: function(t, e, i) {
                    var r = Math.round(e.getAngle() % 360 / 45);
                    return r < 0 && (r += 8), r += cursorOffset[t], i[this.altActionKey] && cursorOffset[t] % 2 == 0 && (r += 2), 
                    r %= 8, this.cursorMap[r];
                }
            }), min = Math.min, max = Math.max, fabric.util.object.extend(fabric.Canvas.prototype, {
                _shouldGroup: function(t, e) {
                    var i = this.getActiveObject();
                    return t[this.selectionKey] && e && e.selectable && (this.getActiveGroup() || i && i !== e) && this.selection;
                },
                _handleGrouping: function(t, e) {
                    (e !== this.getActiveGroup() || (e = this.findTarget(t, !0)) && !e.isType("group")) && (this.getActiveGroup() ? this._updateActiveGroup(e, t) : this._createActiveGroup(e, t), 
                    this._activeGroup && this._activeGroup.saveCoords());
                },
                _updateActiveGroup: function(t, e) {
                    var i = this.getActiveGroup();
                    if (i.contains(t)) {
                        if (i.removeWithUpdate(t), t.set("active", !1), 1 === i.size()) return this.discardActiveGroup(e), 
                        void this.setActiveObject(i.item(0));
                    } else i.addWithUpdate(t);
                    this.fire("selection:created", {
                        target: i,
                        e: e
                    }), i.set("active", !0);
                },
                _createActiveGroup: function(t, e) {
                    if (this._activeObject && t !== this._activeObject) {
                        var i = this._createGroup(t);
                        i.addWithUpdate(), this.setActiveGroup(i), this._activeObject = null, this.fire("selection:created", {
                            target: i,
                            e: e
                        });
                    }
                    t.set("active", !0);
                },
                _createGroup: function(t) {
                    var e = this.getObjects(), i = e.indexOf(this._activeObject) < e.indexOf(t) ? [ this._activeObject, t ] : [ t, this._activeObject ];
                    return new fabric.Group(i, {
                        canvas: this
                    });
                },
                _groupSelectedObjects: function(t) {
                    var e = this._collectObjects();
                    1 === e.length ? this.setActiveObject(e[0], t) : e.length > 1 && ((e = new fabric.Group(e.reverse(), {
                        canvas: this
                    })).addWithUpdate(), this.setActiveGroup(e, t), e.saveCoords(), this.fire("selection:created", {
                        target: e
                    }), this.renderAll());
                },
                _collectObjects: function() {
                    for (var t, e = [], i = this._groupSelector.ex, r = this._groupSelector.ey, n = i + this._groupSelector.left, s = r + this._groupSelector.top, o = new fabric.Point(min(i, n), min(r, s)), a = new fabric.Point(max(i, n), max(r, s)), h = i === n && r === s, c = this._objects.length; c-- && !((t = this._objects[c]) && t.selectable && t.visible && (t.intersectsWithRect(o, a) || t.isContainedWithinRect(o, a) || t.containsPoint(o) || t.containsPoint(a)) && (t.set("active", !0), 
                    e.push(t), h)); ) ;
                    return e;
                },
                _maybeGroupObjects: function(t) {
                    this.selection && this._groupSelector && this._groupSelectedObjects(t);
                    var e = this.getActiveGroup();
                    e && (e.setObjectsCoords().setCoords(), e.isMoving = !1, this.setCursor(this.defaultCursor)), 
                    this._groupSelector = null, this._currentTransform = null;
                }
            }), fabric.util.object.extend(fabric.StaticCanvas.prototype, {
                toDataURL: function(t) {
                    t || (t = {});
                    var e = t.format || "png", i = t.quality || 1, r = t.multiplier || 1, n = {
                        left: t.left,
                        top: t.top,
                        width: t.width,
                        height: t.height
                    };
                    return this._isRetinaScaling() && (r *= fabric.devicePixelRatio), 1 !== r ? this.__toDataURLWithMultiplier(e, i, n, r) : this.__toDataURL(e, i, n);
                },
                __toDataURL: function(t, e, i) {
                    this.renderAll();
                    var r = this.contextContainer.canvas, n = this.__getCroppedCanvas(r, i);
                    "jpg" === t && (t = "jpeg");
                    var s = fabric.StaticCanvas.supports("toDataURLWithQuality") ? (n || r).toDataURL("image/" + t, e) : (n || r).toDataURL("image/" + t);
                    return n && (n = null), s;
                },
                __getCroppedCanvas: function(t, e) {
                    var i, r;
                    return ("left" in e || "top" in e || "width" in e || "height" in e) && (r = (i = fabric.util.createCanvasElement()).getContext("2d"), 
                    i.width = e.width || this.width, i.height = e.height || this.height, r.drawImage(t, -e.left || 0, -e.top || 0)), 
                    i;
                },
                __toDataURLWithMultiplier: function(t, e, i, r) {
                    var n = this.getWidth(), s = this.getHeight(), o = n * r, a = s * r, h = this.getActiveObject(), c = this.getActiveGroup(), l = this.contextContainer;
                    r > 1 && this.setDimensions({
                        width: o,
                        height: a
                    }), l.save(), l.scale(r / fabric.devicePixelRatio, r / fabric.devicePixelRatio), 
                    i.left && (i.left *= r), i.top && (i.top *= r), i.width ? i.width *= r : r < 1 && (i.width = o), 
                    i.height ? i.height *= r : r < 1 && (i.height = a), c ? this._tempRemoveBordersControlsFromGroup(c) : h && this.deactivateAll && this.deactivateAll();
                    var u = this.__toDataURL(t, e, i);
                    return this.width = n, this.height = s, this.setDimensions({
                        width: n,
                        height: s
                    }), c ? this._restoreBordersControlsOnGroup(c) : h && this.setActiveObject && this.setActiveObject(h), 
                    this.contextTop && this.clearContext(this.contextTop), this.renderAll(), u;
                },
                toDataURLWithMultiplier: function(t, e, i) {
                    return this.toDataURL({
                        format: t,
                        multiplier: e,
                        quality: i
                    });
                },
                _tempRemoveBordersControlsFromGroup: function(t) {
                    t.origHasControls = t.hasControls, t.origBorderColor = t.borderColor, t.hasControls = !0, 
                    t.borderColor = "rgba(0,0,0,0)", t.forEachObject(function(t) {
                        t.origBorderColor = t.borderColor, t.borderColor = "rgba(0,0,0,0)";
                    });
                },
                _restoreBordersControlsOnGroup: function(t) {
                    t.hideControls = t.origHideControls, t.borderColor = t.origBorderColor, t.forEachObject(function(t) {
                        t.borderColor = t.origBorderColor, delete t.origBorderColor;
                    });
                }
            }), fabric.util.object.extend(fabric.StaticCanvas.prototype, {
                loadFromDatalessJSON: function(t, e, i) {
                    return this.loadFromJSON(t, e, i);
                },
                loadFromJSON: function(t, e, i) {
                    if (t) {
                        var r = "string" == typeof t ? JSON.parse(t) : fabric.util.object.clone(t);
                        this.clear();
                        var n = this;
                        for (var s in this._enlivenObjects(r.objects, function() {
                            n._setBgOverlay(r, e);
                        }, i), delete r.objects, delete r.backgroundImage, delete r.overlayImage, delete r.background, 
                        delete r.overlay, r) this[s] = r[s];
                        return this;
                    }
                },
                _setBgOverlay: function(t, e) {
                    var i = this, r = {
                        backgroundColor: !1,
                        overlayColor: !1,
                        backgroundImage: !1,
                        overlayImage: !1
                    };
                    if (t.backgroundImage || t.overlayImage || t.background || t.overlay) {
                        var n = function() {
                            r.backgroundImage && r.overlayImage && r.backgroundColor && r.overlayColor && (i.renderAll(), 
                            e && e());
                        };
                        this.__setBgOverlay("backgroundImage", t.backgroundImage, r, n), this.__setBgOverlay("overlayImage", t.overlayImage, r, n), 
                        this.__setBgOverlay("backgroundColor", t.background, r, n), this.__setBgOverlay("overlayColor", t.overlay, r, n), 
                        n();
                    } else e && e();
                },
                __setBgOverlay: function(t, e, i, r) {
                    var n = this;
                    e ? "backgroundImage" === t || "overlayImage" === t ? fabric.Image.fromObject(e, function(e) {
                        n[t] = e, i[t] = !0, r && r();
                    }) : this["set" + fabric.util.string.capitalize(t, !0)](e, function() {
                        i[t] = !0, r && r();
                    }) : i[t] = !0;
                },
                _enlivenObjects: function(t, e, i) {
                    var r = this;
                    if (t && 0 !== t.length) {
                        var n = this.renderOnAddRemove;
                        this.renderOnAddRemove = !1, fabric.util.enlivenObjects(t, function(t) {
                            t.forEach(function(t, e) {
                                r.insertAt(t, e, !0);
                            }), r.renderOnAddRemove = n, e && e();
                        }, null, i);
                    } else e && e();
                },
                _toDataURL: function(t, e) {
                    this.clone(function(i) {
                        e(i.toDataURL(t));
                    });
                },
                _toDataURLWithMultiplier: function(t, e, i) {
                    this.clone(function(r) {
                        i(r.toDataURLWithMultiplier(t, e));
                    });
                },
                clone: function(t, e) {
                    var i = JSON.stringify(this.toJSON(e));
                    this.cloneWithoutData(function(e) {
                        e.loadFromJSON(i, function() {
                            t && t(e);
                        });
                    });
                },
                cloneWithoutData: function(t) {
                    var e = fabric.document.createElement("canvas");
                    e.width = this.getWidth(), e.height = this.getHeight();
                    var i = new fabric.Canvas(e);
                    i.clipTo = this.clipTo, this.backgroundImage ? (i.setBackgroundImage(this.backgroundImage.src, function() {
                        i.renderAll(), t && t(i);
                    }), i.backgroundImageOpacity = this.backgroundImageOpacity, i.backgroundImageStretch = this.backgroundImageStretch) : t && t(i);
                }
            }), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.util.toFixed, n = e.util.string.capitalize, s = e.util.degreesToRadians, o = e.StaticCanvas.supports("setLineDash");
                e.Object || (e.Object = e.util.createClass({
                    type: "object",
                    originX: "left",
                    originY: "top",
                    top: 0,
                    left: 0,
                    width: 0,
                    height: 0,
                    scaleX: 1,
                    scaleY: 1,
                    flipX: !1,
                    flipY: !1,
                    opacity: 1,
                    angle: 0,
                    skewX: 0,
                    skewY: 0,
                    cornerSize: 12,
                    transparentCorners: !0,
                    hoverCursor: null,
                    moveCursor: null,
                    padding: 0,
                    borderColor: "rgba(102,153,255,0.75)",
                    cornerColor: "rgba(102,153,255,0.5)",
                    centeredScaling: !1,
                    centeredRotation: !0,
                    fill: "rgb(0,0,0)",
                    fillRule: "nonzero",
                    globalCompositeOperation: "source-over",
                    backgroundColor: "",
                    stroke: null,
                    strokeWidth: 1,
                    strokeDashArray: null,
                    strokeLineCap: "butt",
                    strokeLineJoin: "miter",
                    strokeMiterLimit: 10,
                    shadow: null,
                    borderOpacityWhenMoving: .4,
                    borderScaleFactor: 1,
                    transformMatrix: null,
                    minScaleLimit: .01,
                    selectable: !0,
                    evented: !0,
                    visible: !0,
                    hasControls: !0,
                    hasBorders: !0,
                    hasRotatingPoint: !0,
                    rotatingPointOffset: 40,
                    perPixelTargetFind: !1,
                    includeDefaultValues: !0,
                    clipTo: null,
                    lockMovementX: !1,
                    lockMovementY: !1,
                    lockRotation: !1,
                    lockScalingX: !1,
                    lockScalingY: !1,
                    lockUniScaling: !1,
                    lockSkewingX: !1,
                    lockSkewingY: !1,
                    lockScalingFlip: !1,
                    stateProperties: "top left width height scaleX scaleY flipX flipY originX originY transformMatrix stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor alignX alignY meetOrSlice skewX skewY".split(" "),
                    initialize: function(t) {
                        t && this.setOptions(t);
                    },
                    _initGradient: function(t) {
                        !t.fill || !t.fill.colorStops || t.fill instanceof e.Gradient || this.set("fill", new e.Gradient(t.fill)), 
                        !t.stroke || !t.stroke.colorStops || t.stroke instanceof e.Gradient || this.set("stroke", new e.Gradient(t.stroke));
                    },
                    _initPattern: function(t) {
                        !t.fill || !t.fill.source || t.fill instanceof e.Pattern || this.set("fill", new e.Pattern(t.fill)), 
                        !t.stroke || !t.stroke.source || t.stroke instanceof e.Pattern || this.set("stroke", new e.Pattern(t.stroke));
                    },
                    _initClipping: function(t) {
                        if (t.clipTo && "string" == typeof t.clipTo) {
                            var i = e.util.getFunctionBody(t.clipTo);
                            void 0 !== i && (this.clipTo = new Function("ctx", i));
                        }
                    },
                    setOptions: function(t) {
                        for (var e in t) this.set(e, t[e]);
                        this._initGradient(t), this._initPattern(t), this._initClipping(t);
                    },
                    transform: function(t, e) {
                        this.group && this.canvas.preserveObjectStacking && this.group === this.canvas._activeGroup && this.group.transform(t);
                        var i = e ? this._getLeftTopCoords() : this.getCenterPoint();
                        t.translate(i.x, i.y), t.rotate(s(this.angle)), t.scale(this.scaleX * (this.flipX ? -1 : 1), this.scaleY * (this.flipY ? -1 : 1)), 
                        t.transform(1, 0, Math.tan(s(this.skewX)), 1, 0, 0), t.transform(1, Math.tan(s(this.skewY)), 0, 1, 0, 0);
                    },
                    toObject: function(t) {
                        var i = e.Object.NUM_FRACTION_DIGITS, n = {
                            type: this.type,
                            originX: this.originX,
                            originY: this.originY,
                            left: r(this.left, i),
                            top: r(this.top, i),
                            width: r(this.width, i),
                            height: r(this.height, i),
                            fill: this.fill && this.fill.toObject ? this.fill.toObject() : this.fill,
                            stroke: this.stroke && this.stroke.toObject ? this.stroke.toObject() : this.stroke,
                            strokeWidth: r(this.strokeWidth, i),
                            strokeDashArray: this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,
                            strokeLineCap: this.strokeLineCap,
                            strokeLineJoin: this.strokeLineJoin,
                            strokeMiterLimit: r(this.strokeMiterLimit, i),
                            scaleX: r(this.scaleX, i),
                            scaleY: r(this.scaleY, i),
                            angle: r(this.getAngle(), i),
                            flipX: this.flipX,
                            flipY: this.flipY,
                            opacity: r(this.opacity, i),
                            shadow: this.shadow && this.shadow.toObject ? this.shadow.toObject() : this.shadow,
                            visible: this.visible,
                            clipTo: this.clipTo && String(this.clipTo),
                            backgroundColor: this.backgroundColor,
                            fillRule: this.fillRule,
                            globalCompositeOperation: this.globalCompositeOperation,
                            transformMatrix: this.transformMatrix ? this.transformMatrix.concat() : this.transformMatrix,
                            skewX: r(this.skewX, i),
                            skewY: r(this.skewY, i)
                        };
                        return this.includeDefaultValues || (n = this._removeDefaultValues(n)), e.util.populateWithProperties(this, n, t), 
                        n;
                    },
                    toDatalessObject: function(t) {
                        return this.toObject(t);
                    },
                    _removeDefaultValues: function(t) {
                        var i = e.util.getKlass(t.type).prototype;
                        return i.stateProperties.forEach(function(e) {
                            t[e] === i[e] && delete t[e], "[object Array]" === Object.prototype.toString.call(t[e]) && "[object Array]" === Object.prototype.toString.call(i[e]) && 0 === t[e].length && 0 === i[e].length && delete t[e];
                        }), t;
                    },
                    toString: function() {
                        return "#<fabric." + n(this.type) + ">";
                    },
                    get: function(t) {
                        return this[t];
                    },
                    _setObject: function(t) {
                        for (var e in t) this._set(e, t[e]);
                    },
                    set: function(t, e) {
                        return "object" == typeof t ? this._setObject(t) : "function" == typeof e && "clipTo" !== t ? this._set(t, e(this.get(t))) : this._set(t, e), 
                        this;
                    },
                    _set: function(t, i) {
                        return ("scaleX" === t || "scaleY" === t) && (i = this._constrainScale(i)), "scaleX" === t && i < 0 ? (this.flipX = !this.flipX, 
                        i *= -1) : "scaleY" === t && i < 0 ? (this.flipY = !this.flipY, i *= -1) : "width" === t || "height" === t ? this.minScaleLimit = r(Math.min(.1, 1 / Math.max(this.width, this.height)), 2) : "shadow" !== t || !i || i instanceof e.Shadow || (i = new e.Shadow(i)), 
                        this[t] = i, this;
                    },
                    setOnGroup: function() {},
                    toggle: function(t) {
                        var e = this.get(t);
                        return "boolean" == typeof e && this.set(t, !e), this;
                    },
                    setSourcePath: function(t) {
                        return this.sourcePath = t, this;
                    },
                    getViewportTransform: function() {
                        return this.canvas && this.canvas.viewportTransform ? this.canvas.viewportTransform : [ 1, 0, 0, 1, 0, 0 ];
                    },
                    render: function(t, i) {
                        0 === this.width && 0 === this.height || !this.visible || (t.save(), this._setupCompositeOperation(t), 
                        i || this.transform(t), this._setStrokeStyles(t), this._setFillStyles(t), this.transformMatrix && t.transform.apply(t, this.transformMatrix), 
                        this._setOpacity(t), this._setShadow(t), this.clipTo && e.util.clipContext(this, t), 
                        this._render(t, i), this.clipTo && t.restore(), t.restore());
                    },
                    _setOpacity: function(t) {
                        this.group && this.group._setOpacity(t), t.globalAlpha *= this.opacity;
                    },
                    _setStrokeStyles: function(t) {
                        this.stroke && (t.lineWidth = this.strokeWidth, t.lineCap = this.strokeLineCap, 
                        t.lineJoin = this.strokeLineJoin, t.miterLimit = this.strokeMiterLimit, t.strokeStyle = this.stroke.toLive ? this.stroke.toLive(t, this) : this.stroke);
                    },
                    _setFillStyles: function(t) {
                        this.fill && (t.fillStyle = this.fill.toLive ? this.fill.toLive(t, this) : this.fill);
                    },
                    _setLineDash: function(t, e, i) {
                        e && (1 & e.length && e.push.apply(e, e), o ? t.setLineDash(e) : i && i(t));
                    },
                    _renderControls: function(t, i) {
                        if (!(!this.active || i || this.group && this.group !== this.canvas.getActiveGroup())) {
                            var r, n = this.getViewportTransform(), o = this.calcTransformMatrix();
                            o = e.util.multiplyTransformMatrices(n, o), r = e.util.qrDecompose(o), t.save(), 
                            t.translate(r.translateX, r.translateY), this.group && this.group === this.canvas.getActiveGroup() ? (t.rotate(s(r.angle)), 
                            this.drawBordersInGroup(t, r)) : (t.rotate(s(this.angle)), this.drawBorders(t)), 
                            this.drawControls(t), t.restore();
                        }
                    },
                    _setShadow: function(t) {
                        if (this.shadow) {
                            var i = this.canvas && this.canvas.viewportTransform[0] || 1, r = this.canvas && this.canvas.viewportTransform[3] || 1;
                            this.canvas && this.canvas._isRetinaScaling() && (i *= e.devicePixelRatio, r *= e.devicePixelRatio), 
                            t.shadowColor = this.shadow.color, t.shadowBlur = this.shadow.blur * (i + r) * (this.scaleX + this.scaleY) / 4, 
                            t.shadowOffsetX = this.shadow.offsetX * i * this.scaleX, t.shadowOffsetY = this.shadow.offsetY * r * this.scaleY;
                        }
                    },
                    _removeShadow: function(t) {
                        this.shadow && (t.shadowColor = "", t.shadowBlur = t.shadowOffsetX = t.shadowOffsetY = 0);
                    },
                    _renderFill: function(t) {
                        if (this.fill) {
                            if (t.save(), this.fill.gradientTransform) {
                                var e = this.fill.gradientTransform;
                                t.transform.apply(t, e);
                            }
                            this.fill.toLive && t.translate(-this.width / 2 + this.fill.offsetX || 0, -this.height / 2 + this.fill.offsetY || 0), 
                            "evenodd" === this.fillRule ? t.fill("evenodd") : t.fill(), t.restore();
                        }
                    },
                    _renderStroke: function(t) {
                        if (this.stroke && 0 !== this.strokeWidth) {
                            if (this.shadow && !this.shadow.affectStroke && this._removeShadow(t), t.save(), 
                            this._setLineDash(t, this.strokeDashArray, this._renderDashedStroke), this.stroke.gradientTransform) {
                                var e = this.stroke.gradientTransform;
                                t.transform.apply(t, e);
                            }
                            this.stroke.toLive && t.translate(-this.width / 2 + this.stroke.offsetX || 0, -this.height / 2 + this.stroke.offsetY || 0), 
                            t.stroke(), t.restore();
                        }
                    },
                    clone: function(t, i) {
                        return this.constructor.fromObject ? this.constructor.fromObject(this.toObject(i), t) : new e.Object(this.toObject(i));
                    },
                    cloneAsImage: function(t) {
                        var i = this.toDataURL();
                        return e.util.loadImage(i, function(i) {
                            t && t(new e.Image(i));
                        }), this;
                    },
                    toDataURL: function(t) {
                        t || (t = {});
                        var i = e.util.createCanvasElement(), r = this.getBoundingRect();
                        i.width = r.width, i.height = r.height, e.util.wrapElement(i, "div");
                        var n = new e.StaticCanvas(i);
                        "jpg" === t.format && (t.format = "jpeg"), "jpeg" === t.format && (n.backgroundColor = "#fff");
                        var s = {
                            active: this.get("active"),
                            left: this.getLeft(),
                            top: this.getTop()
                        };
                        this.set("active", !1), this.setPositionByOrigin(new e.Point(i.width / 2, i.height / 2), "center", "center");
                        var o = this.canvas;
                        n.add(this);
                        var a = n.toDataURL(t);
                        return this.set(s).setCoords(), this.canvas = o, n.dispose(), n = null, a;
                    },
                    isType: function(t) {
                        return this.type === t;
                    },
                    complexity: function() {
                        return 0;
                    },
                    toJSON: function(t) {
                        return this.toObject(t);
                    },
                    setGradient: function(t, i) {
                        i || (i = {});
                        var r = {
                            colorStops: []
                        };
                        for (var n in r.type = i.type || (i.r1 || i.r2 ? "radial" : "linear"), r.coords = {
                            x1: i.x1,
                            y1: i.y1,
                            x2: i.x2,
                            y2: i.y2
                        }, (i.r1 || i.r2) && (r.coords.r1 = i.r1, r.coords.r2 = i.r2), i.gradientTransform && (r.gradientTransform = i.gradientTransform), 
                        i.colorStops) {
                            var s = new e.Color(i.colorStops[n]);
                            r.colorStops.push({
                                offset: n,
                                color: s.toRgb(),
                                opacity: s.getAlpha()
                            });
                        }
                        return this.set(t, e.Gradient.forObject(this, r));
                    },
                    setPatternFill: function(t) {
                        return this.set("fill", new e.Pattern(t));
                    },
                    setShadow: function(t) {
                        return this.set("shadow", t ? new e.Shadow(t) : null);
                    },
                    setColor: function(t) {
                        return this.set("fill", t), this;
                    },
                    setAngle: function(t) {
                        var e = ("center" !== this.originX || "center" !== this.originY) && this.centeredRotation;
                        return e && this._setOriginToCenter(), this.set("angle", t), e && this._resetOrigin(), 
                        this;
                    },
                    centerH: function() {
                        return this.canvas.centerObjectH(this), this;
                    },
                    centerV: function() {
                        return this.canvas.centerObjectV(this), this;
                    },
                    center: function() {
                        return this.canvas.centerObject(this), this;
                    },
                    remove: function() {
                        return this.canvas.remove(this), this;
                    },
                    getLocalPointer: function(t, i) {
                        i = i || this.canvas.getPointer(t);
                        var r = new e.Point(i.x, i.y), n = this._getLeftTopCoords();
                        return this.angle && (r = e.util.rotatePoint(r, n, e.util.degreesToRadians(-this.angle))), 
                        {
                            x: r.x - n.x,
                            y: r.y - n.y
                        };
                    },
                    _setupCompositeOperation: function(t) {
                        this.globalCompositeOperation && (t.globalCompositeOperation = this.globalCompositeOperation);
                    }
                }), e.util.createAccessors(e.Object), e.Object.prototype.rotate = e.Object.prototype.setAngle, 
                i(e.Object.prototype, e.Observable), e.Object.NUM_FRACTION_DIGITS = 2, e.Object.__uid = 0);
            }(exports), degreesToRadians = fabric.util.degreesToRadians, originXOffset = {
                left: -.5,
                center: 0,
                right: .5
            }, originYOffset = {
                top: -.5,
                center: 0,
                bottom: .5
            }, fabric.util.object.extend(fabric.Object.prototype, {
                translateToGivenOrigin: function(t, e, i, r, n) {
                    var s, o = t.x, a = t.y, h = originXOffset[r] - originXOffset[e], c = originYOffset[n] - originYOffset[i];
                    return (h || c) && (s = this._getTransformedDimensions(), o = t.x + h * s.x, a = t.y + c * s.y), 
                    new fabric.Point(o, a);
                },
                translateToCenterPoint: function(t, e, i) {
                    var r = this.translateToGivenOrigin(t, e, i, "center", "center");
                    return this.angle ? fabric.util.rotatePoint(r, t, degreesToRadians(this.angle)) : r;
                },
                translateToOriginPoint: function(t, e, i) {
                    var r = this.translateToGivenOrigin(t, "center", "center", e, i);
                    return this.angle ? fabric.util.rotatePoint(r, t, degreesToRadians(this.angle)) : r;
                },
                getCenterPoint: function() {
                    var t = new fabric.Point(this.left, this.top);
                    return this.translateToCenterPoint(t, this.originX, this.originY);
                },
                getPointByOrigin: function(t, e) {
                    var i = this.getCenterPoint();
                    return this.translateToOriginPoint(i, t, e);
                },
                toLocalPoint: function(t, e, i) {
                    var r, n, s = this.getCenterPoint();
                    return r = e && i ? this.translateToGivenOrigin(s, "center", "center", e, i) : new fabric.Point(this.left, this.top), 
                    n = new fabric.Point(t.x, t.y), this.angle && (n = fabric.util.rotatePoint(n, s, -degreesToRadians(this.angle))), 
                    n.subtractEquals(r);
                },
                setPositionByOrigin: function(t, e, i) {
                    var r = this.translateToCenterPoint(t, e, i), n = this.translateToOriginPoint(r, this.originX, this.originY);
                    this.set("left", n.x), this.set("top", n.y);
                },
                adjustPosition: function(t) {
                    var e = degreesToRadians(this.angle), i = this.getWidth(), r = Math.cos(e) * i, n = Math.sin(e) * i;
                    this.left += r * (originXOffset[t] - originXOffset[this.originX]), this.top += n * (originXOffset[t] - originXOffset[this.originX]), 
                    this.setCoords(), this.originX = t;
                },
                _setOriginToCenter: function() {
                    this._originalOriginX = this.originX, this._originalOriginY = this.originY;
                    var t = this.getCenterPoint();
                    this.originX = "center", this.originY = "center", this.left = t.x, this.top = t.y;
                },
                _resetOrigin: function() {
                    var t = this.translateToOriginPoint(this.getCenterPoint(), this._originalOriginX, this._originalOriginY);
                    this.originX = this._originalOriginX, this.originY = this._originalOriginY, this.left = t.x, 
                    this.top = t.y, this._originalOriginX = null, this._originalOriginY = null;
                },
                _getLeftTopCoords: function() {
                    return this.translateToOriginPoint(this.getCenterPoint(), "left", "top");
                }
            }), function() {
                function t(t) {
                    return [ new fabric.Point(t.tl.x, t.tl.y), new fabric.Point(t.tr.x, t.tr.y), new fabric.Point(t.br.x, t.br.y), new fabric.Point(t.bl.x, t.bl.y) ];
                }
                var e = fabric.util.degreesToRadians, i = fabric.util.multiplyTransformMatrices;
                fabric.util.object.extend(fabric.Object.prototype, {
                    oCoords: null,
                    intersectsWithRect: function(e, i) {
                        var r = t(this.oCoords);
                        return "Intersection" === fabric.Intersection.intersectPolygonRectangle(r, e, i).status;
                    },
                    intersectsWithObject: function(e) {
                        return "Intersection" === fabric.Intersection.intersectPolygonPolygon(t(this.oCoords), t(e.oCoords)).status;
                    },
                    isContainedWithinObject: function(t) {
                        var e = t.getBoundingRect(), i = new fabric.Point(e.left, e.top), r = new fabric.Point(e.left + e.width, e.top + e.height);
                        return this.isContainedWithinRect(i, r);
                    },
                    isContainedWithinRect: function(t, e) {
                        var i = this.getBoundingRect();
                        return i.left >= t.x && i.left + i.width <= e.x && i.top >= t.y && i.top + i.height <= e.y;
                    },
                    containsPoint: function(t) {
                        var e = this._getImageLines(this.oCoords), i = this._findCrossPoints(t, e);
                        return 0 !== i && i % 2 == 1;
                    },
                    _getImageLines: function(t) {
                        return {
                            topline: {
                                o: t.tl,
                                d: t.tr
                            },
                            rightline: {
                                o: t.tr,
                                d: t.br
                            },
                            bottomline: {
                                o: t.br,
                                d: t.bl
                            },
                            leftline: {
                                o: t.bl,
                                d: t.tl
                            }
                        };
                    },
                    _findCrossPoints: function(t, e) {
                        var i, r, n, s, o, a = 0;
                        for (var h in e) if (!((o = e[h]).o.y < t.y && o.d.y < t.y || o.o.y >= t.y && o.d.y >= t.y || (o.o.x === o.d.x && o.o.x >= t.x ? (s = o.o.x, 
                        t.y) : (i = 0, r = (o.d.y - o.o.y) / (o.d.x - o.o.x), (n = t.y - i * t.x) + i * (s = -(n - (o.o.y - r * o.o.x)) / (i - r))), 
                        s >= t.x && (a += 1), 2 !== a))) break;
                        return a;
                    },
                    getBoundingRectWidth: function() {
                        return this.getBoundingRect().width;
                    },
                    getBoundingRectHeight: function() {
                        return this.getBoundingRect().height;
                    },
                    getBoundingRect: function() {
                        return this.oCoords || this.setCoords(), fabric.util.makeBoundingBoxFromPoints([ this.oCoords.tl, this.oCoords.tr, this.oCoords.br, this.oCoords.bl ]);
                    },
                    getWidth: function() {
                        return this._getTransformedDimensions().x;
                    },
                    getHeight: function() {
                        return this._getTransformedDimensions().y;
                    },
                    _constrainScale: function(t) {
                        return Math.abs(t) < this.minScaleLimit ? t < 0 ? -this.minScaleLimit : this.minScaleLimit : t;
                    },
                    scale: function(t) {
                        return (t = this._constrainScale(t)) < 0 && (this.flipX = !this.flipX, this.flipY = !this.flipY, 
                        t *= -1), this.scaleX = t, this.scaleY = t, this.setCoords(), this;
                    },
                    scaleToWidth: function(t) {
                        var e = this.getBoundingRect().width / this.getWidth();
                        return this.scale(t / this.width / e);
                    },
                    scaleToHeight: function(t) {
                        var e = this.getBoundingRect().height / this.getHeight();
                        return this.scale(t / this.height / e);
                    },
                    setCoords: function() {
                        var t = e(this.angle), i = this.getViewportTransform(), r = this._calculateCurrentDimensions(), n = r.x, s = r.y;
                        n < 0 && (n = Math.abs(n));
                        var o = Math.sin(t), a = Math.cos(t), h = n > 0 ? Math.atan(s / n) : 0, c = n / Math.cos(h) / 2, l = Math.cos(h + t) * c, u = Math.sin(h + t) * c, f = fabric.util.transformPoint(this.getCenterPoint(), i), d = new fabric.Point(f.x - l, f.y - u), p = new fabric.Point(d.x + n * a, d.y + n * o), g = new fabric.Point(d.x - s * o, d.y + s * a), v = new fabric.Point(f.x + l, f.y + u), b = new fabric.Point((d.x + g.x) / 2, (d.y + g.y) / 2), _ = new fabric.Point((p.x + d.x) / 2, (p.y + d.y) / 2), m = new fabric.Point((v.x + p.x) / 2, (v.y + p.y) / 2), y = new fabric.Point((v.x + g.x) / 2, (v.y + g.y) / 2), x = new fabric.Point(_.x + o * this.rotatingPointOffset, _.y - a * this.rotatingPointOffset);
                        return this.oCoords = {
                            tl: d,
                            tr: p,
                            br: v,
                            bl: g,
                            ml: b,
                            mt: _,
                            mr: m,
                            mb: y,
                            mtr: x
                        }, this._setCornerCoords && this._setCornerCoords(), this;
                    },
                    _calcRotateMatrix: function() {
                        if (this.angle) {
                            var t = e(this.angle), i = Math.cos(t), r = Math.sin(t);
                            return [ i, r, -r, i, 0, 0 ];
                        }
                        return [ 1, 0, 0, 1, 0, 0 ];
                    },
                    calcTransformMatrix: function() {
                        var t = this.getCenterPoint(), e = [ 1, 0, 0, 1, t.x, t.y ], r = this._calcRotateMatrix(), n = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, !0), s = this.group ? this.group.calcTransformMatrix() : [ 1, 0, 0, 1, 0, 0 ];
                        return s = i(s, e), s = i(s, r), s = i(s, n);
                    },
                    _calcDimensionsTransformMatrix: function(t, r, n) {
                        var s = [ 1, 0, Math.tan(e(t)), 1 ], o = [ 1, Math.tan(e(r)), 0, 1 ], a = this.scaleX * (n && this.flipX ? -1 : 1), h = this.scaleY * (n && this.flipY ? -1 : 1), c = i([ a, 0, 0, h ], s, !0);
                        return i(c, o, !0);
                    }
                });
            }(), fabric.util.object.extend(fabric.Object.prototype, {
                sendToBack: function() {
                    return this.group ? fabric.StaticCanvas.prototype.sendToBack.call(this.group, this) : this.canvas.sendToBack(this), 
                    this;
                },
                bringToFront: function() {
                    return this.group ? fabric.StaticCanvas.prototype.bringToFront.call(this.group, this) : this.canvas.bringToFront(this), 
                    this;
                },
                sendBackwards: function(t) {
                    return this.group ? fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, t) : this.canvas.sendBackwards(this, t), 
                    this;
                },
                bringForward: function(t) {
                    return this.group ? fabric.StaticCanvas.prototype.bringForward.call(this.group, this, t) : this.canvas.bringForward(this, t), 
                    this;
                },
                moveTo: function(t) {
                    return this.group ? fabric.StaticCanvas.prototype.moveTo.call(this.group, this, t) : this.canvas.moveTo(this, t), 
                    this;
                }
            }), fabric.util.object.extend(fabric.Object.prototype, {
                hasStateChanged: function() {
                    return this.stateProperties.some(function(t) {
                        return this.get(t) !== this.originalState[t];
                    }, this);
                },
                saveState: function(t) {
                    return this.stateProperties.forEach(function(t) {
                        this.originalState[t] = this.get(t);
                    }, this), t && t.stateProperties && t.stateProperties.forEach(function(t) {
                        this.originalState[t] = this.get(t);
                    }, this), this;
                },
                setupState: function() {
                    return this.originalState = {}, this.saveState(), this;
                }
            }), function() {
                var t = fabric.util.degreesToRadians;
                fabric.util.object.extend(fabric.Object.prototype, {
                    _controlsVisibility: null,
                    _findTargetCorner: function(t) {
                        if (!this.hasControls || !this.active) return !1;
                        var e, i, r = t.x, n = t.y;
                        for (var s in this.__corner = 0, this.oCoords) if (this.isControlVisible(s) && ("mtr" !== s || this.hasRotatingPoint) && (!this.get("lockUniScaling") || "mt" !== s && "mr" !== s && "mb" !== s && "ml" !== s) && (i = this._getImageLines(this.oCoords[s].corner), 
                        0 !== (e = this._findCrossPoints({
                            x: r,
                            y: n
                        }, i)) && e % 2 == 1)) return this.__corner = s, s;
                        return !1;
                    },
                    _setCornerCoords: function() {
                        var e, i, r = this.oCoords, n = t(45 - this.angle), s = .707106 * this.cornerSize, o = s * Math.cos(n), a = s * Math.sin(n);
                        for (var h in r) e = r[h].x, i = r[h].y, r[h].corner = {
                            tl: {
                                x: e - a,
                                y: i - o
                            },
                            tr: {
                                x: e + o,
                                y: i - a
                            },
                            bl: {
                                x: e - o,
                                y: i + a
                            },
                            br: {
                                x: e + a,
                                y: i + o
                            }
                        };
                    },
                    _getNonTransformedDimensions: function() {
                        var t = this.strokeWidth, e = this.width, i = this.height, r = !0, n = !0;
                        return "line" === this.type && "butt" === this.strokeLineCap && (n = e, r = i), 
                        n && (i += i < 0 ? -t : t), r && (e += e < 0 ? -t : t), {
                            x: e,
                            y: i
                        };
                    },
                    _getTransformedDimensions: function(t, e) {
                        void 0 === t && (t = this.skewX), void 0 === e && (e = this.skewY);
                        var i, r, n = this._getNonTransformedDimensions(), s = n.x / 2, o = n.y / 2, a = [ {
                            x: -s,
                            y: -o
                        }, {
                            x: s,
                            y: -o
                        }, {
                            x: -s,
                            y: o
                        }, {
                            x: s,
                            y: o
                        } ], h = this._calcDimensionsTransformMatrix(t, e, !1);
                        for (i = 0; i < a.length; i++) a[i] = fabric.util.transformPoint(a[i], h);
                        return {
                            x: (r = fabric.util.makeBoundingBoxFromPoints(a)).width,
                            y: r.height
                        };
                    },
                    _calculateCurrentDimensions: function() {
                        var t = this.getViewportTransform(), e = this._getTransformedDimensions(), i = e.x, r = e.y;
                        return i += 2 * this.padding, r += 2 * this.padding, fabric.util.transformPoint(new fabric.Point(i, r), t, !0);
                    },
                    drawBorders: function(t) {
                        if (!this.hasBorders) return this;
                        var e = this._calculateCurrentDimensions(), i = 1 / this.borderScaleFactor, r = e.x + i, n = e.y + i;
                        if (t.save(), t.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1, 
                        t.strokeStyle = this.borderColor, t.lineWidth = i, t.strokeRect(-r / 2, -n / 2, r, n), 
                        this.hasRotatingPoint && this.isControlVisible("mtr") && !this.get("lockRotation") && this.hasControls) {
                            var s = -n / 2;
                            t.beginPath(), t.moveTo(0, s), t.lineTo(0, s - this.rotatingPointOffset), t.closePath(), 
                            t.stroke();
                        }
                        return t.restore(), this;
                    },
                    drawBordersInGroup: function(t, e) {
                        if (!this.hasBorders) return this;
                        var i = this._getNonTransformedDimensions(), r = fabric.util.customTransformMatrix(e.scaleX, e.scaleY, e.skewX), n = fabric.util.transformPoint(i, r), s = 1 / this.borderScaleFactor, o = n.x + s + 2 * this.padding, a = n.y + s + 2 * this.padding;
                        return t.save(), t.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1, 
                        t.strokeStyle = this.borderColor, t.lineWidth = s, t.strokeRect(-o / 2, -a / 2, o, a), 
                        t.restore(), this;
                    },
                    drawControls: function(t) {
                        if (!this.hasControls) return this;
                        var e = this._calculateCurrentDimensions(), i = e.x, r = e.y, n = this.cornerSize, s = -(i + n) / 2, o = -(r + n) / 2, a = this.transparentCorners ? "strokeRect" : "fillRect";
                        return t.save(), t.lineWidth = 1, t.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1, 
                        t.strokeStyle = t.fillStyle = this.cornerColor, this._drawControl("tl", t, a, s, o), 
                        this._drawControl("tr", t, a, s + i, o), this._drawControl("bl", t, a, s, o + r), 
                        this._drawControl("br", t, a, s + i, o + r), this.get("lockUniScaling") || (this._drawControl("mt", t, a, s + i / 2, o), 
                        this._drawControl("mb", t, a, s + i / 2, o + r), this._drawControl("mr", t, a, s + i, o + r / 2), 
                        this._drawControl("ml", t, a, s, o + r / 2)), this.hasRotatingPoint && this._drawControl("mtr", t, a, s + i / 2, o - this.rotatingPointOffset), 
                        t.restore(), this;
                    },
                    _drawControl: function(t, e, i, r, n) {
                        if (this.isControlVisible(t)) {
                            var s = this.cornerSize;
                            "undefined" != typeof G_vmlCanvasManager || this.transparentCorners || e.clearRect(r, n, s, s), 
                            e[i](r, n, s, s);
                        }
                    },
                    isControlVisible: function(t) {
                        return this._getControlsVisibility()[t];
                    },
                    setControlVisible: function(t, e) {
                        return this._getControlsVisibility()[t] = e, this;
                    },
                    setControlsVisibility: function(t) {
                        for (var e in t || (t = {}), t) this.setControlVisible(e, t[e]);
                        return this;
                    },
                    _getControlsVisibility: function() {
                        return this._controlsVisibility || (this._controlsVisibility = {
                            tl: !0,
                            tr: !0,
                            br: !0,
                            bl: !0,
                            ml: !0,
                            mt: !0,
                            mr: !0,
                            mb: !0,
                            mtr: !0
                        }), this._controlsVisibility;
                    }
                });
            }(), fabric.util.object.extend(fabric.StaticCanvas.prototype, {
                FX_DURATION: 500,
                fxCenterObjectH: function(t, e) {
                    var i = function() {}, r = (e = e || {}).onComplete || i, n = e.onChange || i, s = this;
                    return fabric.util.animate({
                        startValue: t.get("left"),
                        endValue: this.getCenter().left,
                        duration: this.FX_DURATION,
                        onChange: function(e) {
                            t.set("left", e), s.renderAll(), n();
                        },
                        onComplete: function() {
                            t.setCoords(), r();
                        }
                    }), this;
                },
                fxCenterObjectV: function(t, e) {
                    var i = function() {}, r = (e = e || {}).onComplete || i, n = e.onChange || i, s = this;
                    return fabric.util.animate({
                        startValue: t.get("top"),
                        endValue: this.getCenter().top,
                        duration: this.FX_DURATION,
                        onChange: function(e) {
                            t.set("top", e), s.renderAll(), n();
                        },
                        onComplete: function() {
                            t.setCoords(), r();
                        }
                    }), this;
                },
                fxRemove: function(t, e) {
                    var i = function() {}, r = (e = e || {}).onComplete || i, n = e.onChange || i, s = this;
                    return fabric.util.animate({
                        startValue: t.get("opacity"),
                        endValue: 0,
                        duration: this.FX_DURATION,
                        onStart: function() {
                            t.set("active", !1);
                        },
                        onChange: function(e) {
                            t.set("opacity", e), s.renderAll(), n();
                        },
                        onComplete: function() {
                            s.remove(t), r();
                        }
                    }), this;
                }
            }), fabric.util.object.extend(fabric.Object.prototype, {
                animate: function() {
                    if (arguments[0] && "object" == typeof arguments[0]) {
                        var t, e, i = [];
                        for (t in arguments[0]) i.push(t);
                        for (var r = 0, n = i.length; r < n; r++) t = i[r], e = r !== n - 1, this._animate(t, arguments[0][t], arguments[1], e);
                    } else this._animate.apply(this, arguments);
                    return this;
                },
                _animate: function(t, e, i, r) {
                    var n, s = this;
                    e = e.toString(), i = i ? fabric.util.object.clone(i) : {}, ~t.indexOf(".") && (n = t.split("."));
                    var o = n ? this.get(n[0])[n[1]] : this.get(t);
                    "from" in i || (i.from = o), e = ~e.indexOf("=") ? o + parseFloat(e.replace("=", "")) : parseFloat(e), 
                    fabric.util.animate({
                        startValue: i.from,
                        endValue: e,
                        byValue: i.by,
                        easing: i.easing,
                        duration: i.duration,
                        abort: i.abort && function() {
                            return i.abort.call(s);
                        },
                        onChange: function(e) {
                            n ? s[n[0]][n[1]] = e : s.set(t, e), r || i.onChange && i.onChange();
                        },
                        onComplete: function() {
                            r || (s.setCoords(), i.onComplete && i.onComplete());
                        }
                    });
                }
            }), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = {
                    x1: 1,
                    x2: 1,
                    y1: 1,
                    y2: 1
                }, n = e.StaticCanvas.supports("setLineDash");
                function s(t, e) {
                    var i = t.origin, r = t.axis1, n = t.axis2, s = t.dimension, o = e.nearest, a = e.center, h = e.farthest;
                    return function() {
                        switch (this.get(i)) {
                          case o:
                            return Math.min(this.get(r), this.get(n));

                          case a:
                            return Math.min(this.get(r), this.get(n)) + .5 * this.get(s);

                          case h:
                            return Math.max(this.get(r), this.get(n));
                        }
                    };
                }
                e.Line ? e.warn("fabric.Line is already defined") : (e.Line = e.util.createClass(e.Object, {
                    type: "line",
                    x1: 0,
                    y1: 0,
                    x2: 0,
                    y2: 0,
                    initialize: function(t, e) {
                        e = e || {}, t || (t = [ 0, 0, 0, 0 ]), this.callSuper("initialize", e), this.set("x1", t[0]), 
                        this.set("y1", t[1]), this.set("x2", t[2]), this.set("y2", t[3]), this._setWidthHeight(e);
                    },
                    _setWidthHeight: function(t) {
                        t || (t = {}), this.width = Math.abs(this.x2 - this.x1), this.height = Math.abs(this.y2 - this.y1), 
                        this.left = "left" in t ? t.left : this._getLeftToOriginX(), this.top = "top" in t ? t.top : this._getTopToOriginY();
                    },
                    _set: function(t, e) {
                        return this.callSuper("_set", t, e), void 0 !== r[t] && this._setWidthHeight(), 
                        this;
                    },
                    _getLeftToOriginX: s({
                        origin: "originX",
                        axis1: "x1",
                        axis2: "x2",
                        dimension: "width"
                    }, {
                        nearest: "left",
                        center: "center",
                        farthest: "right"
                    }),
                    _getTopToOriginY: s({
                        origin: "originY",
                        axis1: "y1",
                        axis2: "y2",
                        dimension: "height"
                    }, {
                        nearest: "top",
                        center: "center",
                        farthest: "bottom"
                    }),
                    _render: function(t, e) {
                        if (t.beginPath(), e) {
                            var i = this.getCenterPoint();
                            t.translate(i.x - this.strokeWidth / 2, i.y - this.strokeWidth / 2);
                        }
                        if (!this.strokeDashArray || this.strokeDashArray && n) {
                            var r = this.calcLinePoints();
                            t.moveTo(r.x1, r.y1), t.lineTo(r.x2, r.y2);
                        }
                        t.lineWidth = this.strokeWidth;
                        var s = t.strokeStyle;
                        t.strokeStyle = this.stroke || t.fillStyle, this.stroke && this._renderStroke(t), 
                        t.strokeStyle = s;
                    },
                    _renderDashedStroke: function(t) {
                        var i = this.calcLinePoints();
                        t.beginPath(), e.util.drawDashedLine(t, i.x1, i.y1, i.x2, i.y2, this.strokeDashArray), 
                        t.closePath();
                    },
                    toObject: function(t) {
                        return i(this.callSuper("toObject", t), this.calcLinePoints());
                    },
                    calcLinePoints: function() {
                        var t = this.x1 <= this.x2 ? -1 : 1, e = this.y1 <= this.y2 ? -1 : 1, i = t * this.width * .5, r = e * this.height * .5;
                        return {
                            x1: i,
                            x2: t * this.width * -.5,
                            y1: r,
                            y2: e * this.height * -.5
                        };
                    },
                    complexity: function() {
                        return 1;
                    }
                }), e.Line.fromObject = function(t) {
                    var i = [ t.x1, t.y1, t.x2, t.y2 ];
                    return new e.Line(i, t);
                });
            }(exports), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {}), i = Math.PI, r = e.util.object.extend;
                e.Circle ? e.warn("fabric.Circle is already defined.") : (e.Circle = e.util.createClass(e.Object, {
                    type: "circle",
                    radius: 0,
                    startAngle: 0,
                    endAngle: 2 * i,
                    initialize: function(t) {
                        t = t || {}, this.callSuper("initialize", t), this.set("radius", t.radius || 0), 
                        this.startAngle = t.startAngle || this.startAngle, this.endAngle = t.endAngle || this.endAngle;
                    },
                    _set: function(t, e) {
                        return this.callSuper("_set", t, e), "radius" === t && this.setRadius(e), this;
                    },
                    toObject: function(t) {
                        return r(this.callSuper("toObject", t), {
                            radius: this.get("radius"),
                            startAngle: this.startAngle,
                            endAngle: this.endAngle
                        });
                    },
                    _render: function(t, e) {
                        t.beginPath(), t.arc(e ? this.left + this.radius : 0, e ? this.top + this.radius : 0, this.radius, this.startAngle, this.endAngle, !1), 
                        this._renderFill(t), this._renderStroke(t);
                    },
                    getRadiusX: function() {
                        return this.get("radius") * this.get("scaleX");
                    },
                    getRadiusY: function() {
                        return this.get("radius") * this.get("scaleY");
                    },
                    setRadius: function(t) {
                        return this.radius = t, this.set("width", 2 * t).set("height", 2 * t);
                    },
                    complexity: function() {
                        return 1;
                    }
                }), e.Circle.fromObject = function(t) {
                    return new e.Circle(t);
                });
            }(exports), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {});
                e.Triangle ? e.warn("fabric.Triangle is already defined") : (e.Triangle = e.util.createClass(e.Object, {
                    type: "triangle",
                    initialize: function(t) {
                        t = t || {}, this.callSuper("initialize", t), this.set("width", t.width || 100).set("height", t.height || 100);
                    },
                    _render: function(t) {
                        var e = this.width / 2, i = this.height / 2;
                        t.beginPath(), t.moveTo(-e, i), t.lineTo(0, -i), t.lineTo(e, i), t.closePath(), 
                        this._renderFill(t), this._renderStroke(t);
                    },
                    _renderDashedStroke: function(t) {
                        var i = this.width / 2, r = this.height / 2;
                        t.beginPath(), e.util.drawDashedLine(t, -i, r, 0, -r, this.strokeDashArray), e.util.drawDashedLine(t, 0, -r, i, r, this.strokeDashArray), 
                        e.util.drawDashedLine(t, i, r, -i, r, this.strokeDashArray), t.closePath();
                    },
                    complexity: function() {
                        return 1;
                    }
                }), e.Triangle.fromObject = function(t) {
                    return new e.Triangle(t);
                });
            }(exports), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {}), i = 2 * Math.PI, r = e.util.object.extend;
                e.Ellipse ? e.warn("fabric.Ellipse is already defined.") : (e.Ellipse = e.util.createClass(e.Object, {
                    type: "ellipse",
                    rx: 0,
                    ry: 0,
                    initialize: function(t) {
                        t = t || {}, this.callSuper("initialize", t), this.set("rx", t.rx || 0), this.set("ry", t.ry || 0);
                    },
                    _set: function(t, e) {
                        switch (this.callSuper("_set", t, e), t) {
                          case "rx":
                            this.rx = e, this.set("width", 2 * e);
                            break;

                          case "ry":
                            this.ry = e, this.set("height", 2 * e);
                        }
                        return this;
                    },
                    getRx: function() {
                        return this.get("rx") * this.get("scaleX");
                    },
                    getRy: function() {
                        return this.get("ry") * this.get("scaleY");
                    },
                    toObject: function(t) {
                        return r(this.callSuper("toObject", t), {
                            rx: this.get("rx"),
                            ry: this.get("ry")
                        });
                    },
                    _render: function(t, e) {
                        t.beginPath(), t.save(), t.transform(1, 0, 0, this.ry / this.rx, 0, 0), t.arc(e ? this.left + this.rx : 0, e ? (this.top + this.ry) * this.rx / this.ry : 0, this.rx, 0, i, !1), 
                        t.restore(), this._renderFill(t), this._renderStroke(t);
                    },
                    complexity: function() {
                        return 1;
                    }
                }), e.Ellipse.fromObject = function(t) {
                    return new e.Ellipse(t);
                });
            }(exports), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {}), i = e.util.object.extend;
                if (e.Rect) e.warn("fabric.Rect is already defined"); else {
                    var r = e.Object.prototype.stateProperties.concat();
                    r.push("rx", "ry", "x", "y"), e.Rect = e.util.createClass(e.Object, {
                        stateProperties: r,
                        type: "rect",
                        rx: 0,
                        ry: 0,
                        strokeDashArray: null,
                        initialize: function(t) {
                            t = t || {}, this.callSuper("initialize", t), this._initRxRy();
                        },
                        _initRxRy: function() {
                            this.rx && !this.ry ? this.ry = this.rx : this.ry && !this.rx && (this.rx = this.ry);
                        },
                        _render: function(t, e) {
                            if (1 !== this.width || 1 !== this.height) {
                                var i = this.rx ? Math.min(this.rx, this.width / 2) : 0, r = this.ry ? Math.min(this.ry, this.height / 2) : 0, n = this.width, s = this.height, o = e ? this.left : -this.width / 2, a = e ? this.top : -this.height / 2, h = 0 !== i || 0 !== r, c = .4477152502;
                                t.beginPath(), t.moveTo(o + i, a), t.lineTo(o + n - i, a), h && t.bezierCurveTo(o + n - c * i, a, o + n, a + c * r, o + n, a + r), 
                                t.lineTo(o + n, a + s - r), h && t.bezierCurveTo(o + n, a + s - c * r, o + n - c * i, a + s, o + n - i, a + s), 
                                t.lineTo(o + i, a + s), h && t.bezierCurveTo(o + c * i, a + s, o, a + s - c * r, o, a + s - r), 
                                t.lineTo(o, a + r), h && t.bezierCurveTo(o, a + c * r, o + c * i, a, o + i, a), 
                                t.closePath(), this._renderFill(t), this._renderStroke(t);
                            } else t.fillRect(-.5, -.5, 1, 1);
                        },
                        _renderDashedStroke: function(t) {
                            var i = -this.width / 2, r = -this.height / 2, n = this.width, s = this.height;
                            t.beginPath(), e.util.drawDashedLine(t, i, r, i + n, r, this.strokeDashArray), e.util.drawDashedLine(t, i + n, r, i + n, r + s, this.strokeDashArray), 
                            e.util.drawDashedLine(t, i + n, r + s, i, r + s, this.strokeDashArray), e.util.drawDashedLine(t, i, r + s, i, r, this.strokeDashArray), 
                            t.closePath();
                        },
                        toObject: function(t) {
                            var e = i(this.callSuper("toObject", t), {
                                rx: this.get("rx") || 0,
                                ry: this.get("ry") || 0
                            });
                            return this.includeDefaultValues || this._removeDefaultValues(e), e;
                        },
                        complexity: function() {
                            return 1;
                        }
                    }), e.Rect.fromObject = function(t) {
                        return new e.Rect(t);
                    };
                }
            }(exports), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {});
                e.Polyline ? e.warn("fabric.Polyline is already defined") : (e.Polyline = e.util.createClass(e.Object, {
                    type: "polyline",
                    points: null,
                    minX: 0,
                    minY: 0,
                    initialize: function(t, i) {
                        return e.Polygon.prototype.initialize.call(this, t, i);
                    },
                    _calcDimensions: function() {
                        return e.Polygon.prototype._calcDimensions.call(this);
                    },
                    _applyPointOffset: function() {
                        return e.Polygon.prototype._applyPointOffset.call(this);
                    },
                    toObject: function(t) {
                        return e.Polygon.prototype.toObject.call(this, t);
                    },
                    _render: function(t, i) {
                        e.Polygon.prototype.commonRender.call(this, t, i) && (this._renderFill(t), this._renderStroke(t));
                    },
                    _renderDashedStroke: function(t) {
                        var i, r;
                        t.beginPath();
                        for (var n = 0, s = this.points.length; n < s; n++) i = this.points[n], r = this.points[n + 1] || i, 
                        e.util.drawDashedLine(t, i.x, i.y, r.x, r.y, this.strokeDashArray);
                    },
                    complexity: function() {
                        return this.get("points").length;
                    }
                }), e.Polyline.fromObject = function(t) {
                    var i = t.points;
                    return new e.Polyline(i, t, !0);
                });
            }(exports), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.util.array.min, n = e.util.array.max;
                e.util.toFixed;
                e.Polygon ? e.warn("fabric.Polygon is already defined") : (e.Polygon = e.util.createClass(e.Object, {
                    type: "polygon",
                    points: null,
                    minX: 0,
                    minY: 0,
                    initialize: function(t, e) {
                        e = e || {}, this.points = t || [], this.callSuper("initialize", e), this._calcDimensions(), 
                        "top" in e || (this.top = this.minY), "left" in e || (this.left = this.minX), this.pathOffset = {
                            x: this.minX + this.width / 2,
                            y: this.minY + this.height / 2
                        };
                    },
                    _calcDimensions: function() {
                        var t = this.points, e = r(t, "x"), i = r(t, "y"), s = n(t, "x"), o = n(t, "y");
                        this.width = s - e || 0, this.height = o - i || 0, this.minX = e || 0, this.minY = i || 0;
                    },
                    toObject: function(t) {
                        return i(this.callSuper("toObject", t), {
                            points: this.points.concat()
                        });
                    },
                    _render: function(t, e) {
                        this.commonRender(t, e) && (this._renderFill(t), (this.stroke || this.strokeDashArray) && (t.closePath(), 
                        this._renderStroke(t)));
                    },
                    commonRender: function(t, e) {
                        var i, r = this.points.length;
                        if (!r || isNaN(this.points[r - 1].y)) return !1;
                        e || t.translate(-this.pathOffset.x, -this.pathOffset.y), t.beginPath(), t.moveTo(this.points[0].x, this.points[0].y);
                        for (var n = 0; n < r; n++) i = this.points[n], t.lineTo(i.x, i.y);
                        return !0;
                    },
                    _renderDashedStroke: function(t) {
                        e.Polyline.prototype._renderDashedStroke.call(this, t), t.closePath();
                    },
                    complexity: function() {
                        return this.points.length;
                    }
                }), e.Polygon.fromObject = function(t) {
                    return new e.Polygon(t.points, t, !0);
                });
            }(exports), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {}), i = e.util.array.min, r = e.util.array.max, n = e.util.object.extend, s = Object.prototype.toString, o = e.util.drawArc, a = {
                    m: 2,
                    l: 2,
                    h: 1,
                    v: 1,
                    c: 6,
                    s: 4,
                    q: 4,
                    t: 2,
                    a: 7
                }, h = {
                    m: "l",
                    M: "L"
                };
                e.Path ? e.warn("fabric.Path is already defined") : (e.Path = e.util.createClass(e.Object, {
                    type: "path",
                    path: null,
                    minX: 0,
                    minY: 0,
                    initialize: function(t, e) {
                        e = e || {}, this.setOptions(e), t || (t = []);
                        var i = "[object Array]" === s.call(t);
                        this.path = i ? t : t.match && t.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi), this.path && (i || (this.path = this._parsePath()), 
                        this._setPositionDimensions(e), e.sourcePath && this.setSourcePath(e.sourcePath));
                    },
                    _setPositionDimensions: function(t) {
                        var e = this._parseDimensions();
                        this.minX = e.left, this.minY = e.top, this.width = e.width, this.height = e.height, 
                        void 0 === t.left && (this.left = e.left + ("center" === this.originX ? this.width / 2 : "right" === this.originX ? this.width : 0)), 
                        void 0 === t.top && (this.top = e.top + ("center" === this.originY ? this.height / 2 : "bottom" === this.originY ? this.height : 0)), 
                        this.pathOffset = this.pathOffset || {
                            x: this.minX + this.width / 2,
                            y: this.minY + this.height / 2
                        };
                    },
                    _render: function(t) {
                        var e, i, r, n = null, s = 0, a = 0, h = 0, c = 0, l = 0, u = 0, f = -this.pathOffset.x, d = -this.pathOffset.y;
                        this.group && "path-group" === this.group.type && (f = 0, d = 0), t.beginPath();
                        for (var p = 0, g = this.path.length; p < g; ++p) {
                            switch ((e = this.path[p])[0]) {
                              case "l":
                                h += e[1], c += e[2], t.lineTo(h + f, c + d);
                                break;

                              case "L":
                                h = e[1], c = e[2], t.lineTo(h + f, c + d);
                                break;

                              case "h":
                                h += e[1], t.lineTo(h + f, c + d);
                                break;

                              case "H":
                                h = e[1], t.lineTo(h + f, c + d);
                                break;

                              case "v":
                                c += e[1], t.lineTo(h + f, c + d);
                                break;

                              case "V":
                                c = e[1], t.lineTo(h + f, c + d);
                                break;

                              case "m":
                                s = h += e[1], a = c += e[2], t.moveTo(h + f, c + d);
                                break;

                              case "M":
                                s = h = e[1], a = c = e[2], t.moveTo(h + f, c + d);
                                break;

                              case "c":
                                i = h + e[5], r = c + e[6], l = h + e[3], u = c + e[4], t.bezierCurveTo(h + e[1] + f, c + e[2] + d, l + f, u + d, i + f, r + d), 
                                h = i, c = r;
                                break;

                              case "C":
                                h = e[5], c = e[6], l = e[3], u = e[4], t.bezierCurveTo(e[1] + f, e[2] + d, l + f, u + d, h + f, c + d);
                                break;

                              case "s":
                                i = h + e[3], r = c + e[4], null === n[0].match(/[CcSs]/) ? (l = h, u = c) : (l = 2 * h - l, 
                                u = 2 * c - u), t.bezierCurveTo(l + f, u + d, h + e[1] + f, c + e[2] + d, i + f, r + d), 
                                l = h + e[1], u = c + e[2], h = i, c = r;
                                break;

                              case "S":
                                i = e[3], r = e[4], null === n[0].match(/[CcSs]/) ? (l = h, u = c) : (l = 2 * h - l, 
                                u = 2 * c - u), t.bezierCurveTo(l + f, u + d, e[1] + f, e[2] + d, i + f, r + d), 
                                h = i, c = r, l = e[1], u = e[2];
                                break;

                              case "q":
                                i = h + e[3], r = c + e[4], l = h + e[1], u = c + e[2], t.quadraticCurveTo(l + f, u + d, i + f, r + d), 
                                h = i, c = r;
                                break;

                              case "Q":
                                i = e[3], r = e[4], t.quadraticCurveTo(e[1] + f, e[2] + d, i + f, r + d), h = i, 
                                c = r, l = e[1], u = e[2];
                                break;

                              case "t":
                                i = h + e[1], r = c + e[2], null === n[0].match(/[QqTt]/) ? (l = h, u = c) : (l = 2 * h - l, 
                                u = 2 * c - u), t.quadraticCurveTo(l + f, u + d, i + f, r + d), h = i, c = r;
                                break;

                              case "T":
                                i = e[1], r = e[2], null === n[0].match(/[QqTt]/) ? (l = h, u = c) : (l = 2 * h - l, 
                                u = 2 * c - u), t.quadraticCurveTo(l + f, u + d, i + f, r + d), h = i, c = r;
                                break;

                              case "a":
                                o(t, h + f, c + d, [ e[1], e[2], e[3], e[4], e[5], e[6] + h + f, e[7] + c + d ]), 
                                h += e[6], c += e[7];
                                break;

                              case "A":
                                o(t, h + f, c + d, [ e[1], e[2], e[3], e[4], e[5], e[6] + f, e[7] + d ]), h = e[6], 
                                c = e[7];
                                break;

                              case "z":
                              case "Z":
                                h = s, c = a, t.closePath();
                            }
                            n = e;
                        }
                        this._renderFill(t), this._renderStroke(t);
                    },
                    toString: function() {
                        return "#<fabric.Path (" + this.complexity() + '): { "top": ' + this.top + ', "left": ' + this.left + " }>";
                    },
                    toObject: function(t) {
                        var e = n(this.callSuper("toObject", t), {
                            path: this.path.map(function(t) {
                                return t.slice();
                            }),
                            pathOffset: this.pathOffset
                        });
                        return this.sourcePath && (e.sourcePath = this.sourcePath), this.transformMatrix && (e.transformMatrix = this.transformMatrix), 
                        e;
                    },
                    toDatalessObject: function(t) {
                        var e = this.toObject(t);
                        return this.sourcePath && (e.path = this.sourcePath), delete e.sourcePath, e;
                    },
                    complexity: function() {
                        return this.path.length;
                    },
                    _parsePath: function() {
                        for (var t, e, i, r, n, s = [], o = [], c = /([-+]?((\d+\.\d+)|((\d+)|(\.\d+)))(?:e[-+]?\d+)?)/gi, l = 0, u = this.path.length; l < u; l++) {
                            for (r = (t = this.path[l]).slice(1).trim(), o.length = 0; i = c.exec(r); ) o.push(i[0]);
                            n = [ t.charAt(0) ];
                            for (var f = 0, d = o.length; f < d; f++) e = parseFloat(o[f]), isNaN(e) || n.push(e);
                            var p = n[0], g = a[p.toLowerCase()], v = h[p] || p;
                            if (n.length - 1 > g) for (var b = 1, _ = n.length; b < _; b += g) s.push([ p ].concat(n.slice(b, b + g))), 
                            p = v; else s.push(n);
                        }
                        return s;
                    },
                    _parseDimensions: function() {
                        for (var t, n, s, o, a = [], h = [], c = null, l = 0, u = 0, f = 0, d = 0, p = 0, g = 0, v = 0, b = this.path.length; v < b; ++v) {
                            switch ((t = this.path[v])[0]) {
                              case "l":
                                f += t[1], d += t[2], o = [];
                                break;

                              case "L":
                                f = t[1], d = t[2], o = [];
                                break;

                              case "h":
                                f += t[1], o = [];
                                break;

                              case "H":
                                f = t[1], o = [];
                                break;

                              case "v":
                                d += t[1], o = [];
                                break;

                              case "V":
                                d = t[1], o = [];
                                break;

                              case "m":
                                l = f += t[1], u = d += t[2], o = [];
                                break;

                              case "M":
                                l = f = t[1], u = d = t[2], o = [];
                                break;

                              case "c":
                                n = f + t[5], s = d + t[6], p = f + t[3], g = d + t[4], o = e.util.getBoundsOfCurve(f, d, f + t[1], d + t[2], p, g, n, s), 
                                f = n, d = s;
                                break;

                              case "C":
                                f = t[5], d = t[6], p = t[3], g = t[4], o = e.util.getBoundsOfCurve(f, d, t[1], t[2], p, g, f, d);
                                break;

                              case "s":
                                n = f + t[3], s = d + t[4], null === c[0].match(/[CcSs]/) ? (p = f, g = d) : (p = 2 * f - p, 
                                g = 2 * d - g), o = e.util.getBoundsOfCurve(f, d, p, g, f + t[1], d + t[2], n, s), 
                                p = f + t[1], g = d + t[2], f = n, d = s;
                                break;

                              case "S":
                                n = t[3], s = t[4], null === c[0].match(/[CcSs]/) ? (p = f, g = d) : (p = 2 * f - p, 
                                g = 2 * d - g), o = e.util.getBoundsOfCurve(f, d, p, g, t[1], t[2], n, s), f = n, 
                                d = s, p = t[1], g = t[2];
                                break;

                              case "q":
                                n = f + t[3], s = d + t[4], p = f + t[1], g = d + t[2], o = e.util.getBoundsOfCurve(f, d, p, g, p, g, n, s), 
                                f = n, d = s;
                                break;

                              case "Q":
                                p = t[1], g = t[2], o = e.util.getBoundsOfCurve(f, d, p, g, p, g, t[3], t[4]), f = t[3], 
                                d = t[4];
                                break;

                              case "t":
                                n = f + t[1], s = d + t[2], null === c[0].match(/[QqTt]/) ? (p = f, g = d) : (p = 2 * f - p, 
                                g = 2 * d - g), o = e.util.getBoundsOfCurve(f, d, p, g, p, g, n, s), f = n, d = s;
                                break;

                              case "T":
                                n = t[1], s = t[2], null === c[0].match(/[QqTt]/) ? (p = f, g = d) : (p = 2 * f - p, 
                                g = 2 * d - g), o = e.util.getBoundsOfCurve(f, d, p, g, p, g, n, s), f = n, d = s;
                                break;

                              case "a":
                                o = e.util.getBoundsOfArc(f, d, t[1], t[2], t[3], t[4], t[5], t[6] + f, t[7] + d), 
                                f += t[6], d += t[7];
                                break;

                              case "A":
                                o = e.util.getBoundsOfArc(f, d, t[1], t[2], t[3], t[4], t[5], t[6], t[7]), f = t[6], 
                                d = t[7];
                                break;

                              case "z":
                              case "Z":
                                f = l, d = u;
                            }
                            c = t, o.forEach(function(t) {
                                a.push(t.x), h.push(t.y);
                            }), a.push(f), h.push(d);
                        }
                        var _ = i(a) || 0, m = i(h) || 0;
                        return {
                            left: _,
                            top: m,
                            width: (r(a) || 0) - _,
                            height: (r(h) || 0) - m
                        };
                    }
                }), e.Path.fromObject = function(t, i) {
                    "string" == typeof t.path ? e.loadSVGFromURL(t.path, function(r) {
                        var n = r[0], s = t.path;
                        delete t.path, e.util.object.extend(n, t), n.setSourcePath(s), i(n);
                    }) : i(new e.Path(t.path, t));
                }, e.Path.async = !0);
            }(exports), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.util.array.invoke, n = e.Object.prototype.toObject;
                e.PathGroup ? e.warn("fabric.PathGroup is already defined") : (e.PathGroup = e.util.createClass(e.Path, {
                    type: "path-group",
                    fill: "",
                    initialize: function(t, e) {
                        e = e || {}, this.paths = t || [];
                        for (var i = this.paths.length; i--; ) this.paths[i].group = this;
                        e.toBeParsed && (this.parseDimensionsFromPaths(e), delete e.toBeParsed), this.setOptions(e), 
                        this.setCoords(), e.sourcePath && this.setSourcePath(e.sourcePath);
                    },
                    parseDimensionsFromPaths: function(t) {
                        for (var i, r, n, s, o, a, h = [], c = [], l = this.paths.length; l--; ) {
                            s = (n = this.paths[l]).height + n.strokeWidth, o = n.width + n.strokeWidth, i = [ {
                                x: n.left,
                                y: n.top
                            }, {
                                x: n.left + o,
                                y: n.top
                            }, {
                                x: n.left,
                                y: n.top + s
                            }, {
                                x: n.left + o,
                                y: n.top + s
                            } ], a = this.paths[l].transformMatrix;
                            for (var u = 0; u < i.length; u++) r = i[u], a && (r = e.util.transformPoint(r, a, !1)), 
                            h.push(r.x), c.push(r.y);
                        }
                        t.width = Math.max.apply(null, h), t.height = Math.max.apply(null, c);
                    },
                    render: function(t) {
                        if (this.visible) {
                            t.save(), this.transformMatrix && t.transform.apply(t, this.transformMatrix), this.transform(t), 
                            this._setShadow(t), this.clipTo && e.util.clipContext(this, t), t.translate(-this.width / 2, -this.height / 2);
                            for (var i = 0, r = this.paths.length; i < r; ++i) this.paths[i].render(t, !0);
                            this.clipTo && t.restore(), t.restore();
                        }
                    },
                    _set: function(t, e) {
                        if ("fill" === t && e && this.isSameColor()) for (var i = this.paths.length; i--; ) this.paths[i]._set(t, e);
                        return this.callSuper("_set", t, e);
                    },
                    toObject: function(t) {
                        var e = i(n.call(this, t), {
                            paths: r(this.getObjects(), "toObject", t)
                        });
                        return this.sourcePath && (e.sourcePath = this.sourcePath), e;
                    },
                    toDatalessObject: function(t) {
                        var e = this.toObject(t);
                        return this.sourcePath && (e.paths = this.sourcePath), e;
                    },
                    toString: function() {
                        return "#<fabric.PathGroup (" + this.complexity() + "): { top: " + this.top + ", left: " + this.left + " }>";
                    },
                    isSameColor: function() {
                        var t = this.getObjects()[0].get("fill") || "";
                        return "string" == typeof t && (t = t.toLowerCase(), this.getObjects().every(function(e) {
                            var i = e.get("fill") || "";
                            return "string" == typeof i && i.toLowerCase() === t;
                        }));
                    },
                    complexity: function() {
                        return this.paths.reduce(function(t, e) {
                            return t + (e && e.complexity ? e.complexity() : 0);
                        }, 0);
                    },
                    getObjects: function() {
                        return this.paths;
                    }
                }), e.PathGroup.fromObject = function(t, i) {
                    "string" == typeof t.paths ? e.loadSVGFromURL(t.paths, function(r) {
                        var n = t.paths;
                        delete t.paths;
                        var s = e.util.groupSVGElements(r, t, n);
                        i(s);
                    }) : e.util.enlivenObjects(t.paths, function(r) {
                        delete t.paths, i(new e.PathGroup(r, t));
                    });
                }, e.PathGroup.async = !0);
            }(exports), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.util.array.min, n = e.util.array.max, s = e.util.array.invoke;
                if (!e.Group) {
                    var o = {
                        lockMovementX: !0,
                        lockMovementY: !0,
                        lockRotation: !0,
                        lockScalingX: !0,
                        lockScalingY: !0,
                        lockUniScaling: !0
                    };
                    e.Group = e.util.createClass(e.Object, e.Collection, {
                        type: "group",
                        strokeWidth: 0,
                        initialize: function(t, e, i) {
                            e = e || {}, this._objects = [], i && this.callSuper("initialize", e), this._objects = t || [];
                            for (var r = this._objects.length; r--; ) this._objects[r].group = this;
                            this.originalState = {}, e.originX && (this.originX = e.originX), e.originY && (this.originY = e.originY), 
                            i ? this._updateObjectsCoords(!0) : (this._calcBounds(), this._updateObjectsCoords(), 
                            this.callSuper("initialize", e)), this.setCoords(), this.saveCoords();
                        },
                        _updateObjectsCoords: function(t) {
                            for (var e = this._objects.length; e--; ) this._updateObjectCoords(this._objects[e], t);
                        },
                        _updateObjectCoords: function(t, e) {
                            if (t.__origHasControls = t.hasControls, t.hasControls = !1, !e) {
                                var i = t.getLeft(), r = t.getTop(), n = this.getCenterPoint();
                                t.set({
                                    originalLeft: i,
                                    originalTop: r,
                                    left: i - n.x,
                                    top: r - n.y
                                }), t.setCoords();
                            }
                        },
                        toString: function() {
                            return "#<fabric.Group: (" + this.complexity() + ")>";
                        },
                        addWithUpdate: function(t) {
                            return this._restoreObjectsState(), e.util.resetObjectTransform(this), t && (this._objects.push(t), 
                            t.group = this, t._set("canvas", this.canvas)), this.forEachObject(this._setObjectActive, this), 
                            this._calcBounds(), this._updateObjectsCoords(), this;
                        },
                        _setObjectActive: function(t) {
                            t.set("active", !0), t.group = this;
                        },
                        removeWithUpdate: function(t) {
                            return this._restoreObjectsState(), e.util.resetObjectTransform(this), this.forEachObject(this._setObjectActive, this), 
                            this.remove(t), this._calcBounds(), this._updateObjectsCoords(), this;
                        },
                        _onObjectAdded: function(t) {
                            t.group = this, t._set("canvas", this.canvas);
                        },
                        _onObjectRemoved: function(t) {
                            delete t.group, t.set("active", !1);
                        },
                        delegatedProperties: {
                            fill: !0,
                            stroke: !0,
                            strokeWidth: !0,
                            fontFamily: !0,
                            fontWeight: !0,
                            fontSize: !0,
                            fontStyle: !0,
                            lineHeight: !0,
                            textDecoration: !0,
                            textAlign: !0,
                            backgroundColor: !0
                        },
                        _set: function(t, e) {
                            var i = this._objects.length;
                            if (this.delegatedProperties[t] || "canvas" === t) for (;i--; ) this._objects[i].set(t, e); else for (;i--; ) this._objects[i].setOnGroup(t, e);
                            this.callSuper("_set", t, e);
                        },
                        toObject: function(t) {
                            return i(this.callSuper("toObject", t), {
                                objects: s(this._objects, "toObject", t)
                            });
                        },
                        render: function(t) {
                            if (this.visible) {
                                t.save(), this.transformMatrix && t.transform.apply(t, this.transformMatrix), this.transform(t), 
                                this._setShadow(t), this.clipTo && e.util.clipContext(this, t);
                                for (var i = 0, r = this._objects.length; i < r; i++) this._renderObject(this._objects[i], t);
                                this.clipTo && t.restore(), t.restore();
                            }
                        },
                        _renderControls: function(t, e) {
                            this.callSuper("_renderControls", t, e);
                            for (var i = 0, r = this._objects.length; i < r; i++) this._objects[i]._renderControls(t);
                        },
                        _renderObject: function(t, e) {
                            if (t.visible) {
                                var i = t.hasRotatingPoint;
                                t.hasRotatingPoint = !1, t.render(e), t.hasRotatingPoint = i;
                            }
                        },
                        _restoreObjectsState: function() {
                            return this._objects.forEach(this._restoreObjectState, this), this;
                        },
                        realizeTransform: function(t) {
                            var i = t.calcTransformMatrix(), r = e.util.qrDecompose(i), n = new e.Point(r.translateX, r.translateY);
                            return t.scaleX = r.scaleX, t.scaleY = r.scaleY, t.skewX = r.skewX, t.skewY = r.skewY, 
                            t.angle = r.angle, t.flipX = !1, t.flipY = !1, t.setPositionByOrigin(n, "center", "center"), 
                            t;
                        },
                        _restoreObjectState: function(t) {
                            return this.realizeTransform(t), t.setCoords(), t.hasControls = t.__origHasControls, 
                            delete t.__origHasControls, t.set("active", !1), delete t.group, this;
                        },
                        destroy: function() {
                            return this._restoreObjectsState();
                        },
                        saveCoords: function() {
                            return this._originalLeft = this.get("left"), this._originalTop = this.get("top"), 
                            this;
                        },
                        hasMoved: function() {
                            return this._originalLeft !== this.get("left") || this._originalTop !== this.get("top");
                        },
                        setObjectsCoords: function() {
                            return this.forEachObject(function(t) {
                                t.setCoords();
                            }), this;
                        },
                        _calcBounds: function(t) {
                            for (var e, i, r, n = [], s = [], o = [ "tr", "br", "bl", "tl" ], a = 0, h = this._objects.length, c = o.length; a < h; ++a) for ((e = this._objects[a]).setCoords(), 
                            r = 0; r < c; r++) i = o[r], n.push(e.oCoords[i].x), s.push(e.oCoords[i].y);
                            this.set(this._getBounds(n, s, t));
                        },
                        _getBounds: function(t, i, s) {
                            var o = e.util.invertTransform(this.getViewportTransform()), a = e.util.transformPoint(new e.Point(r(t), r(i)), o), h = e.util.transformPoint(new e.Point(n(t), n(i)), o), c = {
                                width: h.x - a.x || 0,
                                height: h.y - a.y || 0
                            };
                            return s || (c.left = a.x || 0, c.top = a.y || 0, "center" === this.originX && (c.left += c.width / 2), 
                            "right" === this.originX && (c.left += c.width), "center" === this.originY && (c.top += c.height / 2), 
                            "bottom" === this.originY && (c.top += c.height)), c;
                        },
                        get: function(t) {
                            if (t in o) {
                                if (this[t]) return this[t];
                                for (var e = 0, i = this._objects.length; e < i; e++) if (this._objects[e][t]) return !0;
                                return !1;
                            }
                            return t in this.delegatedProperties ? this._objects[0] && this._objects[0].get(t) : this[t];
                        }
                    }), e.Group.fromObject = function(t, i) {
                        e.util.enlivenObjects(t.objects, function(r) {
                            delete t.objects, i && i(new e.Group(r, t, !0));
                        });
                    }, e.Group.async = !0;
                }
            }(exports), function(t) {
                "use strict";
                var e = fabric.util.object.extend;
                t.fabric || (t.fabric = {}), t.fabric.Image ? fabric.warn("fabric.Image is already defined.") : (fabric.Image = fabric.util.createClass(fabric.Object, {
                    type: "image",
                    crossOrigin: "",
                    alignX: "none",
                    alignY: "none",
                    meetOrSlice: "meet",
                    strokeWidth: 0,
                    _lastScaleX: 1,
                    _lastScaleY: 1,
                    initialize: function(t, e) {
                        e || (e = {}), this.filters = [], this.resizeFilters = [], this.callSuper("initialize", e), 
                        this._initElement(t, e);
                    },
                    getElement: function() {
                        return this._element;
                    },
                    setElement: function(t, e, i) {
                        return this._element = t, this._originalElement = t, this._initConfig(i), 0 !== this.filters.length ? this.applyFilters(e) : e && e(), 
                        this;
                    },
                    setCrossOrigin: function(t) {
                        return this.crossOrigin = t, this._element.crossOrigin = t, this;
                    },
                    getOriginalSize: function() {
                        var t = this.getElement();
                        return {
                            width: t.width,
                            height: t.height
                        };
                    },
                    _stroke: function(t) {
                        if (this.stroke && 0 !== this.strokeWidth) {
                            var e = this.width / 2, i = this.height / 2;
                            t.beginPath(), t.moveTo(-e, -i), t.lineTo(e, -i), t.lineTo(e, i), t.lineTo(-e, i), 
                            t.lineTo(-e, -i), t.closePath();
                        }
                    },
                    _renderDashedStroke: function(t) {
                        var e = -this.width / 2, i = -this.height / 2, r = this.width, n = this.height;
                        t.save(), this._setStrokeStyles(t), t.beginPath(), fabric.util.drawDashedLine(t, e, i, e + r, i, this.strokeDashArray), 
                        fabric.util.drawDashedLine(t, e + r, i, e + r, i + n, this.strokeDashArray), fabric.util.drawDashedLine(t, e + r, i + n, e, i + n, this.strokeDashArray), 
                        fabric.util.drawDashedLine(t, e, i + n, e, i, this.strokeDashArray), t.closePath(), 
                        t.restore();
                    },
                    toObject: function(t) {
                        var i = [], r = this._originalElement;
                        this.filters.forEach(function(t) {
                            t && i.push(t.toObject());
                        });
                        var n = e(this.callSuper("toObject", t), {
                            src: r ? r.src || r._src : "",
                            filters: i,
                            crossOrigin: this.crossOrigin,
                            alignX: this.alignX,
                            alignY: this.alignY,
                            meetOrSlice: this.meetOrSlice
                        });
                        return this.resizeFilters.length > 0 && (n.resizeFilters = this.resizeFilters.map(function(t) {
                            return t && t.toObject();
                        })), this.includeDefaultValues || this._removeDefaultValues(n), n;
                    },
                    getSrc: function() {
                        if (this.getElement()) return this.getElement().src || this.getElement()._src;
                    },
                    setSrc: function(t, e, i) {
                        fabric.util.loadImage(t, function(t) {
                            return this.setElement(t, e, i);
                        }, this, i && i.crossOrigin);
                    },
                    toString: function() {
                        return '#<fabric.Image: { src: "' + this.getSrc() + '" }>';
                    },
                    clone: function(t, e) {
                        this.constructor.fromObject(this.toObject(e), t);
                    },
                    applyFilters: function(t, e, i, r) {
                        if (e = e || this.filters, i = i || this._originalElement) {
                            var n = i, s = fabric.util.createCanvasElement(), o = fabric.util.createImage(), a = this;
                            return s.width = n.width, s.height = n.height, s.getContext("2d").drawImage(n, 0, 0, n.width, n.height), 
                            0 === e.length ? (this._element = i, t && t(), s) : (e.forEach(function(t) {
                                t && t.applyTo(s, t.scaleX || a.scaleX, t.scaleY || a.scaleY), !r && t && "Resize" === t.type && (a.width *= t.scaleX, 
                                a.height *= t.scaleY);
                            }), o.width = s.width, o.height = s.height, fabric.isLikelyNode ? (o.src = s.toBuffer(void 0, fabric.Image.pngCompression), 
                            a._element = o, !r && (a._filteredEl = o), t && t()) : (o.onload = function() {
                                a._element = o, !r && (a._filteredEl = o), t && t(), o.onload = s = n = null;
                            }, o.src = s.toDataURL("image/png")), s);
                        }
                    },
                    _render: function(t, e) {
                        var i, r, n, s = this._findMargins();
                        i = e ? this.left : -this.width / 2, r = e ? this.top : -this.height / 2, "slice" === this.meetOrSlice && (t.beginPath(), 
                        t.rect(i, r, this.width, this.height), t.clip()), !1 === this.isMoving && this.resizeFilters.length && this._needsResize() ? (this._lastScaleX = this.scaleX, 
                        this._lastScaleY = this.scaleY, n = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, !0)) : n = this._element, 
                        n && t.drawImage(n, i + s.marginX, r + s.marginY, s.width, s.height), this._stroke(t), 
                        this._renderStroke(t);
                    },
                    _needsResize: function() {
                        return this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY;
                    },
                    _findMargins: function() {
                        var t, e, i = this.width, r = this.height, n = 0, s = 0;
                        return "none" === this.alignX && "none" === this.alignY || (t = [ this.width / this._element.width, this.height / this._element.height ], 
                        e = "meet" === this.meetOrSlice ? Math.min.apply(null, t) : Math.max.apply(null, t), 
                        i = this._element.width * e, r = this._element.height * e, "Mid" === this.alignX && (n = (this.width - i) / 2), 
                        "Max" === this.alignX && (n = this.width - i), "Mid" === this.alignY && (s = (this.height - r) / 2), 
                        "Max" === this.alignY && (s = this.height - r)), {
                            width: i,
                            height: r,
                            marginX: n,
                            marginY: s
                        };
                    },
                    _resetWidthHeight: function() {
                        var t = this.getElement();
                        this.set("width", t.width), this.set("height", t.height);
                    },
                    _initElement: function(t, e) {
                        this.setElement(fabric.util.getById(t), null, e), fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);
                    },
                    _initConfig: function(t) {
                        t || (t = {}), this.setOptions(t), this._setWidthHeight(t), this._element && this.crossOrigin && (this._element.crossOrigin = this.crossOrigin);
                    },
                    _initFilters: function(t, e) {
                        t && t.length ? fabric.util.enlivenObjects(t, function(t) {
                            e && e(t);
                        }, "fabric.Image.filters") : e && e();
                    },
                    _setWidthHeight: function(t) {
                        this.width = "width" in t ? t.width : this.getElement() && this.getElement().width || 0, 
                        this.height = "height" in t ? t.height : this.getElement() && this.getElement().height || 0;
                    },
                    complexity: function() {
                        return 1;
                    }
                }), fabric.Image.CSS_CANVAS = "canvas-img", fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc, 
                fabric.Image.fromObject = function(t, e) {
                    fabric.util.loadImage(t.src, function(i) {
                        fabric.Image.prototype._initFilters.call(t, t.filters, function(r) {
                            t.filters = r || [], fabric.Image.prototype._initFilters.call(t, t.resizeFilters, function(r) {
                                t.resizeFilters = r || [];
                                var n = new fabric.Image(i, t);
                                e && e(n);
                            });
                        });
                    }, null, t.crossOrigin);
                }, fabric.Image.fromURL = function(t, e, i) {
                    fabric.util.loadImage(t, function(t) {
                        e && e(new fabric.Image(t, i));
                    }, null, i && i.crossOrigin);
                }, fabric.Image.async = !0, fabric.Image.pngCompression = 1);
            }(exports), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.util.object.clone, n = (e.util.toFixed, 
                e.StaticCanvas.supports("setLineDash"));
                e.Object.NUM_FRACTION_DIGITS;
                if (e.Text) e.warn("fabric.Text is already defined"); else {
                    var s = e.Object.prototype.stateProperties.concat();
                    s.push("fontFamily", "fontWeight", "fontSize", "text", "textDecoration", "textAlign", "fontStyle", "lineHeight", "textBackgroundColor"), 
                    e.Text = e.util.createClass(e.Object, {
                        _dimensionAffectingProps: {
                            fontSize: !0,
                            fontWeight: !0,
                            fontFamily: !0,
                            fontStyle: !0,
                            lineHeight: !0,
                            stroke: !0,
                            strokeWidth: !0,
                            text: !0,
                            textAlign: !0
                        },
                        _reNewline: /\r?\n/,
                        _reSpacesAndTabs: /[ \t\r]+/g,
                        type: "text",
                        fontSize: 40,
                        fontWeight: "normal",
                        fontFamily: "Times New Roman",
                        textDecoration: "",
                        textAlign: "left",
                        fontStyle: "",
                        lineHeight: 1.16,
                        textBackgroundColor: "",
                        stateProperties: s,
                        stroke: null,
                        shadow: null,
                        _fontSizeFraction: .25,
                        _fontSizeMult: 1.13,
                        initialize: function(t, e) {
                            e = e || {}, this.text = t, this.__skipDimension = !0, this.setOptions(e), this.__skipDimension = !1, 
                            this._initDimensions();
                        },
                        _initDimensions: function(t) {
                            this.__skipDimension || (t || (t = e.util.createCanvasElement().getContext("2d"), 
                            this._setTextStyles(t)), this._textLines = this._splitTextIntoLines(), this._clearCache(), 
                            this._cacheLinesWidth = "justify" !== this.textAlign, this.width = this._getTextWidth(t), 
                            this._cacheLinesWidth = !0, this.height = this._getTextHeight(t));
                        },
                        toString: function() {
                            return "#<fabric.Text (" + this.complexity() + '): { "text": "' + this.text + '", "fontFamily": "' + this.fontFamily + '" }>';
                        },
                        _render: function(t) {
                            this.clipTo && e.util.clipContext(this, t), this._setOpacity(t), this._setShadow(t), 
                            this._setupCompositeOperation(t), this._renderTextBackground(t), this._setStrokeStyles(t), 
                            this._setFillStyles(t), this._renderText(t), this._renderTextDecoration(t), this.clipTo && t.restore();
                        },
                        _renderText: function(t) {
                            this._translateForTextAlign(t), this._renderTextFill(t), this._renderTextStroke(t), 
                            this._translateForTextAlign(t, !0);
                        },
                        _translateForTextAlign: function(t, e) {
                            if ("left" !== this.textAlign && "justify" !== this.textAlign) {
                                var i = e ? -1 : 1;
                                t.translate("center" === this.textAlign ? i * this.width / 2 : i * this.width, 0);
                            }
                        },
                        _setTextStyles: function(t) {
                            t.textBaseline = "alphabetic", this.skipTextAlign || (t.textAlign = this.textAlign), 
                            t.font = this._getFontDeclaration();
                        },
                        _getTextHeight: function() {
                            return this._textLines.length * this._getHeightOfLine();
                        },
                        _getTextWidth: function(t) {
                            for (var e = this._getLineWidth(t, 0), i = 1, r = this._textLines.length; i < r; i++) {
                                var n = this._getLineWidth(t, i);
                                n > e && (e = n);
                            }
                            return e;
                        },
                        _renderChars: function(t, e, i, r, n) {
                            var s = t.slice(0, -4);
                            if (this[s].toLive) {
                                var o = -this.width / 2 + this[s].offsetX || 0, a = -this.height / 2 + this[s].offsetY || 0;
                                e.save(), e.translate(o, a), r -= o, n -= a;
                            }
                            e[t](i, r, n), this[s].toLive && e.restore();
                        },
                        _renderTextLine: function(t, e, i, r, n, s) {
                            n -= this.fontSize * this._fontSizeFraction;
                            var o = this._getLineWidth(e, s);
                            if ("justify" !== this.textAlign || this.width < o) this._renderChars(t, e, i, r, n, s); else for (var a, h = i.split(/\s+/), c = 0, l = this._getWidthOfWords(e, i, s, 0), u = this.width - l, f = h.length - 1, d = f > 0 ? u / f : 0, p = 0, g = 0, v = h.length; g < v; g++) {
                                for (;" " === i[c] && c < i.length; ) c++;
                                a = h[g], this._renderChars(t, e, a, r + p, n, s, c), p += this._getWidthOfWords(e, a, s, c) + d, 
                                c += a.length;
                            }
                        },
                        _getWidthOfWords: function(t, e) {
                            return t.measureText(e.replace(/\s+/g, "")).width;
                        },
                        _getLeftOffset: function() {
                            return -this.width / 2;
                        },
                        _getTopOffset: function() {
                            return -this.height / 2;
                        },
                        isEmptyStyles: function() {
                            return !0;
                        },
                        _renderTextFill: function(t) {
                            if (this.fill || !this.isEmptyStyles()) for (var e = 0, i = 0, r = this._textLines.length; i < r; i++) {
                                var n = this._getHeightOfLine(t, i), s = n / this.lineHeight;
                                this._renderTextLine("fillText", t, this._textLines[i], this._getLeftOffset(), this._getTopOffset() + e + s, i), 
                                e += n;
                            }
                        },
                        _renderTextStroke: function(t) {
                            if (this.stroke && 0 !== this.strokeWidth || !this.isEmptyStyles()) {
                                var e = 0;
                                this.shadow && !this.shadow.affectStroke && this._removeShadow(t), t.save(), this.strokeDashArray && (1 & this.strokeDashArray.length && this.strokeDashArray.push.apply(this.strokeDashArray, this.strokeDashArray), 
                                n && t.setLineDash(this.strokeDashArray)), t.beginPath();
                                for (var i = 0, r = this._textLines.length; i < r; i++) {
                                    var s = this._getHeightOfLine(t, i), o = s / this.lineHeight;
                                    this._renderTextLine("strokeText", t, this._textLines[i], this._getLeftOffset(), this._getTopOffset() + e + o, i), 
                                    e += s;
                                }
                                t.closePath(), t.restore();
                            }
                        },
                        _getHeightOfLine: function() {
                            return this.fontSize * this._fontSizeMult * this.lineHeight;
                        },
                        _renderTextBackground: function(t) {
                            this._renderTextBoxBackground(t), this._renderTextLinesBackground(t);
                        },
                        _renderTextBoxBackground: function(t) {
                            this.backgroundColor && (t.fillStyle = this.backgroundColor, t.fillRect(this._getLeftOffset(), this._getTopOffset(), this.width, this.height), 
                            this._removeShadow(t));
                        },
                        _renderTextLinesBackground: function(t) {
                            if (this.textBackgroundColor) {
                                var e, i, r, n = 0;
                                t.fillStyle = this.textBackgroundColor;
                                for (var s = 0, o = this._textLines.length; s < o; s++) e = this._getHeightOfLine(t, s), 
                                "" !== this._textLines[s] && (i = "justify" === this.textAlign ? this.width : this._getLineWidth(t, s), 
                                r = this._getLineLeftOffset(i), t.fillRect(this._getLeftOffset() + r, this._getTopOffset() + n, i, e / this.lineHeight)), 
                                n += e;
                                this._removeShadow(t);
                            }
                        },
                        _getLineLeftOffset: function(t) {
                            return "center" === this.textAlign ? (this.width - t) / 2 : "right" === this.textAlign ? this.width - t : 0;
                        },
                        _clearCache: function() {
                            this.__lineWidths = [], this.__lineHeights = [];
                        },
                        _shouldClearCache: function() {
                            var t = !1;
                            if (this._forceClearCache) return this._forceClearCache = !1, !0;
                            for (var e in this._dimensionAffectingProps) this["__" + e] !== this[e] && (this["__" + e] = this[e], 
                            t = !0);
                            return t;
                        },
                        _getLineWidth: function(t, e) {
                            if (this.__lineWidths[e]) return this.__lineWidths[e];
                            var i, r = this._textLines[e];
                            return i = "" === r ? 0 : "justify" === this.textAlign && this._cacheLinesWidth && r.split(/\s+/).length > 1 ? this.width : t.measureText(r).width, 
                            this._cacheLinesWidth && (this.__lineWidths[e] = i), i;
                        },
                        _renderTextDecoration: function(t) {
                            if (this.textDecoration) {
                                var e = this.height / 2, i = this, r = [];
                                this.textDecoration.indexOf("underline") > -1 && r.push(.85), this.textDecoration.indexOf("line-through") > -1 && r.push(.43), 
                                this.textDecoration.indexOf("overline") > -1 && r.push(-.12), r.length > 0 && function(r) {
                                    var n, s, o, a, h, c, l, u = 0;
                                    for (n = 0, s = i._textLines.length; n < s; n++) {
                                        for (h = i._getLineWidth(t, n), c = i._getLineLeftOffset(h), l = i._getHeightOfLine(t, n), 
                                        o = 0, a = r.length; o < a; o++) t.fillRect(i._getLeftOffset() + c, u + (i._fontSizeMult - 1 + r[o]) * i.fontSize - e, h, i.fontSize / 15);
                                        u += l;
                                    }
                                }(r);
                            }
                        },
                        _getFontDeclaration: function() {
                            return [ e.isLikelyNode ? this.fontWeight : this.fontStyle, e.isLikelyNode ? this.fontStyle : this.fontWeight, this.fontSize + "px", e.isLikelyNode ? '"' + this.fontFamily + '"' : this.fontFamily ].join(" ");
                        },
                        render: function(t, e) {
                            this.visible && (t.save(), this._setTextStyles(t), this._shouldClearCache() && this._initDimensions(t), 
                            e || this.transform(t), this.transformMatrix && t.transform.apply(t, this.transformMatrix), 
                            this.group && "path-group" === this.group.type && t.translate(this.left, this.top), 
                            this._render(t), t.restore());
                        },
                        _splitTextIntoLines: function() {
                            return this.text.split(this._reNewline);
                        },
                        toObject: function(t) {
                            var e = i(this.callSuper("toObject", t), {
                                text: this.text,
                                fontSize: this.fontSize,
                                fontWeight: this.fontWeight,
                                fontFamily: this.fontFamily,
                                fontStyle: this.fontStyle,
                                lineHeight: this.lineHeight,
                                textDecoration: this.textDecoration,
                                textAlign: this.textAlign,
                                textBackgroundColor: this.textBackgroundColor
                            });
                            return this.includeDefaultValues || this._removeDefaultValues(e), e;
                        },
                        _set: function(t, e) {
                            this.callSuper("_set", t, e), t in this._dimensionAffectingProps && (this._initDimensions(), 
                            this.setCoords());
                        },
                        complexity: function() {
                            return 1;
                        }
                    }), e.Text.fromObject = function(t) {
                        return new e.Text(t.text, r(t));
                    }, e.util.createAccessors(e.Text);
                }
            }(exports), clone = fabric.util.object.clone, fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, {
                type: "i-text",
                selectionStart: 0,
                selectionEnd: 0,
                selectionColor: "rgba(17,119,255,0.3)",
                isEditing: !1,
                editable: !0,
                editingBorderColor: "rgba(102,153,255,0.25)",
                cursorWidth: 2,
                cursorColor: "#333",
                cursorDelay: 1e3,
                cursorDuration: 600,
                styles: null,
                caching: !0,
                _reSpace: /\s|\n/,
                _currentCursorOpacity: 0,
                _selectionDirection: null,
                _abortCursorAnimation: !1,
                _charWidthsCache: {},
                __widthOfSpace: [],
                initialize: function(t, e) {
                    this.styles = e && e.styles || {}, this.callSuper("initialize", t, e), this.initBehavior();
                },
                _clearCache: function() {
                    this.callSuper("_clearCache"), this.__widthOfSpace = [];
                },
                isEmptyStyles: function() {
                    if (!this.styles) return !0;
                    var t = this.styles;
                    for (var e in t) for (var i in t[e]) for (var r in t[e][i]) return !1;
                    return !0;
                },
                setSelectionStart: function(t) {
                    t = Math.max(t, 0), this.selectionStart !== t && (this.fire("selection:changed"), 
                    this.canvas && this.canvas.fire("text:selection:changed", {
                        target: this
                    }), this.selectionStart = t), this._updateTextarea();
                },
                setSelectionEnd: function(t) {
                    t = Math.min(t, this.text.length), this.selectionEnd !== t && (this.fire("selection:changed"), 
                    this.canvas && this.canvas.fire("text:selection:changed", {
                        target: this
                    }), this.selectionEnd = t), this._updateTextarea();
                },
                getSelectionStyles: function(t, e) {
                    if (2 === arguments.length) {
                        for (var i = [], r = t; r < e; r++) i.push(this.getSelectionStyles(r));
                        return i;
                    }
                    var n = this.get2DCursorLocation(t);
                    return this._getStyleDeclaration(n.lineIndex, n.charIndex) || {};
                },
                setSelectionStyles: function(t) {
                    if (this.selectionStart === this.selectionEnd) this._extendStyles(this.selectionStart, t); else for (var e = this.selectionStart; e < this.selectionEnd; e++) this._extendStyles(e, t);
                    return this._forceClearCache = !0, this;
                },
                _extendStyles: function(t, e) {
                    var i = this.get2DCursorLocation(t);
                    this._getLineStyle(i.lineIndex) || this._setLineStyle(i.lineIndex, {}), this._getStyleDeclaration(i.lineIndex, i.charIndex) || this._setStyleDeclaration(i.lineIndex, i.charIndex, {}), 
                    fabric.util.object.extend(this._getStyleDeclaration(i.lineIndex, i.charIndex), e);
                },
                _render: function(t) {
                    this.callSuper("_render", t), this.ctx = t, this.isEditing && this.renderCursorOrSelection();
                },
                renderCursorOrSelection: function() {
                    if (this.active) {
                        var t, e, i = this.text.split("");
                        this.canvas.contextTop ? ((e = this.canvas.contextTop).save(), e.transform.apply(e, this.canvas.viewportTransform), 
                        this.transform(e), this.transformMatrix && e.transform.apply(e, this.transformMatrix)) : (e = this.ctx).save(), 
                        this.selectionStart === this.selectionEnd ? (t = this._getCursorBoundaries(i, "cursor"), 
                        this.renderCursor(t, e)) : (t = this._getCursorBoundaries(i, "selection"), this.renderSelection(i, t, e)), 
                        e.restore();
                    }
                },
                get2DCursorLocation: function(t) {
                    void 0 === t && (t = this.selectionStart);
                    for (var e = this._textLines.length, i = 0; i < e; i++) {
                        if (t <= this._textLines[i].length) return {
                            lineIndex: i,
                            charIndex: t
                        };
                        t -= this._textLines[i].length + 1;
                    }
                    return {
                        lineIndex: i - 1,
                        charIndex: this._textLines[i - 1].length < t ? this._textLines[i - 1].length : t
                    };
                },
                getCurrentCharStyle: function(t, e) {
                    var i = this._getStyleDeclaration(t, 0 === e ? 0 : e - 1);
                    return {
                        fontSize: i && i.fontSize || this.fontSize,
                        fill: i && i.fill || this.fill,
                        textBackgroundColor: i && i.textBackgroundColor || this.textBackgroundColor,
                        textDecoration: i && i.textDecoration || this.textDecoration,
                        fontFamily: i && i.fontFamily || this.fontFamily,
                        fontWeight: i && i.fontWeight || this.fontWeight,
                        fontStyle: i && i.fontStyle || this.fontStyle,
                        stroke: i && i.stroke || this.stroke,
                        strokeWidth: i && i.strokeWidth || this.strokeWidth
                    };
                },
                getCurrentCharFontSize: function(t, e) {
                    var i = this._getStyleDeclaration(t, 0 === e ? 0 : e - 1);
                    return i && i.fontSize ? i.fontSize : this.fontSize;
                },
                getCurrentCharColor: function(t, e) {
                    var i = this._getStyleDeclaration(t, 0 === e ? 0 : e - 1);
                    return i && i.fill ? i.fill : this.cursorColor;
                },
                _getCursorBoundaries: function(t, e) {
                    var i = Math.round(this._getLeftOffset()), r = this._getTopOffset(), n = this._getCursorBoundariesOffsets(t, e);
                    return {
                        left: i,
                        top: r,
                        leftOffset: n.left + n.lineLeft,
                        topOffset: n.top
                    };
                },
                _getCursorBoundariesOffsets: function(t, e) {
                    for (var i = 0, r = 0, n = 0, s = 0, o = 0, a = 0; a < this.selectionStart; a++) "\n" === t[a] ? (o = 0, 
                    s += this._getHeightOfLine(this.ctx, r), r++, n = 0) : (o += this._getWidthOfChar(this.ctx, t[a], r, n), 
                    n++), i = this._getLineLeftOffset(this._getLineWidth(this.ctx, r));
                    return "cursor" === e && (s += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, r) / this.lineHeight - this.getCurrentCharFontSize(r, n) * (1 - this._fontSizeFraction)), 
                    {
                        top: s,
                        left: o,
                        lineLeft: i
                    };
                },
                renderCursor: function(t, e) {
                    var i = this.get2DCursorLocation(), r = i.lineIndex, n = i.charIndex, s = this.getCurrentCharFontSize(r, n), o = 0 === r && 0 === n ? this._getLineLeftOffset(this._getLineWidth(e, r)) : t.leftOffset;
                    e.fillStyle = this.getCurrentCharColor(r, n), e.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity, 
                    e.fillRect(t.left + o, t.top + t.topOffset, this.cursorWidth / this.scaleX, s);
                },
                renderSelection: function(t, e, i) {
                    i.fillStyle = this.selectionColor;
                    for (var r = this.get2DCursorLocation(this.selectionStart), n = this.get2DCursorLocation(this.selectionEnd), s = r.lineIndex, o = n.lineIndex, a = s; a <= o; a++) {
                        var h = this._getLineLeftOffset(this._getLineWidth(i, a)) || 0, c = this._getHeightOfLine(this.ctx, a), l = 0, u = this._textLines[a];
                        if (a === s) for (var f = 0, d = u.length; f < d; f++) f >= r.charIndex && (a !== o || f < n.charIndex) && (l += this._getWidthOfChar(i, u[f], a, f)), 
                        f < r.charIndex && (h += this._getWidthOfChar(i, u[f], a, f)); else if (a > s && a < o) l += this._getLineWidth(i, a) || 5; else if (a === o) for (var p = 0, g = n.charIndex; p < g; p++) l += this._getWidthOfChar(i, u[p], a, p);
                        i.fillRect(e.left + h, e.top + e.topOffset, l, c), e.topOffset += c;
                    }
                },
                _renderChars: function(t, e, i, r, n, s, o) {
                    if (this.isEmptyStyles()) return this._renderCharsFast(t, e, i, r, n);
                    o = o || 0, this.skipTextAlign = !0, r -= "center" === this.textAlign ? this.width / 2 : "right" === this.textAlign ? this.width : 0;
                    var a, h, c = this._getHeightOfLine(e, s), l = "";
                    r += this._getLineLeftOffset(this._getLineWidth(e, s)) || 0, e.save(), n -= c / this.lineHeight * this._fontSizeFraction;
                    for (var u = o, f = i.length + o; u <= f; u++) a = a || this.getCurrentCharStyle(s, u), 
                    h = this.getCurrentCharStyle(s, u + 1), (this._hasStyleChanged(a, h) || u === f) && (this._renderChar(t, e, s, u - 1, l, r, n, c), 
                    l = "", a = h), l += i[u - o];
                    e.restore();
                },
                _renderCharsFast: function(t, e, i, r, n) {
                    this.skipTextAlign = !1, "fillText" === t && this.fill && this.callSuper("_renderChars", t, e, i, r, n), 
                    "strokeText" === t && (this.stroke && this.strokeWidth > 0 || this.skipFillStrokeCheck) && this.callSuper("_renderChars", t, e, i, r, n);
                },
                _renderChar: function(t, e, i, r, n, s, o, a) {
                    var h, c, l, u, f, d, p = this._getStyleDeclaration(i, r);
                    p ? (c = this._getHeightOfChar(e, n, i, r), u = p.stroke, l = p.fill, d = p.textDecoration) : c = this.fontSize, 
                    u = (u || this.stroke) && "strokeText" === t, l = (l || this.fill) && "fillText" === t, 
                    p && e.save(), h = this._applyCharStylesGetWidth(e, n, i, r, p || {}), d = d || this.textDecoration, 
                    p && p.textBackgroundColor && this._removeShadow(e), l && e.fillText(n, s, o), u && e.strokeText(n, s, o), 
                    (d || "" !== d) && (f = this._fontSizeFraction * a / this.lineHeight, this._renderCharDecoration(e, d, s, o, f, h, c)), 
                    p && e.restore(), e.translate(h, 0);
                },
                _hasStyleChanged: function(t, e) {
                    return t.fill !== e.fill || t.fontSize !== e.fontSize || t.textBackgroundColor !== e.textBackgroundColor || t.textDecoration !== e.textDecoration || t.fontFamily !== e.fontFamily || t.fontWeight !== e.fontWeight || t.fontStyle !== e.fontStyle || t.stroke !== e.stroke || t.strokeWidth !== e.strokeWidth;
                },
                _renderCharDecoration: function(t, e, i, r, n, s, o) {
                    if (e) {
                        var a, h, c = o / 15, l = {
                            underline: r + o / 10,
                            "line-through": r - o * (this._fontSizeFraction + this._fontSizeMult - 1) + c,
                            overline: r - (this._fontSizeMult - this._fontSizeFraction) * o
                        }, u = [ "underline", "line-through", "overline" ];
                        for (a = 0; a < u.length; a++) h = u[a], e.indexOf(h) > -1 && t.fillRect(i, l[h], s, c);
                    }
                },
                _renderTextLine: function(t, e, i, r, n, s) {
                    this.isEmptyStyles() || (n += this.fontSize * (this._fontSizeFraction + .03)), this.callSuper("_renderTextLine", t, e, i, r, n, s);
                },
                _renderTextDecoration: function(t) {
                    if (this.isEmptyStyles()) return this.callSuper("_renderTextDecoration", t);
                },
                _renderTextLinesBackground: function(t) {
                    this.callSuper("_renderTextLinesBackground", t);
                    for (var e, i, r, n, s, o, a = 0, h = this._getLeftOffset(), c = this._getTopOffset(), l = 0, u = this._textLines.length; l < u; l++) if (e = this._getHeightOfLine(t, l), 
                    "" !== (n = this._textLines[l]) && this.styles && this._getLineStyle(l)) {
                        i = this._getLineWidth(t, l), r = this._getLineLeftOffset(i);
                        for (var f = 0, d = n.length; f < d; f++) (o = this._getStyleDeclaration(l, f)) && o.textBackgroundColor && (s = n[f], 
                        t.fillStyle = o.textBackgroundColor, t.fillRect(h + r + this._getWidthOfCharsAt(t, l, f), c + a, this._getWidthOfChar(t, s, l, f) + 1, e / this.lineHeight));
                        a += e;
                    } else a += e;
                },
                _getCacheProp: function(t, e) {
                    return t + e.fontFamily + e.fontSize + e.fontWeight + e.fontStyle + e.shadow;
                },
                _applyCharStylesGetWidth: function(t, e, i, r, n) {
                    var s, o = this._getStyleDeclaration(i, r), a = n && clone(n) || clone(o);
                    this._applyFontStyles(a);
                    var h = this._getCacheProp(e, a);
                    if (!o && this._charWidthsCache[h] && this.caching) return this._charWidthsCache[h];
                    "string" == typeof a.shadow && (a.shadow = new fabric.Shadow(a.shadow));
                    var c = a.fill || this.fill;
                    return t.fillStyle = c.toLive ? c.toLive(t, this) : c, a.stroke && (t.strokeStyle = a.stroke && a.stroke.toLive ? a.stroke.toLive(t, this) : a.stroke), 
                    t.lineWidth = a.strokeWidth || this.strokeWidth, t.font = this._getFontDeclaration.call(a), 
                    a.shadow && (a.scaleX = this.scaleX, a.scaleY = this.scaleY, a.canvas = this.canvas, 
                    this._setShadow.call(a, t)), this.caching && this._charWidthsCache[h] || (s = t.measureText(e).width, 
                    this.caching && (this._charWidthsCache[h] = s)), this._charWidthsCache[h];
                },
                _applyFontStyles: function(t) {
                    t.fontFamily || (t.fontFamily = this.fontFamily), t.fontSize || (t.fontSize = this.fontSize), 
                    t.fontWeight || (t.fontWeight = this.fontWeight), t.fontStyle || (t.fontStyle = this.fontStyle);
                },
                _getStyleDeclaration: function(t, e, i) {
                    return i ? this.styles[t] && this.styles[t][e] ? clone(this.styles[t][e]) : {} : this.styles[t] && this.styles[t][e] ? this.styles[t][e] : null;
                },
                _setStyleDeclaration: function(t, e, i) {
                    this.styles[t][e] = i;
                },
                _deleteStyleDeclaration: function(t, e) {
                    delete this.styles[t][e];
                },
                _getLineStyle: function(t) {
                    return this.styles[t];
                },
                _setLineStyle: function(t, e) {
                    this.styles[t] = e;
                },
                _deleteLineStyle: function(t) {
                    delete this.styles[t];
                },
                _getWidthOfChar: function(t, e, i, r) {
                    if ("justify" === this.textAlign && this._reSpacesAndTabs.test(e)) return this._getWidthOfSpace(t, i);
                    var n = this._getStyleDeclaration(i, r, !0);
                    this._applyFontStyles(n);
                    var s = this._getCacheProp(e, n);
                    if (this._charWidthsCache[s] && this.caching) return this._charWidthsCache[s];
                    if (t) {
                        t.save();
                        var o = this._applyCharStylesGetWidth(t, e, i, r);
                        return t.restore(), o;
                    }
                },
                _getHeightOfChar: function(t, e, i) {
                    var r = this._getStyleDeclaration(e, i);
                    return r && r.fontSize ? r.fontSize : this.fontSize;
                },
                _getWidthOfCharsAt: function(t, e, i) {
                    var r, n, s = 0;
                    for (r = 0; r < i; r++) n = this._textLines[e][r], s += this._getWidthOfChar(t, n, e, r);
                    return s;
                },
                _getLineWidth: function(t, e) {
                    return this.__lineWidths[e] ? this.__lineWidths[e] : (this.__lineWidths[e] = this._getWidthOfCharsAt(t, e, this._textLines[e].length), 
                    this.__lineWidths[e]);
                },
                _getWidthOfSpace: function(t, e) {
                    if (this.__widthOfSpace[e]) return this.__widthOfSpace[e];
                    var i = this._textLines[e], r = this._getWidthOfWords(t, i, e, 0), n = (this.width - r) / (i.length - i.replace(this._reSpacesAndTabs, "").length);
                    return this.__widthOfSpace[e] = n, n;
                },
                _getWidthOfWords: function(t, e, i, r) {
                    for (var n = 0, s = 0; s < e.length; s++) {
                        var o = e[s];
                        o.match(/\s/) || (n += this._getWidthOfChar(t, o, i, s + r));
                    }
                    return n;
                },
                _getHeightOfLine: function(t, e) {
                    if (this.__lineHeights[e]) return this.__lineHeights[e];
                    for (var i = this._textLines[e], r = this._getHeightOfChar(t, e, 0), n = 1, s = i.length; n < s; n++) {
                        var o = this._getHeightOfChar(t, e, n);
                        o > r && (r = o);
                    }
                    return this.__lineHeights[e] = r * this.lineHeight * this._fontSizeMult, this.__lineHeights[e];
                },
                _getTextHeight: function(t) {
                    for (var e = 0, i = 0, r = this._textLines.length; i < r; i++) e += this._getHeightOfLine(t, i);
                    return e;
                },
                toObject: function(t) {
                    var e, i, r, n = {};
                    for (e in this.styles) for (i in r = this.styles[e], n[e] = {}, r) n[e][i] = clone(r[i]);
                    return fabric.util.object.extend(this.callSuper("toObject", t), {
                        styles: n
                    });
                }
            }), fabric.IText.fromObject = function(t) {
                return new fabric.IText(t.text, clone(t));
            }, function() {
                var t = fabric.util.object.clone;
                fabric.util.object.extend(fabric.IText.prototype, {
                    initBehavior: function() {
                        this.initAddedHandler(), this.initRemovedHandler(), this.initCursorSelectionHandlers(), 
                        this.initDoubleClickSimulation();
                    },
                    initSelectedHandler: function() {
                        this.on("selected", function() {
                            var t = this;
                            setTimeout(function() {
                                t.selected = !0;
                            }, 100);
                        });
                    },
                    initAddedHandler: function() {
                        var t = this;
                        this.on("added", function() {
                            this.canvas && !this.canvas._hasITextHandlers && (this.canvas._hasITextHandlers = !0, 
                            this._initCanvasHandlers()), t.canvas && (t.canvas._iTextInstances = t.canvas._iTextInstances || [], 
                            t.canvas._iTextInstances.push(t));
                        });
                    },
                    initRemovedHandler: function() {
                        var t = this;
                        this.on("removed", function() {
                            t.canvas && (t.canvas._iTextInstances = t.canvas._iTextInstances || [], fabric.util.removeFromArray(t.canvas._iTextInstances, t));
                        });
                    },
                    _initCanvasHandlers: function() {
                        var t = this;
                        this.canvas.on("selection:cleared", function() {
                            fabric.IText.prototype.exitEditingOnOthers(t.canvas);
                        }), this.canvas.on("mouse:up", function() {
                            t.canvas._iTextInstances && t.canvas._iTextInstances.forEach(function(t) {
                                t.__isMousedown = !1;
                            });
                        }), this.canvas.on("object:selected", function() {
                            fabric.IText.prototype.exitEditingOnOthers(t.canvas);
                        });
                    },
                    _tick: function() {
                        this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, "_onTickComplete");
                    },
                    _animateCursor: function(t, e, i, r) {
                        var n;
                        return n = {
                            isAborted: !1,
                            abort: function() {
                                this.isAborted = !0;
                            }
                        }, t.animate("_currentCursorOpacity", e, {
                            duration: i,
                            onComplete: function() {
                                n.isAborted || t[r]();
                            },
                            onChange: function() {
                                t.canvas && (t.canvas.clearContext(t.canvas.contextTop || t.ctx), t.renderCursorOrSelection());
                            },
                            abort: function() {
                                return n.isAborted;
                            }
                        }), n;
                    },
                    _onTickComplete: function() {
                        var t = this;
                        this._cursorTimeout1 && clearTimeout(this._cursorTimeout1), this._cursorTimeout1 = setTimeout(function() {
                            t._currentTickCompleteState = t._animateCursor(t, 0, this.cursorDuration / 2, "_tick");
                        }, 100);
                    },
                    initDelayedCursor: function(t) {
                        var e = this, i = t ? 0 : this.cursorDelay;
                        this._currentTickState && this._currentTickState.abort(), this._currentTickCompleteState && this._currentTickCompleteState.abort(), 
                        clearTimeout(this._cursorTimeout1), this._currentCursorOpacity = 1, this.canvas && (this.canvas.clearContext(this.canvas.contextTop || this.ctx), 
                        this.renderCursorOrSelection()), this._cursorTimeout2 && clearTimeout(this._cursorTimeout2), 
                        this._cursorTimeout2 = setTimeout(function() {
                            e._tick();
                        }, i);
                    },
                    abortCursorAnimation: function() {
                        this._currentTickState && this._currentTickState.abort(), this._currentTickCompleteState && this._currentTickCompleteState.abort(), 
                        clearTimeout(this._cursorTimeout1), clearTimeout(this._cursorTimeout2), this._currentCursorOpacity = 0, 
                        this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);
                    },
                    selectAll: function() {
                        this.setSelectionStart(0), this.setSelectionEnd(this.text.length);
                    },
                    getSelectedText: function() {
                        return this.text.slice(this.selectionStart, this.selectionEnd);
                    },
                    findWordBoundaryLeft: function(t) {
                        var e = 0, i = t - 1;
                        if (this._reSpace.test(this.text.charAt(i))) for (;this._reSpace.test(this.text.charAt(i)); ) e++, 
                        i--;
                        for (;/\S/.test(this.text.charAt(i)) && i > -1; ) e++, i--;
                        return t - e;
                    },
                    findWordBoundaryRight: function(t) {
                        var e = 0, i = t;
                        if (this._reSpace.test(this.text.charAt(i))) for (;this._reSpace.test(this.text.charAt(i)); ) e++, 
                        i++;
                        for (;/\S/.test(this.text.charAt(i)) && i < this.text.length; ) e++, i++;
                        return t + e;
                    },
                    findLineBoundaryLeft: function(t) {
                        for (var e = 0, i = t - 1; !/\n/.test(this.text.charAt(i)) && i > -1; ) e++, i--;
                        return t - e;
                    },
                    findLineBoundaryRight: function(t) {
                        for (var e = 0, i = t; !/\n/.test(this.text.charAt(i)) && i < this.text.length; ) e++, 
                        i++;
                        return t + e;
                    },
                    getNumNewLinesInSelectedText: function() {
                        for (var t = this.getSelectedText(), e = 0, i = 0, r = t.length; i < r; i++) "\n" === t[i] && e++;
                        return e;
                    },
                    searchWordBoundary: function(t, e) {
                        for (var i = this._reSpace.test(this.text.charAt(t)) ? t - 1 : t, r = this.text.charAt(i), n = /[ \n\.,;!\?\-]/; !n.test(r) && i > 0 && i < this.text.length; ) i += e, 
                        r = this.text.charAt(i);
                        return n.test(r) && "\n" !== r && (i += 1 === e ? 0 : 1), i;
                    },
                    selectWord: function(t) {
                        var e = this.searchWordBoundary(t, -1), i = this.searchWordBoundary(t, 1);
                        this.setSelectionStart(e), this.setSelectionEnd(i);
                    },
                    selectLine: function(t) {
                        var e = this.findLineBoundaryLeft(t), i = this.findLineBoundaryRight(t);
                        this.setSelectionStart(e), this.setSelectionEnd(i);
                    },
                    enterEditing: function(t) {
                        if (!this.isEditing && this.editable) return this.canvas && this.exitEditingOnOthers(this.canvas), 
                        this.isEditing = !0, this.initHiddenTextarea(t), this.hiddenTextarea.focus(), this._updateTextarea(), 
                        this._saveEditingProps(), this._setEditingProps(), this._textBeforeEdit = this.text, 
                        this._tick(), this.fire("editing:entered"), this.canvas ? (this.canvas.renderAll(), 
                        this.canvas.fire("text:editing:entered", {
                            target: this
                        }), this.initMouseMoveHandler(), this) : this;
                    },
                    exitEditingOnOthers: function(t) {
                        t._iTextInstances && t._iTextInstances.forEach(function(t) {
                            t.selected = !1, t.isEditing && t.exitEditing();
                        });
                    },
                    initMouseMoveHandler: function() {
                        var t = this;
                        this.canvas.on("mouse:move", function(e) {
                            if (t.__isMousedown && t.isEditing) {
                                var i = t.getSelectionStartFromPointer(e.e);
                                i >= t.__selectionStartOnMouseDown ? (t.setSelectionStart(t.__selectionStartOnMouseDown), 
                                t.setSelectionEnd(i)) : (t.setSelectionStart(i), t.setSelectionEnd(t.__selectionStartOnMouseDown));
                            }
                        });
                    },
                    _setEditingProps: function() {
                        this.hoverCursor = "text", this.canvas && (this.canvas.defaultCursor = this.canvas.moveCursor = "text"), 
                        this.borderColor = this.editingBorderColor, this.hasControls = this.selectable = !1, 
                        this.lockMovementX = this.lockMovementY = !0;
                    },
                    _updateTextarea: function() {
                        if (this.hiddenTextarea && !this.inCompositionMode && (this.hiddenTextarea.value = this.text, 
                        this.hiddenTextarea.selectionStart = this.selectionStart, this.hiddenTextarea.selectionEnd = this.selectionEnd, 
                        this.selectionStart === this.selectionEnd)) {
                            var t = this._calcTextareaPosition();
                            this.hiddenTextarea.style.left = t.x + "px", this.hiddenTextarea.style.top = t.y + "px";
                        }
                    },
                    _calcTextareaPosition: function() {
                        var t = this.text.split(""), e = this._getCursorBoundaries(t, "cursor"), i = this.get2DCursorLocation(), r = i.lineIndex, n = i.charIndex, s = this.getCurrentCharFontSize(r, n), o = 0 === r && 0 === n ? this._getLineLeftOffset(this._getLineWidth(this.ctx, r)) : e.leftOffset, a = this.calcTransformMatrix(), h = {
                            x: e.left + o,
                            y: e.top + e.topOffset + s
                        };
                        return this.hiddenTextarea.style.fontSize = s + "px", fabric.util.transformPoint(h, a);
                    },
                    _saveEditingProps: function() {
                        this._savedProps = {
                            hasControls: this.hasControls,
                            borderColor: this.borderColor,
                            lockMovementX: this.lockMovementX,
                            lockMovementY: this.lockMovementY,
                            hoverCursor: this.hoverCursor,
                            defaultCursor: this.canvas && this.canvas.defaultCursor,
                            moveCursor: this.canvas && this.canvas.moveCursor
                        };
                    },
                    _restoreEditingProps: function() {
                        this._savedProps && (this.hoverCursor = this._savedProps.overCursor, this.hasControls = this._savedProps.hasControls, 
                        this.borderColor = this._savedProps.borderColor, this.lockMovementX = this._savedProps.lockMovementX, 
                        this.lockMovementY = this._savedProps.lockMovementY, this.canvas && (this.canvas.defaultCursor = this._savedProps.defaultCursor, 
                        this.canvas.moveCursor = this._savedProps.moveCursor));
                    },
                    exitEditing: function() {
                        var t = this._textBeforeEdit !== this.text;
                        return this.selected = !1, this.isEditing = !1, this.selectable = !0, this.selectionEnd = this.selectionStart, 
                        this.hiddenTextarea && this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea), 
                        this.hiddenTextarea = null, this.abortCursorAnimation(), this._restoreEditingProps(), 
                        this._currentCursorOpacity = 0, this.fire("editing:exited"), t && this.fire("modified"), 
                        this.canvas && (this.canvas.fire("text:editing:exited", {
                            target: this
                        }), t && this.canvas.fire("object:modified", {
                            target: this
                        })), this;
                    },
                    _removeExtraneousStyles: function() {
                        for (var t in this.styles) this._textLines[t] || delete this.styles[t];
                    },
                    _removeCharsFromTo: function(t, e) {
                        for (;e !== t; ) this._removeSingleCharAndStyle(t + 1), e--;
                        this.setSelectionStart(t);
                    },
                    _removeSingleCharAndStyle: function(t) {
                        var e = "\n" === this.text[t - 1], i = e ? t : t - 1;
                        this.removeStyleObject(e, i), this.text = this.text.slice(0, t - 1) + this.text.slice(t), 
                        this._textLines = this._splitTextIntoLines();
                    },
                    insertChars: function(t, e) {
                        var i;
                        if (this.selectionEnd - this.selectionStart > 1 && (this._removeCharsFromTo(this.selectionStart, this.selectionEnd), 
                        this.setSelectionEnd(this.selectionStart)), e || !this.isEmptyStyles()) for (var r = 0, n = t.length; r < n; r++) e && (i = fabric.copiedTextStyle[r]), 
                        this.insertChar(t[r], r < n - 1, i); else this.insertChar(t, !1);
                    },
                    insertChar: function(t, e, i) {
                        var r = "\n" === this.text[this.selectionStart];
                        this.text = this.text.slice(0, this.selectionStart) + t + this.text.slice(this.selectionEnd), 
                        this._textLines = this._splitTextIntoLines(), this.insertStyleObjects(t, r, i), 
                        this.selectionStart += t.length, this.selectionEnd = this.selectionStart, e || (this._updateTextarea(), 
                        this.canvas && this.canvas.renderAll(), this.setCoords(), this.fire("changed"), 
                        this.canvas && this.canvas.fire("text:changed", {
                            target: this
                        }));
                    },
                    insertNewlineStyleObject: function(e, i, r) {
                        this.shiftLineStyles(e, 1), this.styles[e + 1] || (this.styles[e + 1] = {});
                        var n = {}, s = {};
                        if (this.styles[e] && this.styles[e][i - 1] && (n = this.styles[e][i - 1]), r) s[0] = t(n), 
                        this.styles[e + 1] = s; else {
                            for (var o in this.styles[e]) parseInt(o, 10) >= i && (s[parseInt(o, 10) - i] = this.styles[e][o], 
                            delete this.styles[e][o]);
                            this.styles[e + 1] = s;
                        }
                        this._forceClearCache = !0;
                    },
                    insertCharStyleObject: function(e, i, r) {
                        var n = this.styles[e], s = t(n);
                        for (var o in 0 !== i || r || (i = 1), s) {
                            var a = parseInt(o, 10);
                            a >= i && (n[a + 1] = s[a], s[a - 1] || delete n[a]);
                        }
                        this.styles[e][i] = r || t(n[i - 1]), this._forceClearCache = !0;
                    },
                    insertStyleObjects: function(t, e, i) {
                        var r = this.get2DCursorLocation(), n = r.lineIndex, s = r.charIndex;
                        this._getLineStyle(n) || this._setLineStyle(n, {}), "\n" === t ? this.insertNewlineStyleObject(n, s, e) : this.insertCharStyleObject(n, s, i);
                    },
                    shiftLineStyles: function(e, i) {
                        var r = t(this.styles);
                        for (var n in this.styles) {
                            var s = parseInt(n, 10);
                            s > e && (this.styles[s + i] = r[s], r[s - i] || delete this.styles[s]);
                        }
                    },
                    removeStyleObject: function(t, e) {
                        var i = this.get2DCursorLocation(e), r = i.lineIndex, n = i.charIndex;
                        this._removeStyleObject(t, i, r, n);
                    },
                    _getTextOnPreviousLine: function(t) {
                        return this._textLines[t - 1];
                    },
                    _removeStyleObject: function(e, i, r, n) {
                        if (e) {
                            var s = this._getTextOnPreviousLine(i.lineIndex), o = s ? s.length : 0;
                            for (n in this.styles[r - 1] || (this.styles[r - 1] = {}), this.styles[r]) this.styles[r - 1][parseInt(n, 10) + o] = this.styles[r][n];
                            this.shiftLineStyles(i.lineIndex, -1);
                        } else {
                            var a = this.styles[r];
                            a && delete a[n];
                            var h = t(a);
                            for (var c in h) {
                                var l = parseInt(c, 10);
                                l >= n && 0 !== l && (a[l - 1] = h[l], delete a[l]);
                            }
                        }
                    },
                    insertNewline: function() {
                        this.insertChars("\n");
                    }
                });
            }(), fabric.util.object.extend(fabric.IText.prototype, {
                initDoubleClickSimulation: function() {
                    this.__lastClickTime = +new Date(), this.__lastLastClickTime = +new Date(), this.__lastPointer = {}, 
                    this.on("mousedown", this.onMouseDown.bind(this));
                },
                onMouseDown: function(t) {
                    this.__newClickTime = +new Date();
                    var e = this.canvas.getPointer(t.e);
                    this.isTripleClick(e) ? (this.fire("tripleclick", t), this._stopEvent(t.e)) : this.isDoubleClick(e) && (this.fire("dblclick", t), 
                    this._stopEvent(t.e)), this.__lastLastClickTime = this.__lastClickTime, this.__lastClickTime = this.__newClickTime, 
                    this.__lastPointer = e, this.__lastIsEditing = this.isEditing, this.__lastSelected = this.selected;
                },
                isDoubleClick: function(t) {
                    return this.__newClickTime - this.__lastClickTime < 500 && this.__lastPointer.x === t.x && this.__lastPointer.y === t.y && this.__lastIsEditing;
                },
                isTripleClick: function(t) {
                    return this.__newClickTime - this.__lastClickTime < 500 && this.__lastClickTime - this.__lastLastClickTime < 500 && this.__lastPointer.x === t.x && this.__lastPointer.y === t.y;
                },
                _stopEvent: function(t) {
                    t.preventDefault && t.preventDefault(), t.stopPropagation && t.stopPropagation();
                },
                initCursorSelectionHandlers: function() {
                    this.initSelectedHandler(), this.initMousedownHandler(), this.initMouseupHandler(), 
                    this.initClicks();
                },
                initClicks: function() {
                    this.on("dblclick", function(t) {
                        this.selectWord(this.getSelectionStartFromPointer(t.e));
                    }), this.on("tripleclick", function(t) {
                        this.selectLine(this.getSelectionStartFromPointer(t.e));
                    });
                },
                initMousedownHandler: function() {
                    this.on("mousedown", function(t) {
                        if (this.editable) {
                            var e = this.canvas.getPointer(t.e);
                            this.__mousedownX = e.x, this.__mousedownY = e.y, this.__isMousedown = !0, this.hiddenTextarea && this.canvas && this.canvas.wrapperEl.appendChild(this.hiddenTextarea), 
                            this.selected && this.setCursorByClick(t.e), this.isEditing && (this.__selectionStartOnMouseDown = this.selectionStart, 
                            this.initDelayedCursor(!0));
                        }
                    });
                },
                _isObjectMoved: function(t) {
                    var e = this.canvas.getPointer(t);
                    return this.__mousedownX !== e.x || this.__mousedownY !== e.y;
                },
                initMouseupHandler: function() {
                    this.on("mouseup", function(t) {
                        this.__isMousedown = !1, this.editable && !this._isObjectMoved(t.e) && (this.__lastSelected && !this.__corner && (this.enterEditing(t.e), 
                        this.initDelayedCursor(!0)), this.selected = !0);
                    });
                },
                setCursorByClick: function(t) {
                    var e = this.getSelectionStartFromPointer(t);
                    t.shiftKey ? e < this.selectionStart ? (this.setSelectionEnd(this.selectionStart), 
                    this.setSelectionStart(e)) : this.setSelectionEnd(e) : (this.setSelectionStart(e), 
                    this.setSelectionEnd(e));
                },
                getSelectionStartFromPointer: function(t) {
                    for (var e, i = this.getLocalPointer(t), r = 0, n = 0, s = 0, o = 0, a = 0, h = this._textLines.length; a < h; a++) {
                        e = this._textLines[a], s += this._getHeightOfLine(this.ctx, a) * this.scaleY;
                        var c = this._getLineWidth(this.ctx, a);
                        n = this._getLineLeftOffset(c) * this.scaleX;
                        for (var l = 0, u = e.length; l < u; l++) {
                            if (r = n, n += this._getWidthOfChar(this.ctx, e[l], a, this.flipX ? u - l : l) * this.scaleX, 
                            !(s <= i.y || n <= i.x)) return this._getNewSelectionStartFromOffset(i, r, n, o + a, u);
                            o++;
                        }
                        if (i.y < s) return this._getNewSelectionStartFromOffset(i, r, n, o + a - 1, u);
                    }
                    return this.text.length;
                },
                _getNewSelectionStartFromOffset: function(t, e, i, r, n) {
                    var s = t.x - e, o = r + (i - t.x > s ? 0 : 1);
                    return this.flipX && (o = n - o), o > this.text.length && (o = this.text.length), 
                    o;
                }
            }), fabric.util.object.extend(fabric.IText.prototype, {
                initHiddenTextarea: function(t) {
                    var e;
                    t && this.canvas ? e = this.canvas.getPointer(t) : (this.oCoords || this.setCoords(), 
                    e = this.oCoords.tl), this.hiddenTextarea = fabric.document.createElement("textarea"), 
                    this.hiddenTextarea.setAttribute("autocapitalize", "off"), this.hiddenTextarea.style.cssText = "position: absolute; top: " + e.y + "px; left: " + e.x + "px; opacity: 0; width: 0px; height: 0px; z-index: -999;", 
                    this.canvas ? this.canvas.lowerCanvasEl.parentNode.appendChild(this.hiddenTextarea) : fabric.document.body.appendChild(this.hiddenTextarea), 
                    fabric.util.addListener(this.hiddenTextarea, "keydown", this.onKeyDown.bind(this)), 
                    fabric.util.addListener(this.hiddenTextarea, "keyup", this.onKeyUp.bind(this)), 
                    fabric.util.addListener(this.hiddenTextarea, "input", this.onInput.bind(this)), 
                    fabric.util.addListener(this.hiddenTextarea, "copy", this.copy.bind(this)), fabric.util.addListener(this.hiddenTextarea, "cut", this.cut.bind(this)), 
                    fabric.util.addListener(this.hiddenTextarea, "paste", this.paste.bind(this)), fabric.util.addListener(this.hiddenTextarea, "compositionstart", this.onCompositionStart.bind(this)), 
                    fabric.util.addListener(this.hiddenTextarea, "compositionupdate", this.onCompositionUpdate.bind(this)), 
                    fabric.util.addListener(this.hiddenTextarea, "compositionend", this.onCompositionEnd.bind(this)), 
                    !this._clickHandlerInitialized && this.canvas && (fabric.util.addListener(this.canvas.upperCanvasEl, "click", this.onClick.bind(this)), 
                    this._clickHandlerInitialized = !0);
                },
                _keysMap: {
                    8: "removeChars",
                    9: "exitEditing",
                    27: "exitEditing",
                    13: "insertNewline",
                    33: "moveCursorUp",
                    34: "moveCursorDown",
                    35: "moveCursorRight",
                    36: "moveCursorLeft",
                    37: "moveCursorLeft",
                    38: "moveCursorUp",
                    39: "moveCursorRight",
                    40: "moveCursorDown",
                    46: "forwardDelete"
                },
                _ctrlKeysMap: {
                    65: "selectAll",
                    67: "copy",
                    88: "cut"
                },
                onClick: function() {
                    this.hiddenTextarea && this.hiddenTextarea.focus();
                },
                onKeyDown: function(t) {
                    this.isEditing && t.keyCode in this._keysMap && (this[this._keysMap[t.keyCode]](t), 
                    t.stopImmediatePropagation(), t.preventDefault(), this.canvas && this.canvas.renderAll());
                },
                onKeyUp: function(t) {
                    this.isEditing && !this._copyDone ? t.keyCode in this._ctrlKeysMap && (t.ctrlKey || t.metaKey) && (this[this._ctrlKeysMap[t.keyCode]](t), 
                    t.stopImmediatePropagation(), t.preventDefault(), this.canvas && this.canvas.renderAll()) : this._copyDone = !1;
                },
                onInput: function(t) {
                    if (this.isEditing && !this.inCompositionMode) {
                        var e, i, r, n = this.selectionStart || 0, s = this.selectionEnd || 0, o = this.text.length, a = this.hiddenTextarea.value.length;
                        a > o ? (r = "left" === this._selectionDirection ? s : n, e = a - o, i = this.hiddenTextarea.value.slice(r, r + e)) : (e = a - o + s - n, 
                        i = this.hiddenTextarea.value.slice(n, n + e)), this.insertChars(i), t.stopPropagation();
                    }
                },
                onCompositionStart: function() {
                    this.inCompositionMode = !0, this.prevCompositionLength = 0, this.compositionStart = this.selectionStart;
                },
                onCompositionEnd: function() {
                    this.inCompositionMode = !1;
                },
                onCompositionUpdate: function(t) {
                    var e = t.data;
                    this.selectionStart = this.compositionStart, this.selectionEnd = this.selectionEnd === this.selectionStart ? this.compositionStart + this.prevCompositionLength : this.selectionEnd, 
                    this.insertChars(e, !1), this.prevCompositionLength = e.length;
                },
                forwardDelete: function(t) {
                    if (this.selectionStart === this.selectionEnd) {
                        if (this.selectionStart === this.text.length) return;
                        this.moveCursorRight(t);
                    }
                    this.removeChars(t);
                },
                copy: function(t) {
                    if (this.selectionStart !== this.selectionEnd) {
                        var e = this.getSelectedText(), i = this._getClipboardData(t);
                        i && i.setData("text", e), fabric.copiedText = e, fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd), 
                        t.stopImmediatePropagation(), t.preventDefault(), this._copyDone = !0;
                    }
                },
                paste: function(t) {
                    var e = null, i = this._getClipboardData(t), r = !0;
                    i ? (e = i.getData("text").replace(/\r/g, ""), fabric.copiedTextStyle && fabric.copiedText === e || (r = !1)) : e = fabric.copiedText, 
                    e && this.insertChars(e, r), t.stopImmediatePropagation(), t.preventDefault();
                },
                cut: function(t) {
                    this.selectionStart !== this.selectionEnd && (this.copy(t), this.removeChars(t));
                },
                _getClipboardData: function(t) {
                    return t && t.clipboardData || fabric.window.clipboardData;
                },
                getDownCursorOffset: function(t, e) {
                    var i, r = e ? this.selectionEnd : this.selectionStart, n = this.get2DCursorLocation(r), s = n.lineIndex, o = this._textLines[s].slice(0, n.charIndex), a = this._textLines[s].slice(n.charIndex), h = this._textLines[s + 1] || "";
                    if (s === this._textLines.length - 1 || t.metaKey || 34 === t.keyCode) return this.text.length - r;
                    for (var c = this._getLineWidth(this.ctx, s), l = this._getLineLeftOffset(c), u = 0, f = o.length; u < f; u++) i = o[u], 
                    l += this._getWidthOfChar(this.ctx, i, s, u);
                    var d = this._getIndexOnNextLine(n, h, l);
                    return a.length + 1 + d;
                },
                _getIndexOnNextLine: function(t, e, i) {
                    for (var r, n = t.lineIndex + 1, s = this._getLineWidth(this.ctx, n), o = this._getLineLeftOffset(s), a = 0, h = 0, c = e.length; h < c; h++) {
                        var l = e[h], u = this._getWidthOfChar(this.ctx, l, n, h);
                        if ((o += u) > i) {
                            r = !0;
                            var f = o - u, d = o, p = Math.abs(f - i);
                            a = Math.abs(d - i) < p ? h + 1 : h;
                            break;
                        }
                    }
                    return r || (a = e.length), a;
                },
                moveCursorDown: function(t) {
                    this.abortCursorAnimation(), this._currentCursorOpacity = 1;
                    var e = this.getDownCursorOffset(t, "right" === this._selectionDirection);
                    t.shiftKey ? this.moveCursorDownWithShift(e) : this.moveCursorDownWithoutShift(e), 
                    this.initDelayedCursor();
                },
                moveCursorDownWithoutShift: function(t) {
                    this._selectionDirection = "right", this.setSelectionStart(this.selectionStart + t), 
                    this.setSelectionEnd(this.selectionStart);
                },
                swapSelectionPoints: function() {
                    var t = this.selectionEnd;
                    this.setSelectionEnd(this.selectionStart), this.setSelectionStart(t);
                },
                moveCursorDownWithShift: function(t) {
                    this.selectionEnd === this.selectionStart && (this._selectionDirection = "right"), 
                    "right" === this._selectionDirection ? this.setSelectionEnd(this.selectionEnd + t) : this.setSelectionStart(this.selectionStart + t), 
                    this.selectionEnd < this.selectionStart && "left" === this._selectionDirection && (this.swapSelectionPoints(), 
                    this._selectionDirection = "right"), this.selectionEnd > this.text.length && this.setSelectionEnd(this.text.length);
                },
                getUpCursorOffset: function(t, e) {
                    var i = e ? this.selectionEnd : this.selectionStart, r = this.get2DCursorLocation(i), n = r.lineIndex;
                    if (0 === n || t.metaKey || 33 === t.keyCode) return i;
                    for (var s, o = this._textLines[n].slice(0, r.charIndex), a = this._textLines[n - 1] || "", h = this._getLineWidth(this.ctx, r.lineIndex), c = this._getLineLeftOffset(h), l = 0, u = o.length; l < u; l++) s = o[l], 
                    c += this._getWidthOfChar(this.ctx, s, n, l);
                    var f = this._getIndexOnPrevLine(r, a, c);
                    return a.length - f + o.length;
                },
                _getIndexOnPrevLine: function(t, e, i) {
                    for (var r, n = t.lineIndex - 1, s = this._getLineWidth(this.ctx, n), o = this._getLineLeftOffset(s), a = 0, h = 0, c = e.length; h < c; h++) {
                        var l = e[h], u = this._getWidthOfChar(this.ctx, l, n, h);
                        if ((o += u) > i) {
                            r = !0;
                            var f = o - u, d = o, p = Math.abs(f - i);
                            a = Math.abs(d - i) < p ? h : h - 1;
                            break;
                        }
                    }
                    return r || (a = e.length - 1), a;
                },
                moveCursorUp: function(t) {
                    this.abortCursorAnimation(), this._currentCursorOpacity = 1;
                    var e = this.getUpCursorOffset(t, "right" === this._selectionDirection);
                    t.shiftKey ? this.moveCursorUpWithShift(e) : this.moveCursorUpWithoutShift(e), this.initDelayedCursor();
                },
                moveCursorUpWithShift: function(t) {
                    this.selectionEnd === this.selectionStart && (this._selectionDirection = "left"), 
                    "right" === this._selectionDirection ? this.setSelectionEnd(this.selectionEnd - t) : this.setSelectionStart(this.selectionStart - t), 
                    this.selectionEnd < this.selectionStart && "right" === this._selectionDirection && (this.swapSelectionPoints(), 
                    this._selectionDirection = "left");
                },
                moveCursorUpWithoutShift: function(t) {
                    this.selectionStart === this.selectionEnd && this.setSelectionStart(this.selectionStart - t), 
                    this.setSelectionEnd(this.selectionStart), this._selectionDirection = "left";
                },
                moveCursorLeft: function(t) {
                    0 === this.selectionStart && 0 === this.selectionEnd || (this.abortCursorAnimation(), 
                    this._currentCursorOpacity = 1, t.shiftKey ? this.moveCursorLeftWithShift(t) : this.moveCursorLeftWithoutShift(t), 
                    this.initDelayedCursor());
                },
                _move: function(t, e, i) {
                    var r = "selectionStart" === e ? "setSelectionStart" : "setSelectionEnd";
                    t.altKey ? this[r](this["findWordBoundary" + i](this[e])) : t.metaKey || 35 === t.keyCode || 36 === t.keyCode ? this[r](this["findLineBoundary" + i](this[e])) : this[r](this[e] + ("Left" === i ? -1 : 1));
                },
                _moveLeft: function(t, e) {
                    this._move(t, e, "Left");
                },
                _moveRight: function(t, e) {
                    this._move(t, e, "Right");
                },
                moveCursorLeftWithoutShift: function(t) {
                    this._selectionDirection = "left", this.selectionEnd === this.selectionStart && this._moveLeft(t, "selectionStart"), 
                    this.setSelectionEnd(this.selectionStart);
                },
                moveCursorLeftWithShift: function(t) {
                    "right" === this._selectionDirection && this.selectionStart !== this.selectionEnd ? this._moveLeft(t, "selectionEnd") : (this._selectionDirection = "left", 
                    this._moveLeft(t, "selectionStart"));
                },
                moveCursorRight: function(t) {
                    this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length || (this.abortCursorAnimation(), 
                    this._currentCursorOpacity = 1, t.shiftKey ? this.moveCursorRightWithShift(t) : this.moveCursorRightWithoutShift(t), 
                    this.initDelayedCursor());
                },
                moveCursorRightWithShift: function(t) {
                    "left" === this._selectionDirection && this.selectionStart !== this.selectionEnd ? this._moveRight(t, "selectionStart") : (this._selectionDirection = "right", 
                    this._moveRight(t, "selectionEnd"));
                },
                moveCursorRightWithoutShift: function(t) {
                    this._selectionDirection = "right", this.selectionStart === this.selectionEnd ? (this._moveRight(t, "selectionStart"), 
                    this.setSelectionEnd(this.selectionStart)) : (this.setSelectionEnd(this.selectionEnd + this.getNumNewLinesInSelectedText()), 
                    this.setSelectionStart(this.selectionEnd));
                },
                removeChars: function(t) {
                    this.selectionStart === this.selectionEnd ? this._removeCharsNearCursor(t) : this._removeCharsFromTo(this.selectionStart, this.selectionEnd), 
                    this.setSelectionEnd(this.selectionStart), this._removeExtraneousStyles(), this.canvas && this.canvas.renderAll(), 
                    this.setCoords(), this.fire("changed"), this.canvas && this.canvas.fire("text:changed", {
                        target: this
                    });
                },
                _removeCharsNearCursor: function(t) {
                    if (0 !== this.selectionStart) if (t.metaKey) {
                        var e = this.findLineBoundaryLeft(this.selectionStart);
                        this._removeCharsFromTo(e, this.selectionStart), this.setSelectionStart(e);
                    } else if (t.altKey) {
                        var i = this.findWordBoundaryLeft(this.selectionStart);
                        this._removeCharsFromTo(i, this.selectionStart), this.setSelectionStart(i);
                    } else this._removeSingleCharAndStyle(this.selectionStart), this.setSelectionStart(this.selectionStart - 1);
                }
            }), function(t) {
                "use strict";
                var e = t.fabric || (t.fabric = {}), i = e.util.object.clone;
                e.Textbox = e.util.createClass(e.IText, e.Observable, {
                    type: "textbox",
                    minWidth: 20,
                    dynamicMinWidth: 0,
                    __cachedLines: null,
                    initialize: function(t, i) {
                        this.ctx = e.util.createCanvasElement().getContext("2d"), this.callSuper("initialize", t, i), 
                        this.set({
                            lockUniScaling: !1,
                            lockScalingY: !0,
                            lockScalingFlip: !0,
                            hasBorders: !0
                        }), this.setControlsVisibility(e.Textbox.getTextboxControlVisibility()), this._dimensionAffectingProps.width = !0;
                    },
                    _initDimensions: function(t) {
                        this.__skipDimension || (t || (t = e.util.createCanvasElement().getContext("2d"), 
                        this._setTextStyles(t)), this.dynamicMinWidth = 0, this._textLines = this._splitTextIntoLines(), 
                        this.dynamicMinWidth > this.width && this._set("width", this.dynamicMinWidth), this._clearCache(), 
                        this.height = this._getTextHeight(t));
                    },
                    _generateStyleMap: function() {
                        for (var t = 0, e = 0, i = 0, r = {}, n = 0; n < this._textLines.length; n++) "\n" === this.text[i] ? (e = 0, 
                        i++, t++) : " " === this.text[i] && (e++, i++), r[n] = {
                            line: t,
                            offset: e
                        }, i += this._textLines[n].length, e += this._textLines[n].length;
                        return r;
                    },
                    _getStyleDeclaration: function(t, e, i) {
                        if (this._styleMap) {
                            var r = this._styleMap[t];
                            if (!r) return i ? {} : null;
                            t = r.line, e = r.offset + e;
                        }
                        return this.callSuper("_getStyleDeclaration", t, e, i);
                    },
                    _setStyleDeclaration: function(t, e, i) {
                        var r = this._styleMap[t];
                        t = r.line, e = r.offset + e, this.styles[t][e] = i;
                    },
                    _deleteStyleDeclaration: function(t, e) {
                        var i = this._styleMap[t];
                        t = i.line, e = i.offset + e, delete this.styles[t][e];
                    },
                    _getLineStyle: function(t) {
                        var e = this._styleMap[t];
                        return this.styles[e.line];
                    },
                    _setLineStyle: function(t, e) {
                        var i = this._styleMap[t];
                        this.styles[i.line] = e;
                    },
                    _deleteLineStyle: function(t) {
                        var e = this._styleMap[t];
                        delete this.styles[e.line];
                    },
                    _wrapText: function(t, e) {
                        var i, r = e.split(this._reNewline), n = [];
                        for (i = 0; i < r.length; i++) n = n.concat(this._wrapLine(t, r[i], i));
                        return n;
                    },
                    _measureText: function(t, e, i, r) {
                        var n = 0;
                        r = r || 0;
                        for (var s = 0, o = e.length; s < o; s++) n += this._getWidthOfChar(t, e[s], i, s + r);
                        return n;
                    },
                    _wrapLine: function(t, e, i) {
                        for (var r = 0, n = [], s = "", o = e.split(" "), a = "", h = 0, c = 0, l = 0, u = 0, f = !0, d = 0; d < o.length; d++) a = o[d], 
                        c = this._measureText(t, a, i, h), h += a.length, (r += l + c) >= this.width && !f && (n.push(s), 
                        s = "", r = c, f = !0), f || (s += " "), s += a, l = this._measureText(t, " ", i, h), 
                        h++, f = !1, c > u && (u = c);
                        return d && n.push(s), u > this.dynamicMinWidth && (this.dynamicMinWidth = u), n;
                    },
                    _splitTextIntoLines: function() {
                        var t = this.textAlign;
                        this.ctx.save(), this._setTextStyles(this.ctx), this.textAlign = "left";
                        var e = this._wrapText(this.ctx, this.text);
                        return this.textAlign = t, this.ctx.restore(), this._textLines = e, this._styleMap = this._generateStyleMap(), 
                        e;
                    },
                    setOnGroup: function(t, e) {
                        "scaleX" === t && (this.set("scaleX", Math.abs(1 / e)), this.set("width", this.get("width") * e / (void 0 === this.__oldScaleX ? 1 : this.__oldScaleX)), 
                        this.__oldScaleX = e);
                    },
                    get2DCursorLocation: function(t) {
                        void 0 === t && (t = this.selectionStart);
                        for (var e = this._textLines.length, i = 0, r = 0; r < e; r++) {
                            var n = this._textLines[r].length;
                            if (t <= i + n) return {
                                lineIndex: r,
                                charIndex: t - i
                            };
                            i += n, "\n" !== this.text[i] && " " !== this.text[i] || i++;
                        }
                        return {
                            lineIndex: e - 1,
                            charIndex: this._textLines[e - 1].length
                        };
                    },
                    _getCursorBoundariesOffsets: function(t, e) {
                        for (var i = 0, r = 0, n = this.get2DCursorLocation(), s = this._textLines[n.lineIndex].split(""), o = this._getLineLeftOffset(this._getLineWidth(this.ctx, n.lineIndex)), a = 0; a < n.charIndex; a++) r += this._getWidthOfChar(this.ctx, s[a], n.lineIndex, a);
                        for (a = 0; a < n.lineIndex; a++) i += this._getHeightOfLine(this.ctx, a);
                        return "cursor" === e && (i += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, n.lineIndex) / this.lineHeight - this.getCurrentCharFontSize(n.lineIndex, n.charIndex) * (1 - this._fontSizeFraction)), 
                        {
                            top: i,
                            left: r,
                            lineLeft: o
                        };
                    },
                    getMinWidth: function() {
                        return Math.max(this.minWidth, this.dynamicMinWidth);
                    },
                    toObject: function(t) {
                        return e.util.object.extend(this.callSuper("toObject", t), {
                            minWidth: this.minWidth
                        });
                    }
                }), e.Textbox.fromObject = function(t) {
                    return new e.Textbox(t.text, i(t));
                }, e.Textbox.getTextboxControlVisibility = function() {
                    return {
                        tl: !1,
                        tr: !1,
                        br: !1,
                        bl: !1,
                        ml: !0,
                        mt: !1,
                        mr: !0,
                        mb: !1,
                        mtr: !0
                    };
                }, e.Textbox.instances = [];
            }(exports), function() {
                var t = fabric.Canvas.prototype._setObjectScale;
                fabric.Canvas.prototype._setObjectScale = function(e, i, r, n, s, o, a) {
                    var h = i.target;
                    if (!(h instanceof fabric.Textbox)) return t.call(fabric.Canvas.prototype, e, i, r, n, s, o, a);
                    var c = h.width * (e.x / i.scaleX / (h.width + h.strokeWidth));
                    return c >= h.getMinWidth() ? (h.set("width", c), !0) : void 0;
                }, fabric.Group.prototype._refreshControlsVisibility = function() {
                    if (void 0 !== fabric.Textbox) for (var t = this._objects.length; t--; ) if (this._objects[t] instanceof fabric.Textbox) return void this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());
                };
                var e = fabric.util.object.clone;
                fabric.util.object.extend(fabric.Textbox.prototype, {
                    _removeExtraneousStyles: function() {
                        for (var t in this._styleMap) this._textLines[t] || delete this.styles[this._styleMap[t].line];
                    },
                    insertCharStyleObject: function(t, e, i) {
                        var r = this._styleMap[t];
                        t = r.line, e = r.offset + e, fabric.IText.prototype.insertCharStyleObject.apply(this, [ t, e, i ]);
                    },
                    insertNewlineStyleObject: function(t, e, i) {
                        var r = this._styleMap[t];
                        t = r.line, e = r.offset + e, fabric.IText.prototype.insertNewlineStyleObject.apply(this, [ t, e, i ]);
                    },
                    shiftLineStyles: function(t, i) {
                        var r = e(this.styles), n = this._styleMap[t];
                        for (var s in t = n.line, this.styles) {
                            var o = parseInt(s, 10);
                            o > t && (this.styles[o + i] = r[o], r[o - i] || delete this.styles[o]);
                        }
                    },
                    _getTextOnPreviousLine: function(t) {
                        for (var e = this._textLines[t - 1]; this._styleMap[t - 2] && this._styleMap[t - 2].line === this._styleMap[t - 1].line; ) e = this._textLines[t - 2] + e, 
                        t--;
                        return e;
                    },
                    removeStyleObject: function(t, e) {
                        var i = this.get2DCursorLocation(e), r = this._styleMap[i.lineIndex], n = r.line, s = r.offset + i.charIndex;
                        this._removeStyleObject(t, i, n, s);
                    }
                });
            }(), override = fabric.IText.prototype._getNewSelectionStartFromOffset, fabric.IText.prototype._getNewSelectionStartFromOffset = function(t, e, i, r, n) {
                r = override.call(this, t, e, i, r, n);
                for (var s = 0, o = 0, a = 0; a < this._textLines.length && !((s += this._textLines[a].length) + o >= r); a++) "\n" !== this.text[s + o] && " " !== this.text[s + o] || o++;
                return r - a + o;
            }, function() {
                if ("undefined" == typeof document || "undefined" == typeof window) {
                    var DOMParser = __webpack_require__(1002).DOMParser, URL = __webpack_require__(1003), HTTP = __webpack_require__(1186), HTTPS = __webpack_require__(1414), Canvas = __webpack_require__(794), Image = __webpack_require__(794).Image;
                    fabric.util.loadImage = function(t, e, i) {
                        function r(r) {
                            r ? (n.src = new Buffer(r, "binary"), n._src = t, e && e.call(i, n)) : (n = null, 
                            e && e.call(i, null, !0));
                        }
                        var n = new Image();
                        t && (t instanceof Buffer || 0 === t.indexOf("data")) ? (n.src = n._src = t, e && e.call(i, n)) : t && 0 !== t.indexOf("http") ? requestFs(t, r) : t ? request(t, "binary", r) : e && e.call(i, t);
                    }, fabric.loadSVGFromURL = function(t, e, i) {
                        0 !== (t = t.replace(/^\n\s*/, "").replace(/\?.*$/, "").trim()).indexOf("http") ? requestFs(t, function(t) {
                            fabric.loadSVGFromString(t.toString(), e, i);
                        }) : request(t, "", function(t) {
                            fabric.loadSVGFromString(t, e, i);
                        });
                    }, fabric.loadSVGFromString = function(t, e, i) {
                        var r = new DOMParser().parseFromString(t);
                        fabric.parseSVGDocument(r.documentElement, function(t, i) {
                            e && e(t, i);
                        }, i);
                    }, fabric.util.getScript = function(url, callback) {
                        request(url, "", function(body) {
                            eval(body), callback && callback();
                        });
                    }, fabric.Image.fromObject = function(t, e) {
                        fabric.util.loadImage(t.src, function(i) {
                            var r = new fabric.Image(i);
                            r._initConfig(t), r._initFilters(t.filters, function(i) {
                                r.filters = i || [], r._initFilters(t.resizeFilters, function(t) {
                                    r.resizeFilters = t || [], e && e(r);
                                });
                            });
                        });
                    }, fabric.createCanvasForNode = function(t, e, i, r) {
                        r = r || i;
                        var n = fabric.document.createElement("canvas"), s = new Canvas(t || 600, e || 600, r);
                        n.style = {}, n.width = s.width, n.height = s.height;
                        var o = new (fabric.Canvas || fabric.StaticCanvas)(n, i);
                        return o.contextContainer = s.getContext("2d"), o.nodeCanvas = s, o.Font = Canvas.Font, 
                        o;
                    }, fabric.StaticCanvas.prototype.createPNGStream = function() {
                        return this.nodeCanvas.createPNGStream();
                    }, fabric.StaticCanvas.prototype.createJPEGStream = function(t) {
                        return this.nodeCanvas.createJPEGStream(t);
                    };
                    var origSetWidth = fabric.StaticCanvas.prototype.setWidth;
                    fabric.StaticCanvas.prototype.setWidth = function(t, e) {
                        return origSetWidth.call(this, t, e), this.nodeCanvas.width = t, this;
                    }, fabric.Canvas && (fabric.Canvas.prototype.setWidth = fabric.StaticCanvas.prototype.setWidth);
                    var origSetHeight = fabric.StaticCanvas.prototype.setHeight;
                    fabric.StaticCanvas.prototype.setHeight = function(t, e) {
                        return origSetHeight.call(this, t, e), this.nodeCanvas.height = t, this;
                    }, fabric.Canvas && (fabric.Canvas.prototype.setHeight = fabric.StaticCanvas.prototype.setHeight);
                }
                function request(t, e, i) {
                    var r = URL.parse(t);
                    r.port || (r.port = 0 === r.protocol.indexOf("https:") ? 443 : 80);
                    var n = (0 === r.protocol.indexOf("https:") ? HTTPS : HTTP).request({
                        hostname: r.hostname,
                        port: r.port,
                        path: r.path,
                        method: "GET"
                    }, function(t) {
                        var r = "";
                        e && t.setEncoding(e), t.on("end", function() {
                            i(r);
                        }), t.on("data", function(e) {
                            200 === t.statusCode && (r += e);
                        });
                    });
                    n.on("error", function(t) {
                        t.errno === process.ECONNREFUSED ? fabric.log("ECONNREFUSED: connection refused to " + r.hostname + ":" + r.port) : fabric.log(t.message), 
                        i(null);
                    }), n.end();
                }
                function requestFs(t, e) {
                    __webpack_require__(1005).readFile(t, function(t, i) {
                        if (t) throw fabric.log(t), t;
                        e(i);
                    });
                }
            }();
        }).call(this, __webpack_require__(119).Buffer, __webpack_require__(532));
    },
    1186: function(t, e, i) {
        (function(t) {
            var r = i(1407), n = i(1189), s = i(1412), o = i(1413), a = i(1003), h = e;
            h.request = function(e, i) {
                e = "string" == typeof e ? a.parse(e) : s(e);
                var n = -1 === t.location.protocol.search(/^https?:$/) ? "http:" : "", o = e.protocol || n, h = e.hostname || e.host, c = e.port, l = e.path || "/";
                h && -1 !== h.indexOf(":") && (h = "[" + h + "]"), e.url = (h ? o + "//" + h : "") + (c ? ":" + c : "") + l, 
                e.method = (e.method || "GET").toUpperCase(), e.headers = e.headers || {};
                var u = new r(e);
                return i && u.on("response", i), u;
            }, h.get = function(t, e) {
                var i = h.request(t, e);
                return i.end(), i;
            }, h.ClientRequest = r, h.IncomingMessage = n, h.Agent = function() {}, h.Agent.defaultMaxSockets = 4, 
            h.STATUS_CODES = o, h.METHODS = [ "CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LOCK", "M-SEARCH", "MERGE", "MKACTIVITY", "MKCOL", "MOVE", "NOTIFY", "OPTIONS", "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "REPORT", "SEARCH", "SUBSCRIBE", "TRACE", "UNLOCK", "UNSUBSCRIBE" ];
        }).call(this, i(23));
    },
    1187: function(t, e, i) {
        (function(t) {
            e.fetch = a(t.fetch) && a(t.ReadableStream), e.writableStream = a(t.WritableStream), 
            e.abortController = a(t.AbortController), e.blobConstructor = !1;
            try {
                new Blob([ new ArrayBuffer(1) ]), e.blobConstructor = !0;
            } catch (t) {}
            var i;
            function r() {
                if (void 0 !== i) return i;
                if (t.XMLHttpRequest) {
                    i = new t.XMLHttpRequest();
                    try {
                        i.open("GET", t.XDomainRequest ? "/" : "https://example.com");
                    } catch (t) {
                        i = null;
                    }
                } else i = null;
                return i;
            }
            function n(t) {
                var e = r();
                if (!e) return !1;
                try {
                    return e.responseType = t, e.responseType === t;
                } catch (t) {}
                return !1;
            }
            var s = void 0 !== t.ArrayBuffer, o = s && a(t.ArrayBuffer.prototype.slice);
            function a(t) {
                return "function" == typeof t;
            }
            e.arraybuffer = e.fetch || s && n("arraybuffer"), e.msstream = !e.fetch && o && n("ms-stream"), 
            e.mozchunkedarraybuffer = !e.fetch && s && n("moz-chunked-arraybuffer"), e.overrideMimeType = e.fetch || !!r() && a(r().overrideMimeType), 
            e.vbArray = a(t.VBArray), i = null;
        }).call(this, i(23));
    },
    1188: function(t, e) {
        "function" == typeof Object.create ? t.exports = function(t, e) {
            t.super_ = e, t.prototype = Object.create(e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            });
        } : t.exports = function(t, e) {
            t.super_ = e;
            var i = function() {};
            i.prototype = e.prototype, t.prototype = new i(), t.prototype.constructor = t;
        };
    },
    1189: function(t, e, i) {
        (function(t, r, n) {
            var s = i(1187), o = i(1188), a = i(1190), h = e.readyStates = {
                UNSENT: 0,
                OPENED: 1,
                HEADERS_RECEIVED: 2,
                LOADING: 3,
                DONE: 4
            }, c = e.IncomingMessage = function(e, i, n) {
                var o = this;
                if (a.Readable.call(o), o._mode = n, o.headers = {}, o.rawHeaders = [], o.trailers = {}, 
                o.rawTrailers = [], o.on("end", function() {
                    t.nextTick(function() {
                        o.emit("close");
                    });
                }), "fetch" === n) {
                    if (o._fetchResponse = i, o.url = i.url, o.statusCode = i.status, o.statusMessage = i.statusText, 
                    i.headers.forEach(function(t, e) {
                        o.headers[e.toLowerCase()] = t, o.rawHeaders.push(e, t);
                    }), s.writableStream) {
                        var h = new WritableStream({
                            write: function(t) {
                                return new Promise(function(e, i) {
                                    o._destroyed || (o.push(new r(t)) ? e() : o._resumeFetch = e);
                                });
                            },
                            close: function() {
                                o._destroyed || o.push(null);
                            },
                            abort: function(t) {
                                o._destroyed || o.emit("error", t);
                            }
                        });
                        try {
                            return void i.body.pipeTo(h);
                        } catch (t) {}
                    }
                    var c = i.body.getReader();
                    !function t() {
                        c.read().then(function(e) {
                            o._destroyed || (e.done ? o.push(null) : (o.push(new r(e.value)), t()));
                        }).catch(function(t) {
                            o._destroyed || o.emit("error", t);
                        });
                    }();
                } else {
                    if (o._xhr = e, o._pos = 0, o.url = e.responseURL, o.statusCode = e.status, o.statusMessage = e.statusText, 
                    e.getAllResponseHeaders().split(/\r?\n/).forEach(function(t) {
                        var e = t.match(/^([^:]+):\s*(.*)/);
                        if (e) {
                            var i = e[1].toLowerCase();
                            "set-cookie" === i ? (void 0 === o.headers[i] && (o.headers[i] = []), o.headers[i].push(e[2])) : void 0 !== o.headers[i] ? o.headers[i] += ", " + e[2] : o.headers[i] = e[2], 
                            o.rawHeaders.push(e[1], e[2]);
                        }
                    }), o._charset = "x-user-defined", !s.overrideMimeType) {
                        var l = o.rawHeaders["mime-type"];
                        if (l) {
                            var u = l.match(/;\s*charset=([^;])(;|$)/);
                            u && (o._charset = u[1].toLowerCase());
                        }
                        o._charset || (o._charset = "utf-8");
                    }
                }
            };
            o(c, a.Readable), c.prototype._read = function() {
                var t = this._resumeFetch;
                t && (this._resumeFetch = null, t());
            }, c.prototype._onXHRProgress = function() {
                var t = this, e = t._xhr, i = null;
                switch (t._mode) {
                  case "text:vbarray":
                    if (e.readyState !== h.DONE) break;
                    try {
                        i = new n.VBArray(e.responseBody).toArray();
                    } catch (t) {}
                    if (null !== i) {
                        t.push(new r(i));
                        break;
                    }

                  case "text":
                    try {
                        i = e.responseText;
                    } catch (e) {
                        t._mode = "text:vbarray";
                        break;
                    }
                    if (i.length > t._pos) {
                        var s = i.substr(t._pos);
                        if ("x-user-defined" === t._charset) {
                            for (var o = new r(s.length), a = 0; a < s.length; a++) o[a] = 255 & s.charCodeAt(a);
                            t.push(o);
                        } else t.push(s, t._charset);
                        t._pos = i.length;
                    }
                    break;

                  case "arraybuffer":
                    if (e.readyState !== h.DONE || !e.response) break;
                    i = e.response, t.push(new r(new Uint8Array(i)));
                    break;

                  case "moz-chunked-arraybuffer":
                    if (i = e.response, e.readyState !== h.LOADING || !i) break;
                    t.push(new r(new Uint8Array(i)));
                    break;

                  case "ms-stream":
                    if (i = e.response, e.readyState !== h.LOADING) break;
                    var c = new n.MSStreamReader();
                    c.onprogress = function() {
                        c.result.byteLength > t._pos && (t.push(new r(new Uint8Array(c.result.slice(t._pos)))), 
                        t._pos = c.result.byteLength);
                    }, c.onload = function() {
                        t.push(null);
                    }, c.readAsArrayBuffer(i);
                }
                t._xhr.readyState === h.DONE && "ms-stream" !== t._mode && t.push(null);
            };
        }).call(this, i(532), i(119).Buffer, i(23));
    },
    1190: function(t, e, i) {
        (e = t.exports = i(1191)).Stream = e, e.Readable = e, e.Writable = i(1195), e.Duplex = i(661), 
        e.Transform = i(1197), e.PassThrough = i(1410);
    },
    1191: function(t, e, i) {
        "use strict";
        (function(e, r) {
            var n = i(836);
            t.exports = m;
            var s, o = i(120);
            m.ReadableState = _;
            i(1192).EventEmitter;
            var a = function(t, e) {
                return t.listeners(e).length;
            }, h = i(1193), c = i(837).Buffer, l = e.Uint8Array || function() {};
            var u = i(795);
            u.inherits = i(796);
            var f = i(1004), d = void 0;
            d = f && f.debuglog ? f.debuglog("stream") : function() {};
            var p, g = i(1408), v = i(1194);
            u.inherits(m, h);
            var b = [ "error", "close", "destroy", "pause", "resume" ];
            function _(t, e) {
                s = s || i(661), t = t || {}, this.objectMode = !!t.objectMode, e instanceof s && (this.objectMode = this.objectMode || !!t.readableObjectMode);
                var r = t.highWaterMark, n = this.objectMode ? 16 : 16384;
                this.highWaterMark = r || 0 === r ? r : n, this.highWaterMark = Math.floor(this.highWaterMark), 
                this.buffer = new g(), this.length = 0, this.pipes = null, this.pipesCount = 0, 
                this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, 
                this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, 
                this.resumeScheduled = !1, this.destroyed = !1, this.defaultEncoding = t.defaultEncoding || "utf8", 
                this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, 
                t.encoding && (p || (p = i(1196).StringDecoder), this.decoder = new p(t.encoding), 
                this.encoding = t.encoding);
            }
            function m(t) {
                if (s = s || i(661), !(this instanceof m)) return new m(t);
                this._readableState = new _(t, this), this.readable = !0, t && ("function" == typeof t.read && (this._read = t.read), 
                "function" == typeof t.destroy && (this._destroy = t.destroy)), h.call(this);
            }
            function y(t, e, i, r, n) {
                var s, o = t._readableState;
                null === e ? (o.reading = !1, function(t, e) {
                    if (e.ended) return;
                    if (e.decoder) {
                        var i = e.decoder.end();
                        i && i.length && (e.buffer.push(i), e.length += e.objectMode ? 1 : i.length);
                    }
                    e.ended = !0, S(t);
                }(t, o)) : (n || (s = function(t, e) {
                    var i;
                    r = e, c.isBuffer(r) || r instanceof l || "string" == typeof e || void 0 === e || t.objectMode || (i = new TypeError("Invalid non-string/buffer chunk"));
                    var r;
                    return i;
                }(o, e)), s ? t.emit("error", s) : o.objectMode || e && e.length > 0 ? ("string" == typeof e || o.objectMode || Object.getPrototypeOf(e) === c.prototype || (e = function(t) {
                    return c.from(t);
                }(e)), r ? o.endEmitted ? t.emit("error", new Error("stream.unshift() after end event")) : x(t, o, e, !0) : o.ended ? t.emit("error", new Error("stream.push() after EOF")) : (o.reading = !1, 
                o.decoder && !i ? (e = o.decoder.write(e), o.objectMode || 0 !== e.length ? x(t, o, e, !1) : T(t, o)) : x(t, o, e, !1))) : r || (o.reading = !1));
                return function(t) {
                    return !t.ended && (t.needReadable || t.length < t.highWaterMark || 0 === t.length);
                }(o);
            }
            function x(t, e, i, r) {
                e.flowing && 0 === e.length && !e.sync ? (t.emit("data", i), t.read(0)) : (e.length += e.objectMode ? 1 : i.length, 
                r ? e.buffer.unshift(i) : e.buffer.push(i), e.needReadable && S(t)), T(t, e);
            }
            Object.defineProperty(m.prototype, "destroyed", {
                get: function() {
                    return void 0 !== this._readableState && this._readableState.destroyed;
                },
                set: function(t) {
                    this._readableState && (this._readableState.destroyed = t);
                }
            }), m.prototype.destroy = v.destroy, m.prototype._undestroy = v.undestroy, m.prototype._destroy = function(t, e) {
                this.push(null), e(t);
            }, m.prototype.push = function(t, e) {
                var i, r = this._readableState;
                return r.objectMode ? i = !0 : "string" == typeof t && ((e = e || r.defaultEncoding) !== r.encoding && (t = c.from(t, e), 
                e = ""), i = !0), y(this, t, e, !1, i);
            }, m.prototype.unshift = function(t) {
                return y(this, t, null, !0, !1);
            }, m.prototype.isPaused = function() {
                return !1 === this._readableState.flowing;
            }, m.prototype.setEncoding = function(t) {
                return p || (p = i(1196).StringDecoder), this._readableState.decoder = new p(t), 
                this._readableState.encoding = t, this;
            };
            var C = 8388608;
            function w(t, e) {
                return t <= 0 || 0 === e.length && e.ended ? 0 : e.objectMode ? 1 : t != t ? e.flowing && e.length ? e.buffer.head.data.length : e.length : (t > e.highWaterMark && (e.highWaterMark = function(t) {
                    return t >= C ? t = C : (t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, 
                    t |= t >>> 16, t++), t;
                }(t)), t <= e.length ? t : e.ended ? e.length : (e.needReadable = !0, 0));
            }
            function S(t) {
                var e = t._readableState;
                e.needReadable = !1, e.emittedReadable || (d("emitReadable", e.flowing), e.emittedReadable = !0, 
                e.sync ? n(O, t) : O(t));
            }
            function O(t) {
                d("emit readable"), t.emit("readable"), E(t);
            }
            function T(t, e) {
                e.readingMore || (e.readingMore = !0, n(k, t, e));
            }
            function k(t, e) {
                for (var i = e.length; !e.reading && !e.flowing && !e.ended && e.length < e.highWaterMark && (d("maybeReadMore read 0"), 
                t.read(0), i !== e.length); ) i = e.length;
                e.readingMore = !1;
            }
            function j(t) {
                d("readable nexttick read 0"), t.read(0);
            }
            function L(t, e) {
                e.reading || (d("resume read 0"), t.read(0)), e.resumeScheduled = !1, e.awaitDrain = 0, 
                t.emit("resume"), E(t), e.flowing && !e.reading && t.read(0);
            }
            function E(t) {
                var e = t._readableState;
                for (d("flow", e.flowing); e.flowing && null !== t.read(); ) ;
            }
            function P(t, e) {
                return 0 === e.length ? null : (e.objectMode ? i = e.buffer.shift() : !t || t >= e.length ? (i = e.decoder ? e.buffer.join("") : 1 === e.buffer.length ? e.buffer.head.data : e.buffer.concat(e.length), 
                e.buffer.clear()) : i = function(t, e, i) {
                    var r;
                    t < e.head.data.length ? (r = e.head.data.slice(0, t), e.head.data = e.head.data.slice(t)) : r = t === e.head.data.length ? e.shift() : i ? function(t, e) {
                        var i = e.head, r = 1, n = i.data;
                        t -= n.length;
                        for (;i = i.next; ) {
                            var s = i.data, o = t > s.length ? s.length : t;
                            if (o === s.length ? n += s : n += s.slice(0, t), 0 === (t -= o)) {
                                o === s.length ? (++r, i.next ? e.head = i.next : e.head = e.tail = null) : (e.head = i, 
                                i.data = s.slice(o));
                                break;
                            }
                            ++r;
                        }
                        return e.length -= r, n;
                    }(t, e) : function(t, e) {
                        var i = c.allocUnsafe(t), r = e.head, n = 1;
                        r.data.copy(i), t -= r.data.length;
                        for (;r = r.next; ) {
                            var s = r.data, o = t > s.length ? s.length : t;
                            if (s.copy(i, i.length - t, 0, o), 0 === (t -= o)) {
                                o === s.length ? (++n, r.next ? e.head = r.next : e.head = e.tail = null) : (e.head = r, 
                                r.data = s.slice(o));
                                break;
                            }
                            ++n;
                        }
                        return e.length -= n, i;
                    }(t, e);
                    return r;
                }(t, e.buffer, e.decoder), i);
                var i;
            }
            function M(t) {
                var e = t._readableState;
                if (e.length > 0) throw new Error('"endReadable()" called on non-empty stream');
                e.endEmitted || (e.ended = !0, n(A, e, t));
            }
            function A(t, e) {
                t.endEmitted || 0 !== t.length || (t.endEmitted = !0, e.readable = !1, e.emit("end"));
            }
            function D(t, e) {
                for (var i = 0, r = t.length; i < r; i++) if (t[i] === e) return i;
                return -1;
            }
            m.prototype.read = function(t) {
                d("read", t), t = parseInt(t, 10);
                var e = this._readableState, i = t;
                if (0 !== t && (e.emittedReadable = !1), 0 === t && e.needReadable && (e.length >= e.highWaterMark || e.ended)) return d("read: emitReadable", e.length, e.ended), 
                0 === e.length && e.ended ? M(this) : S(this), null;
                if (0 === (t = w(t, e)) && e.ended) return 0 === e.length && M(this), null;
                var r, n = e.needReadable;
                return d("need readable", n), (0 === e.length || e.length - t < e.highWaterMark) && d("length less than watermark", n = !0), 
                e.ended || e.reading ? d("reading or ended", n = !1) : n && (d("do read"), e.reading = !0, 
                e.sync = !0, 0 === e.length && (e.needReadable = !0), this._read(e.highWaterMark), 
                e.sync = !1, e.reading || (t = w(i, e))), null === (r = t > 0 ? P(t, e) : null) ? (e.needReadable = !0, 
                t = 0) : e.length -= t, 0 === e.length && (e.ended || (e.needReadable = !0), i !== t && e.ended && M(this)), 
                null !== r && this.emit("data", r), r;
            }, m.prototype._read = function(t) {
                this.emit("error", new Error("_read() is not implemented"));
            }, m.prototype.pipe = function(t, e) {
                var i = this, s = this._readableState;
                switch (s.pipesCount) {
                  case 0:
                    s.pipes = t;
                    break;

                  case 1:
                    s.pipes = [ s.pipes, t ];
                    break;

                  default:
                    s.pipes.push(t);
                }
                s.pipesCount += 1, d("pipe count=%d opts=%j", s.pipesCount, e);
                var h = (!e || !1 !== e.end) && t !== r.stdout && t !== r.stderr ? l : m;
                function c(e, r) {
                    d("onunpipe"), e === i && r && !1 === r.hasUnpiped && (r.hasUnpiped = !0, d("cleanup"), 
                    t.removeListener("close", b), t.removeListener("finish", _), t.removeListener("drain", u), 
                    t.removeListener("error", v), t.removeListener("unpipe", c), i.removeListener("end", l), 
                    i.removeListener("end", m), i.removeListener("data", g), f = !0, !s.awaitDrain || t._writableState && !t._writableState.needDrain || u());
                }
                function l() {
                    d("onend"), t.end();
                }
                s.endEmitted ? n(h) : i.once("end", h), t.on("unpipe", c);
                var u = function(t) {
                    return function() {
                        var e = t._readableState;
                        d("pipeOnDrain", e.awaitDrain), e.awaitDrain && e.awaitDrain--, 0 === e.awaitDrain && a(t, "data") && (e.flowing = !0, 
                        E(t));
                    };
                }(i);
                t.on("drain", u);
                var f = !1;
                var p = !1;
                function g(e) {
                    d("ondata"), p = !1, !1 !== t.write(e) || p || ((1 === s.pipesCount && s.pipes === t || s.pipesCount > 1 && -1 !== D(s.pipes, t)) && !f && (d("false write response, pause", i._readableState.awaitDrain), 
                    i._readableState.awaitDrain++, p = !0), i.pause());
                }
                function v(e) {
                    d("onerror", e), m(), t.removeListener("error", v), 0 === a(t, "error") && t.emit("error", e);
                }
                function b() {
                    t.removeListener("finish", _), m();
                }
                function _() {
                    d("onfinish"), t.removeListener("close", b), m();
                }
                function m() {
                    d("unpipe"), i.unpipe(t);
                }
                return i.on("data", g), function(t, e, i) {
                    if ("function" == typeof t.prependListener) return t.prependListener(e, i);
                    t._events && t._events[e] ? o(t._events[e]) ? t._events[e].unshift(i) : t._events[e] = [ i, t._events[e] ] : t.on(e, i);
                }(t, "error", v), t.once("close", b), t.once("finish", _), t.emit("pipe", i), s.flowing || (d("pipe resume"), 
                i.resume()), t;
            }, m.prototype.unpipe = function(t) {
                var e = this._readableState, i = {
                    hasUnpiped: !1
                };
                if (0 === e.pipesCount) return this;
                if (1 === e.pipesCount) return t && t !== e.pipes ? this : (t || (t = e.pipes), 
                e.pipes = null, e.pipesCount = 0, e.flowing = !1, t && t.emit("unpipe", this, i), 
                this);
                if (!t) {
                    var r = e.pipes, n = e.pipesCount;
                    e.pipes = null, e.pipesCount = 0, e.flowing = !1;
                    for (var s = 0; s < n; s++) r[s].emit("unpipe", this, i);
                    return this;
                }
                var o = D(e.pipes, t);
                return -1 === o ? this : (e.pipes.splice(o, 1), e.pipesCount -= 1, 1 === e.pipesCount && (e.pipes = e.pipes[0]), 
                t.emit("unpipe", this, i), this);
            }, m.prototype.on = function(t, e) {
                var i = h.prototype.on.call(this, t, e);
                if ("data" === t) !1 !== this._readableState.flowing && this.resume(); else if ("readable" === t) {
                    var r = this._readableState;
                    r.endEmitted || r.readableListening || (r.readableListening = r.needReadable = !0, 
                    r.emittedReadable = !1, r.reading ? r.length && S(this) : n(j, this));
                }
                return i;
            }, m.prototype.addListener = m.prototype.on, m.prototype.resume = function() {
                var t = this._readableState;
                return t.flowing || (d("resume"), t.flowing = !0, function(t, e) {
                    e.resumeScheduled || (e.resumeScheduled = !0, n(L, t, e));
                }(this, t)), this;
            }, m.prototype.pause = function() {
                return d("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (d("pause"), 
                this._readableState.flowing = !1, this.emit("pause")), this;
            }, m.prototype.wrap = function(t) {
                var e = this._readableState, i = !1, r = this;
                for (var n in t.on("end", function() {
                    if (d("wrapped end"), e.decoder && !e.ended) {
                        var t = e.decoder.end();
                        t && t.length && r.push(t);
                    }
                    r.push(null);
                }), t.on("data", function(n) {
                    (d("wrapped data"), e.decoder && (n = e.decoder.write(n)), !e.objectMode || null !== n && void 0 !== n) && ((e.objectMode || n && n.length) && (r.push(n) || (i = !0, 
                    t.pause())));
                }), t) void 0 === this[n] && "function" == typeof t[n] && (this[n] = function(e) {
                    return function() {
                        return t[e].apply(t, arguments);
                    };
                }(n));
                for (var s = 0; s < b.length; s++) t.on(b[s], r.emit.bind(r, b[s]));
                return r._read = function(e) {
                    d("wrapped _read", e), i && (i = !1, t.resume());
                }, r;
            }, m._fromList = P;
        }).call(this, i(23), i(532));
    },
    1192: function(t, e) {
        function i() {
            this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0;
        }
        function r(t) {
            return "function" == typeof t;
        }
        function n(t) {
            return "object" == typeof t && null !== t;
        }
        function s(t) {
            return void 0 === t;
        }
        t.exports = i, i.EventEmitter = i, i.prototype._events = void 0, i.prototype._maxListeners = void 0, 
        i.defaultMaxListeners = 10, i.prototype.setMaxListeners = function(t) {
            if ("number" != typeof t || t < 0 || isNaN(t)) throw TypeError("n must be a positive number");
            return this._maxListeners = t, this;
        }, i.prototype.emit = function(t) {
            var e, i, o, a, h, c;
            if (this._events || (this._events = {}), "error" === t && (!this._events.error || n(this._events.error) && !this._events.error.length)) {
                if ((e = arguments[1]) instanceof Error) throw e;
                var l = new Error('Uncaught, unspecified "error" event. (' + e + ")");
                throw l.context = e, l;
            }
            if (s(i = this._events[t])) return !1;
            if (r(i)) switch (arguments.length) {
              case 1:
                i.call(this);
                break;

              case 2:
                i.call(this, arguments[1]);
                break;

              case 3:
                i.call(this, arguments[1], arguments[2]);
                break;

              default:
                a = Array.prototype.slice.call(arguments, 1), i.apply(this, a);
            } else if (n(i)) for (a = Array.prototype.slice.call(arguments, 1), o = (c = i.slice()).length, 
            h = 0; h < o; h++) c[h].apply(this, a);
            return !0;
        }, i.prototype.addListener = function(t, e) {
            var o;
            if (!r(e)) throw TypeError("listener must be a function");
            return this._events || (this._events = {}), this._events.newListener && this.emit("newListener", t, r(e.listener) ? e.listener : e), 
            this._events[t] ? n(this._events[t]) ? this._events[t].push(e) : this._events[t] = [ this._events[t], e ] : this._events[t] = e, 
            n(this._events[t]) && !this._events[t].warned && (o = s(this._maxListeners) ? i.defaultMaxListeners : this._maxListeners) && o > 0 && this._events[t].length > o && (this._events[t].warned = !0, 
            console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[t].length), 
            "function" == typeof console.trace && console.trace()), this;
        }, i.prototype.on = i.prototype.addListener, i.prototype.once = function(t, e) {
            if (!r(e)) throw TypeError("listener must be a function");
            var i = !1;
            function n() {
                this.removeListener(t, n), i || (i = !0, e.apply(this, arguments));
            }
            return n.listener = e, this.on(t, n), this;
        }, i.prototype.removeListener = function(t, e) {
            var i, s, o, a;
            if (!r(e)) throw TypeError("listener must be a function");
            if (!this._events || !this._events[t]) return this;
            if (o = (i = this._events[t]).length, s = -1, i === e || r(i.listener) && i.listener === e) delete this._events[t], 
            this._events.removeListener && this.emit("removeListener", t, e); else if (n(i)) {
                for (a = o; a-- > 0; ) if (i[a] === e || i[a].listener && i[a].listener === e) {
                    s = a;
                    break;
                }
                if (s < 0) return this;
                1 === i.length ? (i.length = 0, delete this._events[t]) : i.splice(s, 1), this._events.removeListener && this.emit("removeListener", t, e);
            }
            return this;
        }, i.prototype.removeAllListeners = function(t) {
            var e, i;
            if (!this._events) return this;
            if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[t] && delete this._events[t], 
            this;
            if (0 === arguments.length) {
                for (e in this._events) "removeListener" !== e && this.removeAllListeners(e);
                return this.removeAllListeners("removeListener"), this._events = {}, this;
            }
            if (r(i = this._events[t])) this.removeListener(t, i); else if (i) for (;i.length; ) this.removeListener(t, i[i.length - 1]);
            return delete this._events[t], this;
        }, i.prototype.listeners = function(t) {
            return this._events && this._events[t] ? r(this._events[t]) ? [ this._events[t] ] : this._events[t].slice() : [];
        }, i.prototype.listenerCount = function(t) {
            if (this._events) {
                var e = this._events[t];
                if (r(e)) return 1;
                if (e) return e.length;
            }
            return 0;
        }, i.listenerCount = function(t, e) {
            return t.listenerCount(e);
        };
    },
    1193: function(t, e, i) {
        t.exports = i(1192).EventEmitter;
    },
    1194: function(t, e, i) {
        "use strict";
        var r = i(836);
        function n(t, e) {
            t.emit("error", e);
        }
        t.exports = {
            destroy: function(t, e) {
                var i = this, s = this._readableState && this._readableState.destroyed, o = this._writableState && this._writableState.destroyed;
                s || o ? e ? e(t) : !t || this._writableState && this._writableState.errorEmitted || r(n, this, t) : (this._readableState && (this._readableState.destroyed = !0), 
                this._writableState && (this._writableState.destroyed = !0), this._destroy(t || null, function(t) {
                    !e && t ? (r(n, i, t), i._writableState && (i._writableState.errorEmitted = !0)) : e && e(t);
                }));
            },
            undestroy: function() {
                this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, 
                this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, 
                this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finished = !1, 
                this._writableState.errorEmitted = !1);
            }
        };
    },
    1195: function(t, e, i) {
        "use strict";
        (function(e, r, n) {
            var s = i(836);
            function o(t) {
                var e = this;
                this.next = null, this.entry = null, this.finish = function() {
                    !function(t, e, i) {
                        var r = t.entry;
                        t.entry = null;
                        for (;r; ) {
                            var n = r.callback;
                            e.pendingcb--, n(i), r = r.next;
                        }
                        e.corkedRequestsFree ? e.corkedRequestsFree.next = t : e.corkedRequestsFree = t;
                    }(e, t);
                };
            }
            t.exports = _;
            var a, h = !e.browser && [ "v0.10", "v0.9." ].indexOf(e.version.slice(0, 5)) > -1 ? r : s;
            _.WritableState = b;
            var c = i(795);
            c.inherits = i(796);
            var l = {
                deprecate: i(1409)
            }, u = i(1193), f = i(837).Buffer, d = n.Uint8Array || function() {};
            var p, g = i(1194);
            function v() {}
            function b(t, e) {
                a = a || i(661), t = t || {}, this.objectMode = !!t.objectMode, e instanceof a && (this.objectMode = this.objectMode || !!t.writableObjectMode);
                var r = t.highWaterMark, n = this.objectMode ? 16 : 16384;
                this.highWaterMark = r || 0 === r ? r : n, this.highWaterMark = Math.floor(this.highWaterMark), 
                this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, 
                this.destroyed = !1;
                var c = !1 === t.decodeStrings;
                this.decodeStrings = !c, this.defaultEncoding = t.defaultEncoding || "utf8", this.length = 0, 
                this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, 
                this.onwrite = function(t) {
                    !function(t, e) {
                        var i = t._writableState, r = i.sync, n = i.writecb;
                        if (function(t) {
                            t.writing = !1, t.writecb = null, t.length -= t.writelen, t.writelen = 0;
                        }(i), e) !function(t, e, i, r, n) {
                            --e.pendingcb, i ? (s(n, r), s(S, t, e), t._writableState.errorEmitted = !0, t.emit("error", r)) : (n(r), 
                            t._writableState.errorEmitted = !0, t.emit("error", r), S(t, e));
                        }(t, i, r, e, n); else {
                            var o = C(i);
                            o || i.corked || i.bufferProcessing || !i.bufferedRequest || x(t, i), r ? h(y, t, i, o, n) : y(t, i, o, n);
                        }
                    }(e, t);
                }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, 
                this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.bufferedRequestCount = 0, 
                this.corkedRequestsFree = new o(this);
            }
            function _(t) {
                if (a = a || i(661), !(p.call(_, this) || this instanceof a)) return new _(t);
                this._writableState = new b(t, this), this.writable = !0, t && ("function" == typeof t.write && (this._write = t.write), 
                "function" == typeof t.writev && (this._writev = t.writev), "function" == typeof t.destroy && (this._destroy = t.destroy), 
                "function" == typeof t.final && (this._final = t.final)), u.call(this);
            }
            function m(t, e, i, r, n, s, o) {
                e.writelen = r, e.writecb = o, e.writing = !0, e.sync = !0, i ? t._writev(n, e.onwrite) : t._write(n, s, e.onwrite), 
                e.sync = !1;
            }
            function y(t, e, i, r) {
                i || function(t, e) {
                    0 === e.length && e.needDrain && (e.needDrain = !1, t.emit("drain"));
                }(t, e), e.pendingcb--, r(), S(t, e);
            }
            function x(t, e) {
                e.bufferProcessing = !0;
                var i = e.bufferedRequest;
                if (t._writev && i && i.next) {
                    var r = e.bufferedRequestCount, n = new Array(r), s = e.corkedRequestsFree;
                    s.entry = i;
                    for (var a = 0, h = !0; i; ) n[a] = i, i.isBuf || (h = !1), i = i.next, a += 1;
                    n.allBuffers = h, m(t, e, !0, e.length, n, "", s.finish), e.pendingcb++, e.lastBufferedRequest = null, 
                    s.next ? (e.corkedRequestsFree = s.next, s.next = null) : e.corkedRequestsFree = new o(e);
                } else {
                    for (;i; ) {
                        var c = i.chunk, l = i.encoding, u = i.callback;
                        if (m(t, e, !1, e.objectMode ? 1 : c.length, c, l, u), i = i.next, e.writing) break;
                    }
                    null === i && (e.lastBufferedRequest = null);
                }
                e.bufferedRequestCount = 0, e.bufferedRequest = i, e.bufferProcessing = !1;
            }
            function C(t) {
                return t.ending && 0 === t.length && null === t.bufferedRequest && !t.finished && !t.writing;
            }
            function w(t, e) {
                t._final(function(i) {
                    e.pendingcb--, i && t.emit("error", i), e.prefinished = !0, t.emit("prefinish"), 
                    S(t, e);
                });
            }
            function S(t, e) {
                var i = C(e);
                return i && (!function(t, e) {
                    e.prefinished || e.finalCalled || ("function" == typeof t._final ? (e.pendingcb++, 
                    e.finalCalled = !0, s(w, t, e)) : (e.prefinished = !0, t.emit("prefinish")));
                }(t, e), 0 === e.pendingcb && (e.finished = !0, t.emit("finish"))), i;
            }
            c.inherits(_, u), b.prototype.getBuffer = function() {
                for (var t = this.bufferedRequest, e = []; t; ) e.push(t), t = t.next;
                return e;
            }, function() {
                try {
                    Object.defineProperty(b.prototype, "buffer", {
                        get: l.deprecate(function() {
                            return this.getBuffer();
                        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                    });
                } catch (t) {}
            }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (p = Function.prototype[Symbol.hasInstance], 
            Object.defineProperty(_, Symbol.hasInstance, {
                value: function(t) {
                    return !!p.call(this, t) || t && t._writableState instanceof b;
                }
            })) : p = function(t) {
                return t instanceof this;
            }, _.prototype.pipe = function() {
                this.emit("error", new Error("Cannot pipe, not readable"));
            }, _.prototype.write = function(t, e, i) {
                var r, n = this._writableState, o = !1, a = (r = t, (f.isBuffer(r) || r instanceof d) && !n.objectMode);
                return a && !f.isBuffer(t) && (t = function(t) {
                    return f.from(t);
                }(t)), "function" == typeof e && (i = e, e = null), a ? e = "buffer" : e || (e = n.defaultEncoding), 
                "function" != typeof i && (i = v), n.ended ? function(t, e) {
                    var i = new Error("write after end");
                    t.emit("error", i), s(e, i);
                }(this, i) : (a || function(t, e, i, r) {
                    var n = !0, o = !1;
                    return null === i ? o = new TypeError("May not write null values to stream") : "string" == typeof i || void 0 === i || e.objectMode || (o = new TypeError("Invalid non-string/buffer chunk")), 
                    o && (t.emit("error", o), s(r, o), n = !1), n;
                }(this, n, t, i)) && (n.pendingcb++, o = function(t, e, i, r, n, s) {
                    if (!i) {
                        var o = function(t, e, i) {
                            t.objectMode || !1 === t.decodeStrings || "string" != typeof e || (e = f.from(e, i));
                            return e;
                        }(e, r, n);
                        r !== o && (i = !0, n = "buffer", r = o);
                    }
                    var a = e.objectMode ? 1 : r.length;
                    e.length += a;
                    var h = e.length < e.highWaterMark;
                    h || (e.needDrain = !0);
                    if (e.writing || e.corked) {
                        var c = e.lastBufferedRequest;
                        e.lastBufferedRequest = {
                            chunk: r,
                            encoding: n,
                            isBuf: i,
                            callback: s,
                            next: null
                        }, c ? c.next = e.lastBufferedRequest : e.bufferedRequest = e.lastBufferedRequest, 
                        e.bufferedRequestCount += 1;
                    } else m(t, e, !1, a, r, n, s);
                    return h;
                }(this, n, a, t, e, i)), o;
            }, _.prototype.cork = function() {
                this._writableState.corked++;
            }, _.prototype.uncork = function() {
                var t = this._writableState;
                t.corked && (t.corked--, t.writing || t.corked || t.finished || t.bufferProcessing || !t.bufferedRequest || x(this, t));
            }, _.prototype.setDefaultEncoding = function(t) {
                if ("string" == typeof t && (t = t.toLowerCase()), !([ "hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw" ].indexOf((t + "").toLowerCase()) > -1)) throw new TypeError("Unknown encoding: " + t);
                return this._writableState.defaultEncoding = t, this;
            }, _.prototype._write = function(t, e, i) {
                i(new Error("_write() is not implemented"));
            }, _.prototype._writev = null, _.prototype.end = function(t, e, i) {
                var r = this._writableState;
                "function" == typeof t ? (i = t, t = null, e = null) : "function" == typeof e && (i = e, 
                e = null), null !== t && void 0 !== t && this.write(t, e), r.corked && (r.corked = 1, 
                this.uncork()), r.ending || r.finished || function(t, e, i) {
                    e.ending = !0, S(t, e), i && (e.finished ? s(i) : t.once("finish", i));
                    e.ended = !0, t.writable = !1;
                }(this, r, i);
            }, Object.defineProperty(_.prototype, "destroyed", {
                get: function() {
                    return void 0 !== this._writableState && this._writableState.destroyed;
                },
                set: function(t) {
                    this._writableState && (this._writableState.destroyed = t);
                }
            }), _.prototype.destroy = g.destroy, _.prototype._undestroy = g.undestroy, _.prototype._destroy = function(t, e) {
                this.end(), e(t);
            };
        }).call(this, i(532), i(838).setImmediate, i(23));
    },
    1196: function(t, e, i) {
        "use strict";
        var r = i(837).Buffer, n = r.isEncoding || function(t) {
            switch ((t = "" + t) && t.toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
              case "raw":
                return !0;

              default:
                return !1;
            }
        };
        function s(t) {
            var e;
            switch (this.encoding = function(t) {
                var e = function(t) {
                    if (!t) return "utf8";
                    for (var e; ;) switch (t) {
                      case "utf8":
                      case "utf-8":
                        return "utf8";

                      case "ucs2":
                      case "ucs-2":
                      case "utf16le":
                      case "utf-16le":
                        return "utf16le";

                      case "latin1":
                      case "binary":
                        return "latin1";

                      case "base64":
                      case "ascii":
                      case "hex":
                        return t;

                      default:
                        if (e) return;
                        t = ("" + t).toLowerCase(), e = !0;
                    }
                }(t);
                if ("string" != typeof e && (r.isEncoding === n || !n(t))) throw new Error("Unknown encoding: " + t);
                return e || t;
            }(t), this.encoding) {
              case "utf16le":
                this.text = h, this.end = c, e = 4;
                break;

              case "utf8":
                this.fillLast = a, e = 4;
                break;

              case "base64":
                this.text = l, this.end = u, e = 3;
                break;

              default:
                return this.write = f, void (this.end = d);
            }
            this.lastNeed = 0, this.lastTotal = 0, this.lastChar = r.allocUnsafe(e);
        }
        function o(t) {
            return t <= 127 ? 0 : t >> 5 == 6 ? 2 : t >> 4 == 14 ? 3 : t >> 3 == 30 ? 4 : -1;
        }
        function a(t) {
            var e = this.lastTotal - this.lastNeed, i = function(t, e, i) {
                if (128 != (192 & e[0])) return t.lastNeed = 0, "�".repeat(i);
                if (t.lastNeed > 1 && e.length > 1) {
                    if (128 != (192 & e[1])) return t.lastNeed = 1, "�".repeat(i + 1);
                    if (t.lastNeed > 2 && e.length > 2 && 128 != (192 & e[2])) return t.lastNeed = 2, 
                    "�".repeat(i + 2);
                }
            }(this, t, e);
            return void 0 !== i ? i : this.lastNeed <= t.length ? (t.copy(this.lastChar, e, 0, this.lastNeed), 
            this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (t.copy(this.lastChar, e, 0, t.length), 
            void (this.lastNeed -= t.length));
        }
        function h(t, e) {
            if ((t.length - e) % 2 == 0) {
                var i = t.toString("utf16le", e);
                if (i) {
                    var r = i.charCodeAt(i.length - 1);
                    if (r >= 55296 && r <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t[t.length - 2], 
                    this.lastChar[1] = t[t.length - 1], i.slice(0, -1);
                }
                return i;
            }
            return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t[t.length - 1], 
            t.toString("utf16le", e, t.length - 1);
        }
        function c(t) {
            var e = t && t.length ? this.write(t) : "";
            if (this.lastNeed) {
                var i = this.lastTotal - this.lastNeed;
                return e + this.lastChar.toString("utf16le", 0, i);
            }
            return e;
        }
        function l(t, e) {
            var i = (t.length - e) % 3;
            return 0 === i ? t.toString("base64", e) : (this.lastNeed = 3 - i, this.lastTotal = 3, 
            1 === i ? this.lastChar[0] = t[t.length - 1] : (this.lastChar[0] = t[t.length - 2], 
            this.lastChar[1] = t[t.length - 1]), t.toString("base64", e, t.length - i));
        }
        function u(t) {
            var e = t && t.length ? this.write(t) : "";
            return this.lastNeed ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e;
        }
        function f(t) {
            return t.toString(this.encoding);
        }
        function d(t) {
            return t && t.length ? this.write(t) : "";
        }
        e.StringDecoder = s, s.prototype.write = function(t) {
            if (0 === t.length) return "";
            var e, i;
            if (this.lastNeed) {
                if (void 0 === (e = this.fillLast(t))) return "";
                i = this.lastNeed, this.lastNeed = 0;
            } else i = 0;
            return i < t.length ? e ? e + this.text(t, i) : this.text(t, i) : e || "";
        }, s.prototype.end = function(t) {
            var e = t && t.length ? this.write(t) : "";
            return this.lastNeed ? e + "�".repeat(this.lastTotal - this.lastNeed) : e;
        }, s.prototype.text = function(t, e) {
            var i = function(t, e, i) {
                var r = e.length - 1;
                if (r < i) return 0;
                var n = o(e[r]);
                if (n >= 0) return n > 0 && (t.lastNeed = n - 1), n;
                if (--r < i) return 0;
                if ((n = o(e[r])) >= 0) return n > 0 && (t.lastNeed = n - 2), n;
                if (--r < i) return 0;
                if ((n = o(e[r])) >= 0) return n > 0 && (2 === n ? n = 0 : t.lastNeed = n - 3), 
                n;
                return 0;
            }(this, t, e);
            if (!this.lastNeed) return t.toString("utf8", e);
            this.lastTotal = i;
            var r = t.length - (i - this.lastNeed);
            return t.copy(this.lastChar, 0, r), t.toString("utf8", e, r);
        }, s.prototype.fillLast = function(t) {
            if (this.lastNeed <= t.length) return t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), 
            this.lastChar.toString(this.encoding, 0, this.lastTotal);
            t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length), this.lastNeed -= t.length;
        };
    },
    1197: function(t, e, i) {
        "use strict";
        t.exports = o;
        var r = i(661), n = i(795);
        function s(t) {
            this.afterTransform = function(e, i) {
                return function(t, e, i) {
                    var r = t._transformState;
                    r.transforming = !1;
                    var n = r.writecb;
                    if (!n) return t.emit("error", new Error("write callback called multiple times"));
                    r.writechunk = null, r.writecb = null, null !== i && void 0 !== i && t.push(i);
                    n(e);
                    var s = t._readableState;
                    s.reading = !1, (s.needReadable || s.length < s.highWaterMark) && t._read(s.highWaterMark);
                }(t, e, i);
            }, this.needTransform = !1, this.transforming = !1, this.writecb = null, this.writechunk = null, 
            this.writeencoding = null;
        }
        function o(t) {
            if (!(this instanceof o)) return new o(t);
            r.call(this, t), this._transformState = new s(this);
            var e = this;
            this._readableState.needReadable = !0, this._readableState.sync = !1, t && ("function" == typeof t.transform && (this._transform = t.transform), 
            "function" == typeof t.flush && (this._flush = t.flush)), this.once("prefinish", function() {
                "function" == typeof this._flush ? this._flush(function(t, i) {
                    a(e, t, i);
                }) : a(e);
            });
        }
        function a(t, e, i) {
            if (e) return t.emit("error", e);
            null !== i && void 0 !== i && t.push(i);
            var r = t._writableState, n = t._transformState;
            if (r.length) throw new Error("Calling transform done when ws.length != 0");
            if (n.transforming) throw new Error("Calling transform done when still transforming");
            return t.push(null);
        }
        n.inherits = i(796), n.inherits(o, r), o.prototype.push = function(t, e) {
            return this._transformState.needTransform = !1, r.prototype.push.call(this, t, e);
        }, o.prototype._transform = function(t, e, i) {
            throw new Error("_transform() is not implemented");
        }, o.prototype._write = function(t, e, i) {
            var r = this._transformState;
            if (r.writecb = i, r.writechunk = t, r.writeencoding = e, !r.transforming) {
                var n = this._readableState;
                (r.needTransform || n.needReadable || n.length < n.highWaterMark) && this._read(n.highWaterMark);
            }
        }, o.prototype._read = function(t) {
            var e = this._transformState;
            null !== e.writechunk && e.writecb && !e.transforming ? (e.transforming = !0, this._transform(e.writechunk, e.writeencoding, e.afterTransform)) : e.needTransform = !0;
        }, o.prototype._destroy = function(t, e) {
            var i = this;
            r.prototype._destroy.call(this, t, function(t) {
                e(t), i.emit("close");
            });
        };
    },
    1402: function(t, e, i) {
        (function(t, r) {
            var n;
            !function(s) {
                e && e.nodeType, t && t.nodeType;
                var o = "object" == typeof r && r;
                o.global !== o && o.window !== o && o.self;
                var a, h = 2147483647, c = 36, l = 1, u = 26, f = 38, d = 700, p = 72, g = 128, v = "-", b = /^xn--/, _ = /[^\x20-\x7E]/, m = /[\x2E\u3002\uFF0E\uFF61]/g, y = {
                    overflow: "Overflow: input needs wider integers to process",
                    "not-basic": "Illegal input >= 0x80 (not a basic code point)",
                    "invalid-input": "Invalid input"
                }, x = c - l, C = Math.floor, w = String.fromCharCode;
                function S(t) {
                    throw new RangeError(y[t]);
                }
                function O(t, e) {
                    for (var i = t.length, r = []; i--; ) r[i] = e(t[i]);
                    return r;
                }
                function T(t, e) {
                    var i = t.split("@"), r = "";
                    return i.length > 1 && (r = i[0] + "@", t = i[1]), r + O((t = t.replace(m, ".")).split("."), e).join(".");
                }
                function k(t) {
                    for (var e, i, r = [], n = 0, s = t.length; n < s; ) (e = t.charCodeAt(n++)) >= 55296 && e <= 56319 && n < s ? 56320 == (64512 & (i = t.charCodeAt(n++))) ? r.push(((1023 & e) << 10) + (1023 & i) + 65536) : (r.push(e), 
                    n--) : r.push(e);
                    return r;
                }
                function j(t) {
                    return O(t, function(t) {
                        var e = "";
                        return t > 65535 && (e += w((t -= 65536) >>> 10 & 1023 | 55296), t = 56320 | 1023 & t), 
                        e += w(t);
                    }).join("");
                }
                function L(t, e) {
                    return t + 22 + 75 * (t < 26) - ((0 != e) << 5);
                }
                function E(t, e, i) {
                    var r = 0;
                    for (t = i ? C(t / d) : t >> 1, t += C(t / e); t > x * u >> 1; r += c) t = C(t / x);
                    return C(r + (x + 1) * t / (t + f));
                }
                function P(t) {
                    var e, i, r, n, s, o, a, f, d, b, _, m = [], y = t.length, x = 0, w = g, O = p;
                    for ((i = t.lastIndexOf(v)) < 0 && (i = 0), r = 0; r < i; ++r) t.charCodeAt(r) >= 128 && S("not-basic"), 
                    m.push(t.charCodeAt(r));
                    for (n = i > 0 ? i + 1 : 0; n < y; ) {
                        for (s = x, o = 1, a = c; n >= y && S("invalid-input"), ((f = (_ = t.charCodeAt(n++)) - 48 < 10 ? _ - 22 : _ - 65 < 26 ? _ - 65 : _ - 97 < 26 ? _ - 97 : c) >= c || f > C((h - x) / o)) && S("overflow"), 
                        x += f * o, !(f < (d = a <= O ? l : a >= O + u ? u : a - O)); a += c) o > C(h / (b = c - d)) && S("overflow"), 
                        o *= b;
                        O = E(x - s, e = m.length + 1, 0 == s), C(x / e) > h - w && S("overflow"), w += C(x / e), 
                        x %= e, m.splice(x++, 0, w);
                    }
                    return j(m);
                }
                function M(t) {
                    var e, i, r, n, s, o, a, f, d, b, _, m, y, x, O, T = [];
                    for (m = (t = k(t)).length, e = g, i = 0, s = p, o = 0; o < m; ++o) (_ = t[o]) < 128 && T.push(w(_));
                    for (r = n = T.length, n && T.push(v); r < m; ) {
                        for (a = h, o = 0; o < m; ++o) (_ = t[o]) >= e && _ < a && (a = _);
                        for (a - e > C((h - i) / (y = r + 1)) && S("overflow"), i += (a - e) * y, e = a, 
                        o = 0; o < m; ++o) if ((_ = t[o]) < e && ++i > h && S("overflow"), _ == e) {
                            for (f = i, d = c; !(f < (b = d <= s ? l : d >= s + u ? u : d - s)); d += c) O = f - b, 
                            x = c - b, T.push(w(L(b + O % x, 0))), f = C(O / x);
                            T.push(w(L(f, 0))), s = E(i, y, r == n), i = 0, ++r;
                        }
                        ++i, ++e;
                    }
                    return T.join("");
                }
                a = {
                    version: "1.4.1",
                    ucs2: {
                        decode: k,
                        encode: j
                    },
                    decode: P,
                    encode: M,
                    toASCII: function(t) {
                        return T(t, function(t) {
                            return _.test(t) ? "xn--" + M(t) : t;
                        });
                    },
                    toUnicode: function(t) {
                        return T(t, function(t) {
                            return b.test(t) ? P(t.slice(4).toLowerCase()) : t;
                        });
                    }
                }, void 0 === (n = function() {
                    return a;
                }.call(e, i, e, t)) || (t.exports = n);
            }();
        }).call(this, i(39)(t), i(23));
    },
    1403: function(t, e, i) {
        "use strict";
        t.exports = {
            isString: function(t) {
                return "string" == typeof t;
            },
            isObject: function(t) {
                return "object" == typeof t && null !== t;
            },
            isNull: function(t) {
                return null === t;
            },
            isNullOrUndefined: function(t) {
                return null == t;
            }
        };
    },
    1404: function(t, e, i) {
        "use strict";
        e.decode = e.parse = i(1405), e.encode = e.stringify = i(1406);
    },
    1405: function(t, e, i) {
        "use strict";
        function r(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e);
        }
        t.exports = function(t, e, i, s) {
            e = e || "&", i = i || "=";
            var o = {};
            if ("string" != typeof t || 0 === t.length) return o;
            var a = /\+/g;
            t = t.split(e);
            var h = 1e3;
            s && "number" == typeof s.maxKeys && (h = s.maxKeys);
            var c = t.length;
            h > 0 && c > h && (c = h);
            for (var l = 0; l < c; ++l) {
                var u, f, d, p, g = t[l].replace(a, "%20"), v = g.indexOf(i);
                v >= 0 ? (u = g.substr(0, v), f = g.substr(v + 1)) : (u = g, f = ""), d = decodeURIComponent(u), 
                p = decodeURIComponent(f), r(o, d) ? n(o[d]) ? o[d].push(p) : o[d] = [ o[d], p ] : o[d] = p;
            }
            return o;
        };
        var n = Array.isArray || function(t) {
            return "[object Array]" === Object.prototype.toString.call(t);
        };
    },
    1406: function(t, e, i) {
        "use strict";
        var r = function(t) {
            switch (typeof t) {
              case "string":
                return t;

              case "boolean":
                return t ? "true" : "false";

              case "number":
                return isFinite(t) ? t : "";

              default:
                return "";
            }
        };
        t.exports = function(t, e, i, a) {
            return e = e || "&", i = i || "=", null === t && (t = void 0), "object" == typeof t ? s(o(t), function(o) {
                var a = encodeURIComponent(r(o)) + i;
                return n(t[o]) ? s(t[o], function(t) {
                    return a + encodeURIComponent(r(t));
                }).join(e) : a + encodeURIComponent(r(t[o]));
            }).join(e) : a ? encodeURIComponent(r(a)) + i + encodeURIComponent(r(t)) : "";
        };
        var n = Array.isArray || function(t) {
            return "[object Array]" === Object.prototype.toString.call(t);
        };
        function s(t, e) {
            if (t.map) return t.map(e);
            for (var i = [], r = 0; r < t.length; r++) i.push(e(t[r], r));
            return i;
        }
        var o = Object.keys || function(t) {
            var e = [];
            for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && e.push(i);
            return e;
        };
    },
    1407: function(t, e, i) {
        (function(e, r, n) {
            var s = i(1187), o = i(1188), a = i(1189), h = i(1190), c = i(1411), l = a.IncomingMessage, u = a.readyStates;
            var f = t.exports = function(t) {
                var i, r = this;
                h.Writable.call(r), r._opts = t, r._body = [], r._headers = {}, t.auth && r.setHeader("Authorization", "Basic " + new e(t.auth).toString("base64")), 
                Object.keys(t.headers).forEach(function(e) {
                    r.setHeader(e, t.headers[e]);
                });
                var n = !0;
                if ("disable-fetch" === t.mode || "requestTimeout" in t && !s.abortController) n = !1, 
                i = !0; else if ("prefer-streaming" === t.mode) i = !1; else if ("allow-wrong-content-type" === t.mode) i = !s.overrideMimeType; else {
                    if (t.mode && "default" !== t.mode && "prefer-fast" !== t.mode) throw new Error("Invalid value for opts.mode");
                    i = !0;
                }
                r._mode = function(t, e) {
                    return s.fetch && e ? "fetch" : s.mozchunkedarraybuffer ? "moz-chunked-arraybuffer" : s.msstream ? "ms-stream" : s.arraybuffer && t ? "arraybuffer" : s.vbArray && t ? "text:vbarray" : "text";
                }(i, n), r.on("finish", function() {
                    r._onFinish();
                });
            };
            o(f, h.Writable), f.prototype.setHeader = function(t, e) {
                var i = t.toLowerCase();
                -1 === d.indexOf(i) && (this._headers[i] = {
                    name: t,
                    value: e
                });
            }, f.prototype.getHeader = function(t) {
                var e = this._headers[t.toLowerCase()];
                return e ? e.value : null;
            }, f.prototype.removeHeader = function(t) {
                delete this._headers[t.toLowerCase()];
            }, f.prototype._onFinish = function() {
                var t = this;
                if (!t._destroyed) {
                    var i = t._opts, o = t._headers, a = null;
                    "GET" !== i.method && "HEAD" !== i.method && (a = s.arraybuffer ? c(e.concat(t._body)) : s.blobConstructor ? new r.Blob(t._body.map(function(t) {
                        return c(t);
                    }), {
                        type: (o["content-type"] || {}).value || ""
                    }) : e.concat(t._body).toString());
                    var h = [];
                    if (Object.keys(o).forEach(function(t) {
                        var e = o[t].name, i = o[t].value;
                        Array.isArray(i) ? i.forEach(function(t) {
                            h.push([ e, t ]);
                        }) : h.push([ e, i ]);
                    }), "fetch" === t._mode) {
                        var l = null;
                        if (s.abortController) {
                            var f = new AbortController();
                            l = f.signal, t._fetchAbortController = f, "requestTimeout" in i && 0 !== i.requestTimeout && r.setTimeout(function() {
                                t.emit("requestTimeout"), t._fetchAbortController && t._fetchAbortController.abort();
                            }, i.requestTimeout);
                        }
                        r.fetch(t._opts.url, {
                            method: t._opts.method,
                            headers: h,
                            body: a || void 0,
                            mode: "cors",
                            credentials: i.withCredentials ? "include" : "same-origin",
                            signal: l
                        }).then(function(e) {
                            t._fetchResponse = e, t._connect();
                        }, function(e) {
                            t.emit("error", e);
                        });
                    } else {
                        var d = t._xhr = new r.XMLHttpRequest();
                        try {
                            d.open(t._opts.method, t._opts.url, !0);
                        } catch (e) {
                            return void n.nextTick(function() {
                                t.emit("error", e);
                            });
                        }
                        "responseType" in d && (d.responseType = t._mode.split(":")[0]), "withCredentials" in d && (d.withCredentials = !!i.withCredentials), 
                        "text" === t._mode && "overrideMimeType" in d && d.overrideMimeType("text/plain; charset=x-user-defined"), 
                        "requestTimeout" in i && (d.timeout = i.requestTimeout, d.ontimeout = function() {
                            t.emit("requestTimeout");
                        }), h.forEach(function(t) {
                            d.setRequestHeader(t[0], t[1]);
                        }), t._response = null, d.onreadystatechange = function() {
                            switch (d.readyState) {
                              case u.LOADING:
                              case u.DONE:
                                t._onXHRProgress();
                            }
                        }, "moz-chunked-arraybuffer" === t._mode && (d.onprogress = function() {
                            t._onXHRProgress();
                        }), d.onerror = function() {
                            t._destroyed || t.emit("error", new Error("XHR error"));
                        };
                        try {
                            d.send(a);
                        } catch (e) {
                            return void n.nextTick(function() {
                                t.emit("error", e);
                            });
                        }
                    }
                }
            }, f.prototype._onXHRProgress = function() {
                (function(t) {
                    try {
                        var e = t.status;
                        return null !== e && 0 !== e;
                    } catch (t) {
                        return !1;
                    }
                })(this._xhr) && !this._destroyed && (this._response || this._connect(), this._response._onXHRProgress());
            }, f.prototype._connect = function() {
                var t = this;
                t._destroyed || (t._response = new l(t._xhr, t._fetchResponse, t._mode), t._response.on("error", function(e) {
                    t.emit("error", e);
                }), t.emit("response", t._response));
            }, f.prototype._write = function(t, e, i) {
                this._body.push(t), i();
            }, f.prototype.abort = f.prototype.destroy = function() {
                this._destroyed = !0, this._response && (this._response._destroyed = !0), this._xhr ? this._xhr.abort() : this._fetchAbortController && this._fetchAbortController.abort();
            }, f.prototype.end = function(t, e, i) {
                "function" == typeof t && (i = t, t = void 0), h.Writable.prototype.end.call(this, t, e, i);
            }, f.prototype.flushHeaders = function() {}, f.prototype.setTimeout = function() {}, 
            f.prototype.setNoDelay = function() {}, f.prototype.setSocketKeepAlive = function() {};
            var d = [ "accept-charset", "accept-encoding", "access-control-request-headers", "access-control-request-method", "connection", "content-length", "cookie", "cookie2", "date", "dnt", "expect", "host", "keep-alive", "origin", "referer", "te", "trailer", "transfer-encoding", "upgrade", "user-agent", "via" ];
        }).call(this, i(119).Buffer, i(23), i(532));
    },
    1408: function(t, e, i) {
        "use strict";
        var r = i(837).Buffer;
        t.exports = function() {
            function t() {
                !function(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                }(this, t), this.head = null, this.tail = null, this.length = 0;
            }
            return t.prototype.push = function(t) {
                var e = {
                    data: t,
                    next: null
                };
                this.length > 0 ? this.tail.next = e : this.head = e, this.tail = e, ++this.length;
            }, t.prototype.unshift = function(t) {
                var e = {
                    data: t,
                    next: this.head
                };
                0 === this.length && (this.tail = e), this.head = e, ++this.length;
            }, t.prototype.shift = function() {
                if (0 !== this.length) {
                    var t = this.head.data;
                    return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, 
                    --this.length, t;
                }
            }, t.prototype.clear = function() {
                this.head = this.tail = null, this.length = 0;
            }, t.prototype.join = function(t) {
                if (0 === this.length) return "";
                for (var e = this.head, i = "" + e.data; e = e.next; ) i += t + e.data;
                return i;
            }, t.prototype.concat = function(t) {
                if (0 === this.length) return r.alloc(0);
                if (1 === this.length) return this.head.data;
                for (var e, i, n, s = r.allocUnsafe(t >>> 0), o = this.head, a = 0; o; ) e = o.data, 
                i = s, n = a, e.copy(i, n), a += o.data.length, o = o.next;
                return s;
            }, t;
        }();
    },
    1409: function(t, e, i) {
        (function(e) {
            function i(t) {
                try {
                    if (!e.localStorage) return !1;
                } catch (t) {
                    return !1;
                }
                var i = e.localStorage[t];
                return null != i && "true" === String(i).toLowerCase();
            }
            t.exports = function(t, e) {
                if (i("noDeprecation")) return t;
                var r = !1;
                return function() {
                    if (!r) {
                        if (i("throwDeprecation")) throw new Error(e);
                        i("traceDeprecation") ? console.trace(e) : console.warn(e), r = !0;
                    }
                    return t.apply(this, arguments);
                };
            };
        }).call(this, i(23));
    },
    1410: function(t, e, i) {
        "use strict";
        t.exports = s;
        var r = i(1197), n = i(795);
        function s(t) {
            if (!(this instanceof s)) return new s(t);
            r.call(this, t);
        }
        n.inherits = i(796), n.inherits(s, r), s.prototype._transform = function(t, e, i) {
            i(null, t);
        };
    },
    1411: function(t, e, i) {
        var r = i(119).Buffer;
        t.exports = function(t) {
            if (t instanceof Uint8Array) {
                if (0 === t.byteOffset && t.byteLength === t.buffer.byteLength) return t.buffer;
                if ("function" == typeof t.buffer.slice) return t.buffer.slice(t.byteOffset, t.byteOffset + t.byteLength);
            }
            if (r.isBuffer(t)) {
                for (var e = new Uint8Array(t.length), i = t.length, n = 0; n < i; n++) e[n] = t[n];
                return e.buffer;
            }
            throw new Error("Argument must be a Buffer");
        };
    },
    1412: function(t, e) {
        t.exports = function() {
            for (var t = {}, e = 0; e < arguments.length; e++) {
                var r = arguments[e];
                for (var n in r) i.call(r, n) && (t[n] = r[n]);
            }
            return t;
        };
        var i = Object.prototype.hasOwnProperty;
    },
    1413: function(t, e) {
        t.exports = {
            100: "Continue",
            101: "Switching Protocols",
            102: "Processing",
            200: "OK",
            201: "Created",
            202: "Accepted",
            203: "Non-Authoritative Information",
            204: "No Content",
            205: "Reset Content",
            206: "Partial Content",
            207: "Multi-Status",
            208: "Already Reported",
            226: "IM Used",
            300: "Multiple Choices",
            301: "Moved Permanently",
            302: "Found",
            303: "See Other",
            304: "Not Modified",
            305: "Use Proxy",
            307: "Temporary Redirect",
            308: "Permanent Redirect",
            400: "Bad Request",
            401: "Unauthorized",
            402: "Payment Required",
            403: "Forbidden",
            404: "Not Found",
            405: "Method Not Allowed",
            406: "Not Acceptable",
            407: "Proxy Authentication Required",
            408: "Request Timeout",
            409: "Conflict",
            410: "Gone",
            411: "Length Required",
            412: "Precondition Failed",
            413: "Payload Too Large",
            414: "URI Too Long",
            415: "Unsupported Media Type",
            416: "Range Not Satisfiable",
            417: "Expectation Failed",
            418: "I'm a teapot",
            421: "Misdirected Request",
            422: "Unprocessable Entity",
            423: "Locked",
            424: "Failed Dependency",
            425: "Unordered Collection",
            426: "Upgrade Required",
            428: "Precondition Required",
            429: "Too Many Requests",
            431: "Request Header Fields Too Large",
            451: "Unavailable For Legal Reasons",
            500: "Internal Server Error",
            501: "Not Implemented",
            502: "Bad Gateway",
            503: "Service Unavailable",
            504: "Gateway Timeout",
            505: "HTTP Version Not Supported",
            506: "Variant Also Negotiates",
            507: "Insufficient Storage",
            508: "Loop Detected",
            509: "Bandwidth Limit Exceeded",
            510: "Not Extended",
            511: "Network Authentication Required"
        };
    },
    1414: function(t, e, i) {
        var r = i(1186), n = i(1003), s = t.exports;
        for (var o in r) r.hasOwnProperty(o) && (s[o] = r[o]);
        function a(t) {
            if ("string" == typeof t && (t = n.parse(t)), t.protocol || (t.protocol = "https:"), 
            "https:" !== t.protocol) throw new Error('Protocol "' + t.protocol + '" not supported. Expected "https:"');
            return t;
        }
        s.request = function(t, e) {
            return t = a(t), r.request.call(this, t, e);
        }, s.get = function(t, e) {
            return t = a(t), r.get.call(this, t, e);
        };
    },
    247: function(t, e, i) {
        var r, n;
        r = [ i(141), i(173), i(617), i(792) ], void 0 === (n = function(t, e, i, r) {
            "use strict";
            return e.extend({
                init: function() {
                    this._super.apply(this, arguments), this.on("postrender", this._mapEvents);
                },
                template: function(t) {
                    return this.mustache && this.mustache(t, this.partials);
                },
                destroy: function() {
                    this._undelegateEvents(), this._super();
                }
            }, {
                domify: t
            }).mixin(i).mixin(r);
        }.apply(e, r)) || (t.exports = n);
    },
    660: function(t, e, i) {
        var r, n;
        r = [ i(141), i(242), i(617), i(791), i(174), i(247) ], void 0 === (n = function(t, e, i, r, n, s) {
            "use strict";
            return n.extend({
                init: function(i, r) {
                    var n, s;
                    (function(t, e) {
                        return void 0 === e || "object" == typeof t;
                    })(i, r) && (r = i, i = void 0), "string" == typeof r && (n = (s = t(r))[0]), r instanceof t && (n = (s = r)[0]), 
                    r instanceof window.Element && (s = t(n = r)), s && (r = e({}, n.dataset || s.data())), 
                    this._super(i, r), this._view.$view = s, s && this._view.trigger("postrender", s);
                }
            }, {
                VIEW_CLASS: s
            }).mixin(i).mixin(r);
        }.apply(e, r)) || (t.exports = n);
    },
    661: function(t, e, i) {
        "use strict";
        var r = i(836), n = Object.keys || function(t) {
            var e = [];
            for (var i in t) e.push(i);
            return e;
        };
        t.exports = u;
        var s = i(795);
        s.inherits = i(796);
        var o = i(1191), a = i(1195);
        s.inherits(u, o);
        for (var h = n(a.prototype), c = 0; c < h.length; c++) {
            var l = h[c];
            u.prototype[l] || (u.prototype[l] = a.prototype[l]);
        }
        function u(t) {
            if (!(this instanceof u)) return new u(t);
            o.call(this, t), a.call(this, t), t && !1 === t.readable && (this.readable = !1), 
            t && !1 === t.writable && (this.writable = !1), this.allowHalfOpen = !0, t && !1 === t.allowHalfOpen && (this.allowHalfOpen = !1), 
            this.once("end", f);
        }
        function f() {
            this.allowHalfOpen || this._writableState.ended || r(d, this);
        }
        function d(t) {
            t.end();
        }
        Object.defineProperty(u.prototype, "destroyed", {
            get: function() {
                return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed);
            },
            set: function(t) {
                void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = t, 
                this._writableState.destroyed = t);
            }
        }), u.prototype._destroy = function(t, e) {
            this.push(null), this.end(), r(e, t);
        };
    },
    793: function(t, e, i) {
        var r, n;
        r = [ i(309), i(69), i(1180) ], void 0 === (n = function(t, e, i) {
            "use strict";
            return e.extend({
                image: null,
                init: function(t) {
                    var e = this;
                    this.image = t || new window.Image(), this.image.onload = function() {
                        e.trigger("load", this);
                    }, this.image.onerror = function() {
                        e.trigger("error", arguments);
                    };
                },
                isComplete: function() {
                    return this.image.complete && this.image.src;
                },
                displayWidth: function() {
                    return this.image.width;
                },
                displayHeight: function() {
                    return this.image.height;
                },
                width: function() {
                    return this.image.naturalWidth;
                },
                height: function() {
                    return this.image.naturalHeight;
                },
                src: function(t) {
                    this.image.src = t;
                },
                isAnimatedGif: function() {
                    return i.isAnimatedGif(this._getBinaryData());
                },
                isCMYK: function() {
                    return i.isCMYK(this._getBinaryData());
                },
                _getBinaryData: function() {
                    if (0 !== this.image.src.indexOf("data:")) throw new Error("src attribute is not a data-uri");
                    var t = this.image.src.split(",")[1];
                    return window.atob(t);
                }
            }, {
                getDimensions: function(e) {
                    var i = this;
                    return new t(function(t, r) {
                        var n = new i();
                        n.on("load", function() {
                            t({
                                displayWidth: n.displayWidth(),
                                displayHeight: n.displayHeight(),
                                width: n.width(),
                                height: n.height()
                            });
                        }).on("error", function() {
                            r(arguments);
                        }).src(e);
                    });
                },
                whenComplete: function(e) {
                    var i = this;
                    return new t(function(t) {
                        var r = new i(e);
                        r.isComplete() ? t() : r.on("load error", t);
                    });
                },
                load: function(e) {
                    var i = this;
                    return new t(function(t, r) {
                        var n = new i();
                        n.on("load", function() {
                            return t(n);
                        }).on("error", r).src(e);
                    });
                }
            });
        }.apply(e, r)) || (t.exports = n);
    },
    795: function(t, e, i) {
        (function(t) {
            function i(t) {
                return Object.prototype.toString.call(t);
            }
            e.isArray = function(t) {
                return Array.isArray ? Array.isArray(t) : "[object Array]" === i(t);
            }, e.isBoolean = function(t) {
                return "boolean" == typeof t;
            }, e.isNull = function(t) {
                return null === t;
            }, e.isNullOrUndefined = function(t) {
                return null == t;
            }, e.isNumber = function(t) {
                return "number" == typeof t;
            }, e.isString = function(t) {
                return "string" == typeof t;
            }, e.isSymbol = function(t) {
                return "symbol" == typeof t;
            }, e.isUndefined = function(t) {
                return void 0 === t;
            }, e.isRegExp = function(t) {
                return "[object RegExp]" === i(t);
            }, e.isObject = function(t) {
                return "object" == typeof t && null !== t;
            }, e.isDate = function(t) {
                return "[object Date]" === i(t);
            }, e.isError = function(t) {
                return "[object Error]" === i(t) || t instanceof Error;
            }, e.isFunction = function(t) {
                return "function" == typeof t;
            }, e.isPrimitive = function(t) {
                return null === t || "boolean" == typeof t || "number" == typeof t || "string" == typeof t || "symbol" == typeof t || void 0 === t;
            }, e.isBuffer = t.isBuffer;
        }).call(this, i(119).Buffer);
    },
    796: function(t, e) {
        "function" == typeof Object.create ? t.exports = function(t, e) {
            t.super_ = e, t.prototype = Object.create(e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            });
        } : t.exports = function(t, e) {
            t.super_ = e;
            var i = function() {};
            i.prototype = e.prototype, t.prototype = new i(), t.prototype.constructor = t;
        };
    },
    836: function(t, e, i) {
        "use strict";
        (function(e) {
            !e.version || 0 === e.version.indexOf("v0.") || 0 === e.version.indexOf("v1.") && 0 !== e.version.indexOf("v1.8.") ? t.exports = function(t, i, r, n) {
                if ("function" != typeof t) throw new TypeError('"callback" argument must be a function');
                var s, o, a = arguments.length;
                switch (a) {
                  case 0:
                  case 1:
                    return e.nextTick(t);

                  case 2:
                    return e.nextTick(function() {
                        t.call(null, i);
                    });

                  case 3:
                    return e.nextTick(function() {
                        t.call(null, i, r);
                    });

                  case 4:
                    return e.nextTick(function() {
                        t.call(null, i, r, n);
                    });

                  default:
                    for (s = new Array(a - 1), o = 0; o < s.length; ) s[o++] = arguments[o];
                    return e.nextTick(function() {
                        t.apply(null, s);
                    });
                }
            } : t.exports = e.nextTick;
        }).call(this, i(532));
    },
    837: function(t, e, i) {
        var r = i(119), n = r.Buffer;
        function s(t, e) {
            for (var i in t) e[i] = t[i];
        }
        function o(t, e, i) {
            return n(t, e, i);
        }
        n.from && n.alloc && n.allocUnsafe && n.allocUnsafeSlow ? t.exports = r : (s(r, e), 
        e.Buffer = o), s(n, o), o.from = function(t, e, i) {
            if ("number" == typeof t) throw new TypeError("Argument must not be a number");
            return n(t, e, i);
        }, o.alloc = function(t, e, i) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            var r = n(t);
            return void 0 !== e ? "string" == typeof i ? r.fill(e, i) : r.fill(e) : r.fill(0), 
            r;
        }, o.allocUnsafe = function(t) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            return n(t);
        }, o.allocUnsafeSlow = function(t) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            return r.SlowBuffer(t);
        };
    }
} ]);